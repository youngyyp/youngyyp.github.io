<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>youngyyp&#39;s blog</title>
  
  <subtitle>慢慢来，比较快</subtitle>
  <link href="https://youngyyp.github.io/atom.xml" rel="self"/>
  
  <link href="https://youngyyp.github.io/"/>
  <updated>2021-03-13T13:52:31.788Z</updated>
  <id>https://youngyyp.github.io/</id>
  
  <author>
    <name>杨业鹏</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://youngyyp.github.io/2021/03/13/test/"/>
    <id>https://youngyyp.github.io/2021/03/13/test/</id>
    <published>2021-03-13T13:11:30.077Z</published>
    <updated>2021-03-13T13:52:31.788Z</updated>
    
    <content type="html"><![CDATA[<div class="pdfobject-container" data-target="https://yzb.sjtu.edu.cn/2019.pdf" data-height="500px"></div> <div class="pdfobject-container" data-target="./test.pdf" data-height="500px"></div> <div class="pdfobject-container" data-target="test.pdf" data-height="500px"></div> ]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;pdfobject-container&quot; data-target=&quot;https://yzb.sjtu.edu.cn/2019.pdf&quot; data-height=&quot;500px&quot;&gt;&lt;/div&gt; 

&lt;div class=&quot;pdfobject-container</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>【电赛】线路负载及故障检测装置</title>
    <link href="https://youngyyp.github.io/2021/03/13/%E3%80%90%E7%94%B5%E8%B5%9B%E3%80%91%E7%BA%BF%E8%B7%AF%E8%B4%9F%E8%BD%BD%E5%8F%8A%E6%95%85%E9%9A%9C%E6%A3%80%E6%B5%8B%E8%A3%85%E7%BD%AE/"/>
    <id>https://youngyyp.github.io/2021/03/13/%E3%80%90%E7%94%B5%E8%B5%9B%E3%80%91%E7%BA%BF%E8%B7%AF%E8%B4%9F%E8%BD%BD%E5%8F%8A%E6%95%85%E9%9A%9C%E6%A3%80%E6%B5%8B%E8%A3%85%E7%BD%AE/</id>
    <published>2021-03-13T12:43:36.000Z</published>
    <updated>2021-03-13T13:10:23.126Z</updated>
    
    <content type="html"><![CDATA[<p> 测试</p><div class="pdfobject-container" data-target="线路负载及故障检测装置作品报告.pdf" data-height="500px"></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 测试&lt;/p&gt;
&lt;div class=&quot;pdfobject-container&quot; data-target=&quot;线路负载及故障检测装置作品报告.pdf&quot; data-height=&quot;500px&quot;&gt;&lt;/div&gt;

</summary>
      
    
    
    
    <category term="电赛" scheme="https://youngyyp.github.io/categories/%E7%94%B5%E8%B5%9B/"/>
    
    
    <category term="线路故障检测" scheme="https://youngyyp.github.io/tags/%E7%BA%BF%E8%B7%AF%E6%95%85%E9%9A%9C%E6%A3%80%E6%B5%8B/"/>
    
    <category term="自平衡电桥" scheme="https://youngyyp.github.io/tags/%E8%87%AA%E5%B9%B3%E8%A1%A1%E7%94%B5%E6%A1%A5/"/>
    
    <category term="正交解调" scheme="https://youngyyp.github.io/tags/%E6%AD%A3%E4%BA%A4%E8%A7%A3%E8%B0%83/"/>
    
  </entry>
  
  <entry>
    <title>毕业设计——基于Atlas_200_DK的障碍物识别系统设计与实现</title>
    <link href="https://youngyyp.github.io/2021/03/12/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EAtlas-200-DK%E7%9A%84%E9%9A%9C%E7%A2%8D%E7%89%A9%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/"/>
    <id>https://youngyyp.github.io/2021/03/12/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EAtlas-200-DK%E7%9A%84%E9%9A%9C%E7%A2%8D%E7%89%A9%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/</id>
    <published>2021-03-12T11:20:57.000Z</published>
    <updated>2021-03-13T13:17:02.363Z</updated>
    
    <content type="html"><![CDATA[<h2 id="开题答辩——2021-3-12"><a href="#开题答辩——2021-3-12" class="headerlink" title="开题答辩——2021/3/12"></a>开题答辩——2021/3/12</h2><p>毕业设计的题目是《基于<strong>Atlas 200 DK</strong>的障碍物识别系统设计与实现》，今天进行了开题答辩，感觉还不错。（就算啥也不会，也要能说的很牛逼才行。只要抓住了评审的点就可以顺利通过）</p><p>这个项目的创新点其实就是华为的Atlas 200 DK设备（Atlas 200 DK 开发者套件是一款高性能AI应用开发板，集成了昇腾310 AI处理器，方便用户快速开发、快速验证，可广泛应用于开发者方案验证、高校教育、科学研究等场景。）怎么说也卖3999元呢，希望后面不要有太多的坑。</p><p>下一步的计划肯定是先拿到这个开发板，然后把一切环境都配置好。后面会再这里记录一下使用Atlas 200 DK的过程以及碰到的一些坑。</p><a id="more"></a>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;开题答辩——2021-3-12&quot;&gt;&lt;a href=&quot;#开题答辩——2021-3-12&quot; class=&quot;headerlink&quot; title=&quot;开题答辩——2021/3/12&quot;&gt;&lt;/a&gt;开题答辩——2021/3/12&lt;/h2&gt;&lt;p&gt;毕业设计的题目是《基于&lt;strong&gt;Atlas 200 DK&lt;/strong&gt;的障碍物识别系统设计与实现》，今天进行了开题答辩，感觉还不错。（就算啥也不会，也要能说的很牛逼才行。只要抓住了评审的点就可以顺利通过）&lt;/p&gt;
&lt;p&gt;这个项目的创新点其实就是华为的Atlas 200 DK设备（Atlas 200 DK 开发者套件是一款高性能AI应用开发板，集成了昇腾310 AI处理器，方便用户快速开发、快速验证，可广泛应用于开发者方案验证、高校教育、科学研究等场景。）怎么说也卖3999元呢，希望后面不要有太多的坑。&lt;/p&gt;
&lt;p&gt;下一步的计划肯定是先拿到这个开发板，然后把一切环境都配置好。后面会再这里记录一下使用Atlas 200 DK的过程以及碰到的一些坑。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://youngyyp.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="深度学习" scheme="https://youngyyp.github.io/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="神经网络" scheme="https://youngyyp.github.io/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
    <category term="Atlas" scheme="https://youngyyp.github.io/tags/Atlas/"/>
    
    <category term="障碍物识别" scheme="https://youngyyp.github.io/tags/%E9%9A%9C%E7%A2%8D%E7%89%A9%E8%AF%86%E5%88%AB/"/>
    
    <category term="目标识别" scheme="https://youngyyp.github.io/tags/%E7%9B%AE%E6%A0%87%E8%AF%86%E5%88%AB/"/>
    
  </entry>
  
  <entry>
    <title>吴恩达深度学习课程作业</title>
    <link href="https://youngyyp.github.io/2021/03/02/%E5%90%B4%E6%81%A9%E8%BE%BE%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B%E4%BD%9C%E4%B8%9A/"/>
    <id>https://youngyyp.github.io/2021/03/02/%E5%90%B4%E6%81%A9%E8%BE%BE%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B%E4%BD%9C%E4%B8%9A/</id>
    <published>2021-03-02T08:48:51.000Z</published>
    <updated>2021-03-12T12:15:26.149Z</updated>
    
    <content type="html"><![CDATA[<p>笔记目录<a href="http://www.ai-start.com/dl2017/">http://www.ai-start.com/dl2017/</a></p><p>课后习题1（仅含选择题，界面更好）<a href="https://www.kesci.com/mw/project/5e20243e2823a10036b542da">https://www.kesci.com/mw/project/5e20243e2823a10036b542da</a></p><p>课后习题2（含选择题和编程题）<a href="https://blog.csdn.net/u013733326/article/details/79827273">https://blog.csdn.net/u013733326/article/details/79827273</a></p><h2 id="第一节后作业"><a href="#第一节后作业" class="headerlink" title="第一节后作业"></a>第一节后作业</h2><p>我的答案：D AC ABD A C A B ACD B AB  </p><p>标准答案：1.D 2.AC 3.ABD 4.<strong>B</strong> 5.C 6.<strong>B</strong> 7.B 8.<strong>AC</strong> 9.B 10.AB</p><p>改错：</p><p>4.</p><p><em>结构化数据</em></p><p>结构化数据是数据的<em>数据库</em>(<em>即行数据,存储在数据库里,可以用二维表结构来逻辑表达实现的数据</em>)</p><p><em>非结构化数据</em></p><p>非结构化数据,包括所有格式的办公文档、文本、图片、XML、HTML、各类报表、图像和音频/视频信息等等</p><p>8.</p><p>CNN、RNN、DNN区别 —— <a href="https://blog.csdn.net/lff1208/article/details/77717149">https://blog.csdn.net/lff1208/article/details/77717149</a> </p><a id="more"></a><h2 id="第二节课后作业"><a href="#第二节课后作业" class="headerlink" title="第二节课后作业"></a>第二节课后作业</h2><p>我的答案：11.B 12.D 13.B 14.C 15.C 16.C 17.C 18.B 19.C 20.B</p><p>标准答案：11.B 12.D 13.B 14.C 15.<strong>D</strong> 16.C 17.C 18.B 19.<strong>A</strong> 20.B</p><p>改错：</p><pre><code>15：</code></pre><pre><code>a = np.random.randn(4, 3) # a.shape = (4, 3)b = np.random.randn(3, 2) # b.shape = (3, 2)c = a * b</code></pre><p>运算符 “*” 说明了<strong>按元素乘法</strong>来相乘，但是元素乘法需要两个矩阵之间的维数相同，所以这将报错，无法计算。</p><pre><code>19：</code></pre><pre><code>a = np.random.randn(3, 3)b = np.random.randn(3, 1)c = a * b</code></pre><p>这将会使用广播机制，b会被复制三次，就会变成(3,3)，再使用<strong>元素乘法</strong>。所以： <code>c.shape = (3, 3)</code></p><h3 id="第三节课后作业"><a href="#第三节课后作业" class="headerlink" title="第三节课后作业"></a>第三节课后作业</h3><p>我的答案：21.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;笔记目录&lt;a href=&quot;http://www.ai-start.com/dl2017/&quot;&gt;http://www.ai-start.com/dl2017/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;课后习题1（仅含选择题，界面更好）&lt;a href=&quot;https://www.kesci.com/mw/project/5e20243e2823a10036b542da&quot;&gt;https://www.kesci.com/mw/project/5e20243e2823a10036b542da&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;课后习题2（含选择题和编程题）&lt;a href=&quot;https://blog.csdn.net/u013733326/article/details/79827273&quot;&gt;https://blog.csdn.net/u013733326/article/details/79827273&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;第一节后作业&quot;&gt;&lt;a href=&quot;#第一节后作业&quot; class=&quot;headerlink&quot; title=&quot;第一节后作业&quot;&gt;&lt;/a&gt;第一节后作业&lt;/h2&gt;&lt;p&gt;我的答案：D AC ABD A C A B ACD B AB  &lt;/p&gt;
&lt;p&gt;标准答案：1.D 2.AC 3.ABD 4.&lt;strong&gt;B&lt;/strong&gt; 5.C 6.&lt;strong&gt;B&lt;/strong&gt; 7.B 8.&lt;strong&gt;AC&lt;/strong&gt; 9.B 10.AB&lt;/p&gt;
&lt;p&gt;改错：&lt;/p&gt;
&lt;p&gt;4.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;结构化数据&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;结构化数据是数据的&lt;em&gt;数据库&lt;/em&gt;(&lt;em&gt;即行数据,存储在数据库里,可以用二维表结构来逻辑表达实现的数据&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;非结构化数据&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;非结构化数据,包括所有格式的办公文档、文本、图片、XML、HTML、各类报表、图像和音频/视频信息等等&lt;/p&gt;
&lt;p&gt;8.&lt;/p&gt;
&lt;p&gt;CNN、RNN、DNN区别 —— &lt;a href=&quot;https://blog.csdn.net/lff1208/article/details/77717149&quot;&gt;https://blog.csdn.net/lff1208/article/details/77717149&lt;/a&gt; &lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://youngyyp.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="深度学习" scheme="https://youngyyp.github.io/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="神经网络" scheme="https://youngyyp.github.io/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>常用hexo博客操作</title>
    <link href="https://youngyyp.github.io/2021/02/12/%E5%B8%B8%E7%94%A8hexo%E5%8D%9A%E5%AE%A2%E6%93%8D%E4%BD%9C/"/>
    <id>https://youngyyp.github.io/2021/02/12/%E5%B8%B8%E7%94%A8hexo%E5%8D%9A%E5%AE%A2%E6%93%8D%E4%BD%9C/</id>
    <published>2021-02-12T05:14:45.000Z</published>
    <updated>2021-03-13T13:56:33.702Z</updated>
    
    <content type="html"><![CDATA[<h3 id="常用hexo指令"><a href="#常用hexo指令" class="headerlink" title="常用hexo指令"></a>常用hexo指令</h3><p><strong>hexo s</strong> (hexo server) : 启动本地服务器，用于预览主题。默认地址： <a href="http://localhost:4000/">http://localhost:4000/</a></p><p><strong>hexo g</strong> (hexo generate) : 生成网站静态文件到默认设置的 public 文件夹。</p><p><strong>hexo d</strong> (hexo deploy) : 自动生成网站静态文件，并部署到设定的仓库。</p><p><strong>hexo clean</strong> : 清除缓存文件 db.json 和已生成的静态文件 public。</p><p><strong>hexo new</strong> + md文件名称 ：会在/source/__posts目录下生成md文件以及创建同名的文件夹。</p><p><strong>hexo new page</strong> + 页面名称 ：新建一个页面，默认地址为 主页地址/页面名称。</p><a id="more"></a><h3 id="设置hexo首页只显示部分摘要（不显示全文）"><a href="#设置hexo首页只显示部分摘要（不显示全文）" class="headerlink" title="设置hexo首页只显示部分摘要（不显示全文）"></a>设置hexo首页只显示部分摘要（不显示全文）</h3><p>法一：在文章的<code>front-matter</code>中添加<code>description</code>，其中<code>description</code>中的内容就会被显示在首页上，其余一律不显示。</p><pre><code>---title: 让首页显示部分内容date: 2020-02-23 22:55:10description: 这是显示在首页的概述，正文内容均会被隐藏。---</code></pre><p>法二：在需要截断的地方加入：</p><pre><code>&lt;!--more--&gt;</code></pre><p>首页就会显示这条以上的所有内容，隐藏接下来的所有内容。</p><h3 id="好用的插件"><a href="#好用的插件" class="headerlink" title="好用的插件"></a>好用的插件</h3><p>隐藏文章的插件<a href="https://github.com/printempw/hexo-hide-posts">https://github.com/printempw/hexo-hide-posts</a></p><p>hexo显示pdf<a href="https://blog.csdn.net/qq_43701912/article/details/107291518">https://blog.csdn.net/qq_43701912/article/details/107291518</a>  </p><div class="pdfobject-container" data-target="filename.pdf" data-height="500px"></div><p></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;常用hexo指令&quot;&gt;&lt;a href=&quot;#常用hexo指令&quot; class=&quot;headerlink&quot; title=&quot;常用hexo指令&quot;&gt;&lt;/a&gt;常用hexo指令&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;hexo s&lt;/strong&gt; (hexo server) : 启动本地服务器，用于预览主题。默认地址： &lt;a href=&quot;http://localhost:4000/&quot;&gt;http://localhost:4000/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;hexo g&lt;/strong&gt; (hexo generate) : 生成网站静态文件到默认设置的 public 文件夹。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;hexo d&lt;/strong&gt; (hexo deploy) : 自动生成网站静态文件，并部署到设定的仓库。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;hexo clean&lt;/strong&gt; : 清除缓存文件 db.json 和已生成的静态文件 public。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;hexo new&lt;/strong&gt; + md文件名称 ：会在/source/__posts目录下生成md文件以及创建同名的文件夹。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;hexo new page&lt;/strong&gt; + 页面名称 ：新建一个页面，默认地址为 主页地址/页面名称。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://youngyyp.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="hexo指令" scheme="https://youngyyp.github.io/tags/hexo%E6%8C%87%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>吴恩达深度学习课程第一课_神经网络与深度学习</title>
    <link href="https://youngyyp.github.io/2021/02/09/%E5%90%B4%E6%81%A9%E8%BE%BE%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%80%E8%AF%BE_%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%B8%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    <id>https://youngyyp.github.io/2021/02/09/%E5%90%B4%E6%81%A9%E8%BE%BE%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%80%E8%AF%BE_%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%B8%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-02-09T15:44:01.000Z</published>
    <updated>2021-03-12T12:15:30.256Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一周-深度学习引言"><a href="#第一周-深度学习引言" class="headerlink" title="第一周:深度学习引言"></a>第一周:深度学习引言</h1><p>笔记目录<a href="http://www.ai-start.com/dl2017/">http://www.ai-start.com/dl2017/</a></p><p>课后习题1（仅含选择题，不过界面更好）<a href="https://www.kesci.com/mw/project/5e20243e2823a10036b542da">https://www.kesci.com/mw/project/5e20243e2823a10036b542da</a></p><p>课后习题2（含选择题和编程题）<a href="https://blog.csdn.net/u013733326/article/details/79827273">https://blog.csdn.net/u013733326/article/details/79827273</a></p><h3 id="神经网络简述"><a href="#神经网络简述" class="headerlink" title="神经网络简述"></a>神经网络简述</h3><p>在有关神经网络的文献中，你经常看得到这个函数。从趋近于零开始，然后变成一条直线。这个函数被称作<strong>ReLU激活函数</strong>，它的全称是Rectified Linear Unit。</p><p>对于图像应用，我们经常在神经网络上使用<strong>卷积</strong>(Convolutional Neural Network)，通常缩写为<strong>CNN</strong><br>对于序列数据，经常使用<strong>RNN</strong>，一种<strong>递归神经网络</strong>（Recurrent Neural Network）</p><p><strong>结构化数据</strong>意味着数据的基本数据库。例如在房价预测中，你可能有一个数据库，有专门的几列数据告诉你卧室的大小和数量，这就是结构化数据。或预测用户是否会点击广告，你可能会得到关于用户的信息，比如年龄以及关于广告的一些信息，然后对你的预测分类标注，这就是结构化数据，意思是每个特征，比如说房屋大小卧室数量，或者是一个用户的年龄，都有一个很好的定义。</p><p><strong>非结构化数据</strong>是指比如音频，原始音频或者你想要识别的图像或文本中的内容。这里的特征可能是图像中的像素值或文本中的单个单词。</p><a id="more"></a><h1 id="第二周：神经网络的编程基础"><a href="#第二周：神经网络的编程基础" class="headerlink" title="第二周：神经网络的编程基础"></a>第二周：神经网络的编程基础</h1><p><strong>逻辑回归</strong>(Logistic Regression)是一个用于<strong>二分类</strong>(binary classification)的算法。首先我们从一个问题开始说起，这里有一个二分类问题的例子，假如你有一张图片作为输入，比如这只猫，如果识别这张图片为猫，则输出标签1作为结果；如果识别出不是猫，那么输出标签0作为结果。</p><p><img src="https://raw.githubusercontent.com/youngyyp/blogpicture/master/img/image-20210130230331844.png" alt="image-20210130230331844"></p><p>本节主要介绍逻辑回归的<strong>Hypothesis Function</strong>（假设函数）</p><p><img src="https://raw.githubusercontent.com/youngyyp/blogpicture/master/img/image-20210130170346158.png" alt="image-20210130170346158"></p><p>逻辑回归的<strong>代价函数</strong>（Logistic Regression Cost Function）</p><p>我们通过这个称为的损失函数，来衡量预测输出值和实际值有多接近。一般我们用预测值和实际值的平方差或者它们平方差的一半，但是通常在逻辑回归中我们不这么做，因为当我们在学习逻辑回归参数的时候，会发现我们的优化目标不是凸优化，只能找到多个局部最优值，梯度下降法很可能找不到全局最优值，虽然平方差是一个不错的损失函数，但是我们在逻辑回归模型中会定义另外一个损失函数。</p><p>我们在逻辑回归中用到的<strong>损失函数</strong>是：<img src="https://raw.githubusercontent.com/youngyyp/blogpicture/master/img/image-20210130232244430.png" alt="image-20210130232244430"></p><p><strong>损失函数是单个样本的损失，成本函数是数据集总的损失，都是越小越好。</strong></p><h3 id="梯度下降法（Gradient-Descent）"><a href="#梯度下降法（Gradient-Descent）" class="headerlink" title="梯度下降法（Gradient Descent）"></a>梯度下降法（Gradient Descent）</h3><p><img src="https://raw.githubusercontent.com/youngyyp/blogpicture/master/img/image-20210130232432229.png" alt="image-20210130232432229"></p><h3 id="Python-中的广播（Broadcasting-in-Python）"><a href="#Python-中的广播（Broadcasting-in-Python）" class="headerlink" title="Python 中的广播（Broadcasting in Python）"></a>Python 中的广播（Broadcasting in Python）</h3><p>numpy两个数组的相加、相减以及相乘都是<strong>对应元素</strong>之间的操作。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;第一周-深度学习引言&quot;&gt;&lt;a href=&quot;#第一周-深度学习引言&quot; class=&quot;headerlink&quot; title=&quot;第一周:深度学习引言&quot;&gt;&lt;/a&gt;第一周:深度学习引言&lt;/h1&gt;&lt;p&gt;笔记目录&lt;a href=&quot;http://www.ai-start.com/dl2017/&quot;&gt;http://www.ai-start.com/dl2017/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;课后习题1（仅含选择题，不过界面更好）&lt;a href=&quot;https://www.kesci.com/mw/project/5e20243e2823a10036b542da&quot;&gt;https://www.kesci.com/mw/project/5e20243e2823a10036b542da&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;课后习题2（含选择题和编程题）&lt;a href=&quot;https://blog.csdn.net/u013733326/article/details/79827273&quot;&gt;https://blog.csdn.net/u013733326/article/details/79827273&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;神经网络简述&quot;&gt;&lt;a href=&quot;#神经网络简述&quot; class=&quot;headerlink&quot; title=&quot;神经网络简述&quot;&gt;&lt;/a&gt;神经网络简述&lt;/h3&gt;&lt;p&gt;在有关神经网络的文献中，你经常看得到这个函数。从趋近于零开始，然后变成一条直线。这个函数被称作&lt;strong&gt;ReLU激活函数&lt;/strong&gt;，它的全称是Rectified Linear Unit。&lt;/p&gt;
&lt;p&gt;对于图像应用，我们经常在神经网络上使用&lt;strong&gt;卷积&lt;/strong&gt;(Convolutional Neural Network)，通常缩写为&lt;strong&gt;CNN&lt;/strong&gt;&lt;br&gt;对于序列数据，经常使用&lt;strong&gt;RNN&lt;/strong&gt;，一种&lt;strong&gt;递归神经网络&lt;/strong&gt;（Recurrent Neural Network）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;结构化数据&lt;/strong&gt;意味着数据的基本数据库。例如在房价预测中，你可能有一个数据库，有专门的几列数据告诉你卧室的大小和数量，这就是结构化数据。或预测用户是否会点击广告，你可能会得到关于用户的信息，比如年龄以及关于广告的一些信息，然后对你的预测分类标注，这就是结构化数据，意思是每个特征，比如说房屋大小卧室数量，或者是一个用户的年龄，都有一个很好的定义。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;非结构化数据&lt;/strong&gt;是指比如音频，原始音频或者你想要识别的图像或文本中的内容。这里的特征可能是图像中的像素值或文本中的单个单词。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://youngyyp.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="深度学习" scheme="https://youngyyp.github.io/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="神经网络" scheme="https://youngyyp.github.io/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>markdown_skills</title>
    <link href="https://youngyyp.github.io/2021/01/27/markdown_skills/"/>
    <id>https://youngyyp.github.io/2021/01/27/markdown_skills/</id>
    <published>2021-01-27T15:36:01.000Z</published>
    <updated>2021-03-12T12:15:20.402Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h1><!-- 这是一行注释 --><div style="display: none">哈哈我是注释，不会在浏览器中显示。</div><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题  "></a>六级标题  <!--最多6级标题--></h6><a id="more"></a><h1 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h1><ul><li><input disabled="" type="checkbox"> 任务一 未做任务 <code>- + 空格 + [ ]</code></li><li><input checked="" disabled="" type="checkbox"> 任务二 已做任务 <code>- + 空格 + [x]</code></li></ul><h1 id="首行缩进"><a href="#首行缩进" class="headerlink" title="首行缩进"></a>首行缩进</h1><p>【1】  或  //全角<br>【2】  或  //半角<br>【3】 &nbsp;或&nbsp;  //半角之半角  </p><!-- 换行需要每行后加两个空格 --><h1 id="对齐方式-（支持部分html语法）"><a href="#对齐方式-（支持部分html语法）" class="headerlink" title="对齐方式 （支持部分html语法）"></a>对齐方式 （支持部分html语法）</h1><center>行中心对齐</center><p align="left">行左对齐</p><p align="right">行右对齐</p><p><em>斜体</em> 或 <em>斜体</em><br><strong>粗体</strong>   <strong><em>注意加粗不可与括号混用，可能出现bug</em></strong><br><strong><em>加粗斜体</em></strong><br><del>删除线</del><br>++下划线++<br>==背景高亮==</p><h1 id="超链接、页内链接、自动链接、注脚"><a href="#超链接、页内链接、自动链接、注脚" class="headerlink" title="超链接、页内链接、自动链接、注脚"></a>超链接、页内链接、自动链接、注脚</h1><h2 id="行内式"><a href="#行内式" class="headerlink" title="行内式"></a>行内式</h2><p>欢迎阅读 <a href="https://www.jianshu.com/u/16d77399d3a7" title="择势">择势勤</a></p><h2 id="参考式"><a href="#参考式" class="headerlink" title="参考式"></a>参考式</h2><p>我经常去的几个网站<a href="http://www.google.com/">Google</a>、<a href="http://www.leanote.com/">Leanote</a>。</p><h2 id="注脚"><a href="#注脚" class="headerlink" title="注脚"></a>注脚</h2><p>使用 Markdown<a href="Markdown%E6%98%AF%E4%B8%80%E7%A7%8D%E7%BA%AF%E6%96%87%E6%9C%AC%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80">^1</a>可以效率的书写文档, 直接转换成 HTML<a href="Hyperssssssssssssssssssss%E4%B8%8D%E8%83%BD%E5%B8%A6%E7%A9%BA%E6%A0%BC%EF%BC%9F">^2</a>。</p><h1 id="无序列表、有序列表、定义型列表"><a href="#无序列表、有序列表、定义型列表" class="headerlink" title="无序列表、有序列表、定义型列表"></a>无序列表、有序列表、定义型列表</h1><ul><li>无序列表项 一</li></ul><ul><li>无序列表项 二</li></ul><ul><li>无序列表项 三  </li></ul><ul><li>无序列表项 一</li></ul><ol><li>有序列表项 一</li><li>有序列表项 二</li><li>有序列表项 三</li></ol><p><img src="/2021/01/27/markdown_skills/2021-01-27-15-35-30.png"><br>注意:   存放图片的文件夹名称要和title一样<br><a href="https://www.etyang.com/2020/10/15/vscode/">vscode贴图</a><br>[hexo显示图片]<a href="https://blog.csdn.net/cnds123321/article/details/109085776">https://blog.csdn.net/cnds123321/article/details/109085776</a></p><h1 id="多级引用"><a href="#多级引用" class="headerlink" title="多级引用"></a>多级引用</h1><blockquote><blockquote><blockquote><p>请问 Markdwon 怎么用？ - 小白<br>自己看教程！ - 愤青<br>教程在哪？ - 小白</p></blockquote></blockquote></blockquote><h1 id="字体格式"><a href="#字体格式" class="headerlink" title="字体格式"></a>字体格式</h1><p><font face="黑体">我是黑体字</font><br><font face="微软雅黑">我是微软雅黑</font><br><font face="STCAIYUN">我是华文彩云</font><br><font color="#0099ff" size="12" face="黑体">黑体</font><br><font color="gray" size="5">gray</font><br><font color="#00ffff" size="3">null</font></p><h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><p>C语言里的函数 <code>scanf()</code> 怎么使用？</p><pre><code>include &lt;stdio.h&gt; //这个点是键盘左上角的点int main(void){printf("Hello world\n");}</code></pre><hr><h1 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h1><pre class=" language-mermaid"><code class="language-mermaid">graph TDA[方形] --> B(圆角)    B --> C{条件a}    C --> |a=1| D[结果1]    C --> |a=2| E[结果2]    F[竖向流程图]</code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Markdown语法&quot;&gt;&lt;a href=&quot;#Markdown语法&quot; class=&quot;headerlink&quot; title=&quot;Markdown语法&quot;&gt;&lt;/a&gt;Markdown语法&lt;/h1&gt;&lt;!-- 这是一行注释 --&gt;

&lt;div style=&quot;display: none&quot;&gt;
哈哈我是注释，不会在浏览器中显示。
&lt;/div&gt;

&lt;h1 id=&quot;一级标题&quot;&gt;&lt;a href=&quot;#一级标题&quot; class=&quot;headerlink&quot; title=&quot;一级标题&quot;&gt;&lt;/a&gt;一级标题&lt;/h1&gt;&lt;h2 id=&quot;二级标题&quot;&gt;&lt;a href=&quot;#二级标题&quot; class=&quot;headerlink&quot; title=&quot;二级标题&quot;&gt;&lt;/a&gt;二级标题&lt;/h2&gt;&lt;h3 id=&quot;三级标题&quot;&gt;&lt;a href=&quot;#三级标题&quot; class=&quot;headerlink&quot; title=&quot;三级标题&quot;&gt;&lt;/a&gt;三级标题&lt;/h3&gt;&lt;h4 id=&quot;四级标题&quot;&gt;&lt;a href=&quot;#四级标题&quot; class=&quot;headerlink&quot; title=&quot;四级标题&quot;&gt;&lt;/a&gt;四级标题&lt;/h4&gt;&lt;h5 id=&quot;五级标题&quot;&gt;&lt;a href=&quot;#五级标题&quot; class=&quot;headerlink&quot; title=&quot;五级标题&quot;&gt;&lt;/a&gt;五级标题&lt;/h5&gt;&lt;h6 id=&quot;六级标题&quot;&gt;&lt;a href=&quot;#六级标题&quot; class=&quot;headerlink&quot; title=&quot;六级标题  &quot;&gt;&lt;/a&gt;六级标题  &lt;!--最多6级标题--&gt;&lt;/h6&gt;</summary>
    
    
    
    <category term="技术" scheme="https://youngyyp.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="markdown" scheme="https://youngyyp.github.io/tags/markdown/"/>
    
  </entry>
  
</feed>
