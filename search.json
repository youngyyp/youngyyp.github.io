[{"title":"markdown_skills","url":"/2021/01/27/markdown_skills/","content":"<h1 id=\"Markdown语法\"><a href=\"#Markdown语法\" class=\"headerlink\" title=\"Markdown语法\"></a>Markdown语法</h1><!-- 这是一行注释 -->\n\n<div style=\"display: none\">\n哈哈我是注释，不会在浏览器中显示。\n</div>\n\n<h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a>四级标题</h4><h5 id=\"五级标题\"><a href=\"#五级标题\" class=\"headerlink\" title=\"五级标题\"></a>五级标题</h5><h6 id=\"六级标题\"><a href=\"#六级标题\" class=\"headerlink\" title=\"六级标题  \"></a>六级标题  <!--最多6级标题--></h6><a id=\"more\"></a>\n\n<h1 id=\"任务列表\"><a href=\"#任务列表\" class=\"headerlink\" title=\"任务列表\"></a>任务列表</h1><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 任务一 未做任务 <code>- + 空格 + [ ]</code></li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 任务二 已做任务 <code>- + 空格 + [x]</code></li>\n</ul>\n<h1 id=\"首行缩进\"><a href=\"#首行缩进\" class=\"headerlink\" title=\"首行缩进\"></a>首行缩进</h1><p>【1】  或  //全角<br>【2】  或  //半角<br>【3】 &nbsp;或&nbsp;  //半角之半角  </p>\n<!-- 换行需要每行后加两个空格 -->\n\n<h1 id=\"对齐方式-（支持部分html语法）\"><a href=\"#对齐方式-（支持部分html语法）\" class=\"headerlink\" title=\"对齐方式 （支持部分html语法）\"></a>对齐方式 （支持部分html语法）</h1><center>行中心对齐</center>\n<p align=\"left\">行左对齐</p>\n<p align=\"right\">行右对齐</p>\n\n\n<p><em>斜体</em> 或 <em>斜体</em><br><strong>粗体</strong>   <strong><em>注意加粗不可与括号混用，可能出现bug</em></strong><br><strong><em>加粗斜体</em></strong><br><del>删除线</del><br>++下划线++<br>==背景高亮==</p>\n<h1 id=\"超链接、页内链接、自动链接、注脚\"><a href=\"#超链接、页内链接、自动链接、注脚\" class=\"headerlink\" title=\"超链接、页内链接、自动链接、注脚\"></a>超链接、页内链接、自动链接、注脚</h1><h2 id=\"行内式\"><a href=\"#行内式\" class=\"headerlink\" title=\"行内式\"></a>行内式</h2><p>欢迎阅读 <a href=\"https://www.jianshu.com/u/16d77399d3a7\" title=\"择势\">择势勤</a></p>\n<h2 id=\"参考式\"><a href=\"#参考式\" class=\"headerlink\" title=\"参考式\"></a>参考式</h2><p>我经常去的几个网站<a href=\"http://www.google.com/\">Google</a>、<a href=\"http://www.leanote.com/\">Leanote</a>。</p>\n<h2 id=\"注脚\"><a href=\"#注脚\" class=\"headerlink\" title=\"注脚\"></a>注脚</h2><p>使用 Markdown<a href=\"Markdown%E6%98%AF%E4%B8%80%E7%A7%8D%E7%BA%AF%E6%96%87%E6%9C%AC%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80\">^1</a>可以效率的书写文档, 直接转换成 HTML<a href=\"Hyperssssssssssssssssssss%E4%B8%8D%E8%83%BD%E5%B8%A6%E7%A9%BA%E6%A0%BC%EF%BC%9F\">^2</a>。</p>\n<h1 id=\"无序列表、有序列表、定义型列表\"><a href=\"#无序列表、有序列表、定义型列表\" class=\"headerlink\" title=\"无序列表、有序列表、定义型列表\"></a>无序列表、有序列表、定义型列表</h1><ul>\n<li>无序列表项 一</li>\n</ul>\n<ul>\n<li>无序列表项 二</li>\n</ul>\n<ul>\n<li>无序列表项 三  </li>\n</ul>\n<ul>\n<li>无序列表项 一</li>\n</ul>\n<ol>\n<li>有序列表项 一</li>\n<li>有序列表项 二</li>\n<li>有序列表项 三</li>\n</ol>\n<p><img src=\"/2021/01/27/markdown_skills/2021-01-27-15-35-30.png\"><br>注意:   存放图片的文件夹名称要和title一样<br><a href=\"https://www.etyang.com/2020/10/15/vscode/\">vscode贴图</a><br>[hexo显示图片]<a href=\"https://blog.csdn.net/cnds123321/article/details/109085776\">https://blog.csdn.net/cnds123321/article/details/109085776</a></p>\n<h1 id=\"多级引用\"><a href=\"#多级引用\" class=\"headerlink\" title=\"多级引用\"></a>多级引用</h1><blockquote>\n<blockquote>\n<blockquote>\n<p>请问 Markdwon 怎么用？ - 小白<br>自己看教程！ - 愤青<br>教程在哪？ - 小白</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<h1 id=\"字体格式\"><a href=\"#字体格式\" class=\"headerlink\" title=\"字体格式\"></a>字体格式</h1><p><font face=\"黑体\">我是黑体字</font><br><font face=\"微软雅黑\">我是微软雅黑</font><br><font face=\"STCAIYUN\">我是华文彩云</font><br><font color=\"#0099ff\" size=\"12\" face=\"黑体\">黑体</font><br><font color=\"gray\" size=\"5\">gray</font><br><font color=\"#00ffff\" size=\"3\">null</font></p>\n<h1 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h1><p>C语言里的函数 <code>scanf()</code> 怎么使用？</p>\n<pre><code>include &lt;stdio.h&gt; //这个点是键盘左上角的点\nint main(void)\n{\nprintf(\"Hello world\\n\");\n}</code></pre>\n<hr>\n<h1 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h1><pre class=\" language-mermaid\"><code class=\"language-mermaid\">graph TD\nA[方形] --> B(圆角)\n    B --> C{条件a}\n    C --> |a=1| D[结果1]\n    C --> |a=2| E[结果2]\n    F[竖向流程图]</code></pre>\n","categories":["技术"],"tags":["markdown"]},{"title":"吴恩达深度学习课程第一课_神经网络与深度学习","url":"/2021/02/09/%E5%90%B4%E6%81%A9%E8%BE%BE%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%80%E8%AF%BE_%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%B8%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/","content":"<h1 id=\"第一周-深度学习引言\"><a href=\"#第一周-深度学习引言\" class=\"headerlink\" title=\"第一周:深度学习引言\"></a>第一周:深度学习引言</h1><p>笔记目录<a href=\"http://www.ai-start.com/dl2017/\">http://www.ai-start.com/dl2017/</a></p>\n<p>课后习题1（仅含选择题，不过界面更好）<a href=\"https://www.kesci.com/mw/project/5e20243e2823a10036b542da\">https://www.kesci.com/mw/project/5e20243e2823a10036b542da</a></p>\n<p>课后习题2（含选择题和编程题）<a href=\"https://blog.csdn.net/u013733326/article/details/79827273\">https://blog.csdn.net/u013733326/article/details/79827273</a></p>\n<h3 id=\"神经网络简述\"><a href=\"#神经网络简述\" class=\"headerlink\" title=\"神经网络简述\"></a>神经网络简述</h3><p>在有关神经网络的文献中，你经常看得到这个函数。从趋近于零开始，然后变成一条直线。这个函数被称作<strong>ReLU激活函数</strong>，它的全称是Rectified Linear Unit。</p>\n<p>对于图像应用，我们经常在神经网络上使用<strong>卷积</strong>(Convolutional Neural Network)，通常缩写为<strong>CNN</strong><br>对于序列数据，经常使用<strong>RNN</strong>，一种<strong>递归神经网络</strong>（Recurrent Neural Network）</p>\n<p><strong>结构化数据</strong>意味着数据的基本数据库。例如在房价预测中，你可能有一个数据库，有专门的几列数据告诉你卧室的大小和数量，这就是结构化数据。或预测用户是否会点击广告，你可能会得到关于用户的信息，比如年龄以及关于广告的一些信息，然后对你的预测分类标注，这就是结构化数据，意思是每个特征，比如说房屋大小卧室数量，或者是一个用户的年龄，都有一个很好的定义。</p>\n<p><strong>非结构化数据</strong>是指比如音频，原始音频或者你想要识别的图像或文本中的内容。这里的特征可能是图像中的像素值或文本中的单个单词。</p>\n<a id=\"more\"></a>\n\n<h1 id=\"第二周：神经网络的编程基础\"><a href=\"#第二周：神经网络的编程基础\" class=\"headerlink\" title=\"第二周：神经网络的编程基础\"></a>第二周：神经网络的编程基础</h1><p><strong>逻辑回归</strong>(Logistic Regression)是一个用于<strong>二分类</strong>(binary classification)的算法。首先我们从一个问题开始说起，这里有一个二分类问题的例子，假如你有一张图片作为输入，比如这只猫，如果识别这张图片为猫，则输出标签1作为结果；如果识别出不是猫，那么输出标签0作为结果。</p>\n<p><img src=\"https://raw.githubusercontent.com/youngyyp/blogpicture/master/img/image-20210130230331844.png\" alt=\"image-20210130230331844\"></p>\n<p>本节主要介绍逻辑回归的<strong>Hypothesis Function</strong>（假设函数）</p>\n<p><img src=\"https://raw.githubusercontent.com/youngyyp/blogpicture/master/img/image-20210130170346158.png\" alt=\"image-20210130170346158\"></p>\n<p>逻辑回归的<strong>代价函数</strong>（Logistic Regression Cost Function）</p>\n<p>我们通过这个称为的损失函数，来衡量预测输出值和实际值有多接近。一般我们用预测值和实际值的平方差或者它们平方差的一半，但是通常在逻辑回归中我们不这么做，因为当我们在学习逻辑回归参数的时候，会发现我们的优化目标不是凸优化，只能找到多个局部最优值，梯度下降法很可能找不到全局最优值，虽然平方差是一个不错的损失函数，但是我们在逻辑回归模型中会定义另外一个损失函数。</p>\n<p>我们在逻辑回归中用到的<strong>损失函数</strong>是：<img src=\"https://raw.githubusercontent.com/youngyyp/blogpicture/master/img/image-20210130232244430.png\" alt=\"image-20210130232244430\"></p>\n<p><strong>损失函数是单个样本的损失，成本函数是数据集总的损失，都是越小越好。</strong></p>\n<h3 id=\"梯度下降法（Gradient-Descent）\"><a href=\"#梯度下降法（Gradient-Descent）\" class=\"headerlink\" title=\"梯度下降法（Gradient Descent）\"></a>梯度下降法（Gradient Descent）</h3><p><img src=\"https://raw.githubusercontent.com/youngyyp/blogpicture/master/img/image-20210130232432229.png\" alt=\"image-20210130232432229\"></p>\n<h3 id=\"Python-中的广播（Broadcasting-in-Python）\"><a href=\"#Python-中的广播（Broadcasting-in-Python）\" class=\"headerlink\" title=\"Python 中的广播（Broadcasting in Python）\"></a>Python 中的广播（Broadcasting in Python）</h3><p>numpy两个数组的相加、相减以及相乘都是<strong>对应元素</strong>之间的操作。</p>\n","categories":["技术"],"tags":["深度学习","神经网络"]},{"title":"常用hexo博客操作","url":"/2021/02/12/%E5%B8%B8%E7%94%A8hexo%E5%8D%9A%E5%AE%A2%E6%93%8D%E4%BD%9C/","content":"<h3 id=\"常用hexo指令\"><a href=\"#常用hexo指令\" class=\"headerlink\" title=\"常用hexo指令\"></a>常用hexo指令</h3><p><strong>hexo s</strong> (hexo server) : 启动本地服务器，用于预览主题。默认地址： <a href=\"http://localhost:4000/\">http://localhost:4000/</a></p>\n<p><strong>hexo g</strong> (hexo generate) : 生成网站静态文件到默认设置的 public 文件夹。</p>\n<p><strong>hexo d</strong> (hexo deploy) : 自动生成网站静态文件，并部署到设定的仓库。</p>\n<p><strong>hexo clean</strong> : 清除缓存文件 db.json 和已生成的静态文件 public。</p>\n<p><strong>hexo new</strong> + md文件名称 ：会在/source/__posts目录下生成md文件以及创建同名的文件夹。</p>\n<p><strong>hexo new page</strong> + 页面名称 ：新建一个页面，默认地址为 主页地址/页面名称。</p>\n<a id=\"more\"></a>\n\n<h3 id=\"设置hexo首页只显示部分摘要（不显示全文）\"><a href=\"#设置hexo首页只显示部分摘要（不显示全文）\" class=\"headerlink\" title=\"设置hexo首页只显示部分摘要（不显示全文）\"></a>设置hexo首页只显示部分摘要（不显示全文）</h3><p>法一：在文章的<code>front-matter</code>中添加<code>description</code>，其中<code>description</code>中的内容就会被显示在首页上，其余一律不显示。</p>\n<pre><code>---\ntitle: 让首页显示部分内容\ndate: 2020-02-23 22:55:10\ndescription: 这是显示在首页的概述，正文内容均会被隐藏。\n---</code></pre>\n<p>法二：在需要截断的地方加入：</p>\n<pre><code>&lt;!--more--&gt;</code></pre>\n<p>首页就会显示这条以上的所有内容，隐藏接下来的所有内容。</p>\n<h3 id=\"好用的插件\"><a href=\"#好用的插件\" class=\"headerlink\" title=\"好用的插件\"></a>好用的插件</h3><p>隐藏文章的插件<a href=\"https://github.com/printempw/hexo-hide-posts\">https://github.com/printempw/hexo-hide-posts</a></p>\n<p>hexo显示pdf<a href=\"https://blog.csdn.net/qq_43701912/article/details/107291518\">https://blog.csdn.net/qq_43701912/article/details/107291518</a>  </p><div class=\"pdfobject-container\" data-target=\"filename.pdf\" data-height=\"500px\"></div><p></p>\n","categories":["技术"],"tags":["hexo指令"]},{"title":"吴恩达深度学习课程作业","url":"/2021/03/02/%E5%90%B4%E6%81%A9%E8%BE%BE%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B%E4%BD%9C%E4%B8%9A/","content":"<p>笔记目录<a href=\"http://www.ai-start.com/dl2017/\">http://www.ai-start.com/dl2017/</a></p>\n<p>课后习题1（仅含选择题，界面更好）<a href=\"https://www.kesci.com/mw/project/5e20243e2823a10036b542da\">https://www.kesci.com/mw/project/5e20243e2823a10036b542da</a></p>\n<p>课后习题2（含选择题和编程题）<a href=\"https://blog.csdn.net/u013733326/article/details/79827273\">https://blog.csdn.net/u013733326/article/details/79827273</a></p>\n<h2 id=\"第一节后作业\"><a href=\"#第一节后作业\" class=\"headerlink\" title=\"第一节后作业\"></a>第一节后作业</h2><p>我的答案：D AC ABD A C A B ACD B AB  </p>\n<p>标准答案：1.D 2.AC 3.ABD 4.<strong>B</strong> 5.C 6.<strong>B</strong> 7.B 8.<strong>AC</strong> 9.B 10.AB</p>\n<p>改错：</p>\n<p>4.</p>\n<p><em>结构化数据</em></p>\n<p>结构化数据是数据的<em>数据库</em>(<em>即行数据,存储在数据库里,可以用二维表结构来逻辑表达实现的数据</em>)</p>\n<p><em>非结构化数据</em></p>\n<p>非结构化数据,包括所有格式的办公文档、文本、图片、XML、HTML、各类报表、图像和音频/视频信息等等</p>\n<p>8.</p>\n<p>CNN、RNN、DNN区别 —— <a href=\"https://blog.csdn.net/lff1208/article/details/77717149\">https://blog.csdn.net/lff1208/article/details/77717149</a> </p>\n<a id=\"more\"></a>\n\n<h2 id=\"第二节课后作业\"><a href=\"#第二节课后作业\" class=\"headerlink\" title=\"第二节课后作业\"></a>第二节课后作业</h2><p>我的答案：11.B 12.D 13.B 14.C 15.C 16.C 17.C 18.B 19.C 20.B</p>\n<p>标准答案：11.B 12.D 13.B 14.C 15.<strong>D</strong> 16.C 17.C 18.B 19.<strong>A</strong> 20.B</p>\n<p>改错：</p>\n<pre><code>15：</code></pre>\n<pre><code>a = np.random.randn(4, 3) # a.shape = (4, 3)\nb = np.random.randn(3, 2) # b.shape = (3, 2)\nc = a * b</code></pre>\n<p>运算符 “*” 说明了<strong>按元素乘法</strong>来相乘，但是元素乘法需要两个矩阵之间的维数相同，所以这将报错，无法计算。</p>\n<pre><code>19：</code></pre>\n<pre><code>a = np.random.randn(3, 3)\nb = np.random.randn(3, 1)\nc = a * b</code></pre>\n<p>这将会使用广播机制，b会被复制三次，就会变成(3,3)，再使用<strong>元素乘法</strong>。所以： <code>c.shape = (3, 3)</code></p>\n<h3 id=\"第三节课后作业\"><a href=\"#第三节课后作业\" class=\"headerlink\" title=\"第三节课后作业\"></a>第三节课后作业</h3><p>我的答案：21.</p>\n","categories":["技术"],"tags":["深度学习","神经网络"]},{"title":"毕业设计——基于Atlas_200_DK的障碍物识别系统设计与实现","url":"/2021/03/12/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EAtlas-200-DK%E7%9A%84%E9%9A%9C%E7%A2%8D%E7%89%A9%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/","content":"<h2 id=\"开题答辩——2021-3-12\"><a href=\"#开题答辩——2021-3-12\" class=\"headerlink\" title=\"开题答辩——2021/3/12\"></a>开题答辩——2021/3/12</h2><p>毕业设计的题目是《基于<strong>Atlas 200 DK</strong>的障碍物识别系统设计与实现》，今天进行了开题答辩，感觉还不错。（就算啥也不会，也要能说的很牛逼才行。只要抓住了评审的点就可以顺利通过）</p>\n<p>这个项目的创新点其实就是华为的Atlas 200 DK设备（Atlas 200 DK 开发者套件是一款高性能AI应用开发板，集成了昇腾310 AI处理器，方便用户快速开发、快速验证，可广泛应用于开发者方案验证、高校教育、科学研究等场景。）怎么说也卖3999元呢，希望后面不要有太多的坑。</p>\n<p>下一步的计划肯定是先拿到这个开发板，然后把一切环境都配置好。后面会再这里记录一下使用Atlas 200 DK的过程以及碰到的一些坑。</p>\n<a id=\"more\"></a>\n\n","categories":["技术"],"tags":["深度学习","神经网络","Atlas","障碍物识别","目标识别"]},{"title":"【电赛】线路负载及故障检测装置","url":"/2021/03/13/%E3%80%90%E7%94%B5%E8%B5%9B%E3%80%91%E7%BA%BF%E8%B7%AF%E8%B4%9F%E8%BD%BD%E5%8F%8A%E6%95%85%E9%9A%9C%E6%A3%80%E6%B5%8B%E8%A3%85%E7%BD%AE/","content":"<p> 测试</p>\n<br>\n\n<div class=\"pdfobject-container\" data-target=\"https://youngyyp.github.io/test1.pdf\" data-height=\"500px\"></div>\n\n<br>\n\n<div class=\"pdfobject-container\" data-target=\"线路负载及故障检测装置作品报告.pdf\" data-height=\"500px\"></div>\n\n<p><a href=\"https://youngyyp.github.io/test1.pdf\">https://youngyyp.github.io/test1.pdf</a></p>\n","categories":["电赛"],"tags":["线路故障检测","自平衡电桥","正交解调"]},{"url":"/2021/03/13/test/","content":"<div class=\"pdfobject-container\" data-target=\"https://yzb.sjtu.edu.cn/2019.pdf\" data-height=\"500px\"></div> \n\n<div class=\"pdfobject-container\" data-target=\"../test1.pdf\" data-height=\"500px\"></div> \n\n<div class=\"pdfobject-container\" data-target=\"test.pdf\" data-height=\"500px\"></div> \n\n"}]