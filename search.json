[{"title":"markdown_skills","url":"/2021/01/27/%E6%8A%80%E6%9C%AF/markdown_skills/","content":"<h1 id=\"Markdown语法\"><a href=\"#Markdown语法\" class=\"headerlink\" title=\"Markdown语法\"></a>Markdown语法</h1><!-- 这是一行注释 -->\n\n<div style=\"display: none\">\n哈哈我是注释，不会在浏览器中显示。\n</div>\n\n<h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a>四级标题</h4><h5 id=\"五级标题\"><a href=\"#五级标题\" class=\"headerlink\" title=\"五级标题\"></a>五级标题</h5><h6 id=\"六级标题\"><a href=\"#六级标题\" class=\"headerlink\" title=\"六级标题  \"></a>六级标题  <!--最多6级标题--></h6><a id=\"more\"></a>\n\n<h1 id=\"任务列表\"><a href=\"#任务列表\" class=\"headerlink\" title=\"任务列表\"></a>任务列表</h1><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 任务一 未做任务 <code>- + 空格 + [ ]</code></li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 任务二 已做任务 <code>- + 空格 + [x]</code></li>\n</ul>\n<h1 id=\"首行缩进\"><a href=\"#首行缩进\" class=\"headerlink\" title=\"首行缩进\"></a>首行缩进</h1><p>【1】  或  //全角<br>【2】  或  //半角<br>【3】 &nbsp;或&nbsp;  //半角之半角  </p>\n<!-- 换行需要每行后加两个空格 -->\n\n<h1 id=\"对齐方式-（支持部分html语法）\"><a href=\"#对齐方式-（支持部分html语法）\" class=\"headerlink\" title=\"对齐方式 （支持部分html语法）\"></a>对齐方式 （支持部分html语法）</h1><center>行中心对齐</center>\n<p align=\"left\">行左对齐</p>\n<p align=\"right\">行右对齐</p>\n\n\n<p><em>斜体</em> 或 <em>斜体</em><br><strong>粗体</strong>   <strong><em>注意加粗不可与括号混用，可能出现bug</em></strong><br><strong><em>加粗斜体</em></strong><br><del>删除线</del><br>++下划线++<br>==背景高亮==</p>\n<h1 id=\"超链接、页内链接、自动链接、注脚\"><a href=\"#超链接、页内链接、自动链接、注脚\" class=\"headerlink\" title=\"超链接、页内链接、自动链接、注脚\"></a>超链接、页内链接、自动链接、注脚</h1><h2 id=\"行内式\"><a href=\"#行内式\" class=\"headerlink\" title=\"行内式\"></a>行内式</h2><p>欢迎阅读 <a href=\"https://www.jianshu.com/u/16d77399d3a7\" title=\"择势\">择势勤</a></p>\n<h2 id=\"参考式\"><a href=\"#参考式\" class=\"headerlink\" title=\"参考式\"></a>参考式</h2><p>我经常去的几个网站<a href=\"http://www.google.com/\">Google</a>、<a href=\"http://www.leanote.com/\">Leanote</a>。</p>\n<h2 id=\"注脚\"><a href=\"#注脚\" class=\"headerlink\" title=\"注脚\"></a>注脚</h2><p>使用 Markdown<a href=\"Markdown%E6%98%AF%E4%B8%80%E7%A7%8D%E7%BA%AF%E6%96%87%E6%9C%AC%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80\">^1</a>可以效率的书写文档, 直接转换成 HTML<a href=\"Hyperssssssssssssssssssss%E4%B8%8D%E8%83%BD%E5%B8%A6%E7%A9%BA%E6%A0%BC%EF%BC%9F\">^2</a>。</p>\n<h1 id=\"无序列表、有序列表、定义型列表\"><a href=\"#无序列表、有序列表、定义型列表\" class=\"headerlink\" title=\"无序列表、有序列表、定义型列表\"></a>无序列表、有序列表、定义型列表</h1><ul>\n<li>无序列表项 一</li>\n</ul>\n<ul>\n<li>无序列表项 二</li>\n</ul>\n<ul>\n<li>无序列表项 三  </li>\n</ul>\n<ul>\n<li>无序列表项 一</li>\n</ul>\n<ol>\n<li>有序列表项 一</li>\n<li>有序列表项 二</li>\n<li>有序列表项 三</li>\n</ol>\n<p><img src=\"/2021/01/27/%E6%8A%80%E6%9C%AF/markdown_skills/2021-01-27-15-35-30.png\"><br>注意:   存放图片的文件夹名称要和title一样<br><a href=\"https://www.etyang.com/2020/10/15/vscode/\">vscode贴图</a><br>[hexo显示图片]<a href=\"https://blog.csdn.net/cnds123321/article/details/109085776\">https://blog.csdn.net/cnds123321/article/details/109085776</a></p>\n<h1 id=\"多级引用\"><a href=\"#多级引用\" class=\"headerlink\" title=\"多级引用\"></a>多级引用</h1><blockquote>\n<blockquote>\n<blockquote>\n<p>请问 Markdwon 怎么用？ - 小白<br>自己看教程！ - 愤青<br>教程在哪？ - 小白</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<h1 id=\"字体格式\"><a href=\"#字体格式\" class=\"headerlink\" title=\"字体格式\"></a>字体格式</h1><p><font face=\"黑体\">我是黑体字</font><br><font face=\"微软雅黑\">我是微软雅黑</font><br><font face=\"STCAIYUN\">我是华文彩云</font><br><font color=\"#0099ff\" size=\"12\" face=\"黑体\">黑体</font><br><font color=\"gray\" size=\"5\">gray</font><br><font color=\"#00ffff\" size=\"3\">null</font></p>\n<h1 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h1><p>C语言里的函数 <code>scanf()</code> 怎么使用？</p>\n<pre><code>include &lt;stdio.h&gt; //这个点是键盘左上角的点\nint main(void)\n{\nprintf(\"Hello world\\n\");\n}</code></pre>\n<hr>\n<h1 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h1><pre class=\" language-mermaid\"><code class=\"language-mermaid\">graph TD\nA[方形] --> B(圆角)\n    B --> C{条件a}\n    C --> |a=1| D[结果1]\n    C --> |a=2| E[结果2]\n    F[竖向流程图]</code></pre>\n","categories":["技术"],"tags":["markdown"]},{"title":"【毕业设计】基于Atlas_200_DK的障碍物识别系统设计与实现","url":"/2021/03/12/%E6%8A%80%E6%9C%AF/%E3%80%90%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E3%80%91%E5%9F%BA%E4%BA%8EAtlas-200-DK%E7%9A%84%E9%9A%9C%E7%A2%8D%E7%89%A9%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/","content":"<h3 id=\"开题答辩——2021-3-12\"><a href=\"#开题答辩——2021-3-12\" class=\"headerlink\" title=\"开题答辩——2021/3/12\"></a>开题答辩——2021/3/12</h3><p>毕业设计的题目是《基于<strong>Atlas 200 DK</strong>的障碍物识别系统设计与实现》，今天进行了开题答辩，感觉还不错。（就算啥也不会，也要能说的很牛逼才行。只要抓住了评审的点就可以顺利通过）</p>\n<p>这个项目的创新点其实就是华为的Atlas 200 DK设备（Atlas 200 DK 开发者套件是一款高性能AI应用开发板，集成了昇腾310 AI处理器，方便用户快速开发、快速验证，可广泛应用于开发者方案验证、高校教育、科学研究等场景。）怎么说也卖3999元呢，希望后面不要有太多的坑。</p>\n<p>下一步的计划肯定是先拿到这个开发板，然后把一切环境都配置好。后面会再这里记录一下使用Atlas 200 DK的过程以及碰到的一些坑。</p>\n<a id=\"more\"></a>\n\n<h3 id=\"基本操作\"><a href=\"#基本操作\" class=\"headerlink\" title=\"基本操作\"></a>基本操作</h3><p>主机密码：Huawei@123</p>\n<p>连接atlas：ssh <a href=\"mailto:HwHiAiUser@192.168.1.2\">HwHiAiUser@192.168.1.2</a>     atlas密码为：Mind@123        </p>\n<p>启动mindstudio（版本为2.0.0beta2）：~/program/MindStudio-ubuntu/bin/MindStudio.sh</p>\n<p>若连接不上atlas，则在命令行输入 rm -rf ~/.ssh/known_hosts 即可</p>\n<p>主从机文件传输：  <a href=\"https://bbs.huaweicloud.com/blogs/168928\">https://bbs.huaweicloud.com/blogs/168928</a></p>\n<pre class=\" language-javascript\"><code class=\"language-javascript\">scp <span class=\"token operator\">-</span>r $HOME<span class=\"token operator\">/</span>samples<span class=\"token operator\">/</span>cplusplus<span class=\"token operator\">/</span>level2_simple_inference<span class=\"token operator\">/</span>2_object_detection<span class=\"token operator\">/</span>YOLOV3_coco_detection_picture HwHiAiUser@<span class=\"token number\">192.168</span><span class=\"token punctuation\">.</span><span class=\"token number\">1.2</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>HwHiAiUser<span class=\"token operator\">/</span>testfile</code></pre>\n<pre class=\" language-html\"><code class=\"language-html\">scp -r HwHiAiUser@192.168.1.2:/home/HwHiAiUser/mask_detection/output ~/Pictures</code></pre>\n<p><strong>开发板断电后需要重新进行联网配置：</strong></p>\n<p>主机中：</p>\n<p>su root </p>\n<p>echo “1” &gt; /proc/sys/net/ipv4/ip_forward #允许报文转换</p>\n<p>iptables -t nat -A POSTROUTING -o enp0s3 -s 192.168.1.0/24 -j MASQUERADE</p>\n<p>iptables -A FORWARD -i enp0s12u2 -o enp0s3 -m state –state RELATED,ESTABLISHED -j ACCEPT</p>\n<p>iptables -A FORWARD -i enp0s12u2 -o enp0s3 -j ACCEPT</p>\n<p>ssh <a href=\"mailto:HwHiAiUser@192.168.1.2\">HwHiAiUser@192.168.1.2</a></p>\n<p>su root</p>\n<p>route add default gw 192.168.1.223 dev usb0</p>\n<p>ping e.huawei.com</p>\n<p>install_path 请根据实际情况修改:     /home/Ascend/Ascend/ascend-toolkit/20.1.rc1/x86_64-linux</p>\n<p>scp -r /home/Ascend/samples/cplusplus/level2_simple_inference/2_object_detection/YOLOV3_coco_detection_picture </p>\n<h3 id=\"版本信息\"><a href=\"#版本信息\" class=\"headerlink\" title=\"版本信息\"></a>版本信息</h3><p>我的cann版本为<strong>3.1.0</strong>：   export DDK_PATH=/home/Ascend/Ascend/ascend-toolkit/latest/arm64-linux</p>\n<p>Firmware and Drivers版本为<strong>1.0.8 alpha</strong></p>\n<p>主板型号是<strong>IT21VDMB</strong></p>\n<p>atc${install_path}：   /home/Ascend/Ascend/ascend-toolkit/latest</p>\n<pre><code>export PATH=/home/Ascend/Ascend/ascend-toolkit/latest/atc/ccec_compiler/bin:/home/Ascend/Ascend/ascend-toolkit/latest/atc/bin:$PATH\nexport ASCEND_OPP_PATH=/home/Ascend/Ascend/ascend-toolkit/latest/opp\nexport ASCEND_AICPU_PATH=/home/Ascend/Ascend/ascend-toolkit/latest</code></pre>\n<p>/home/Ascend/Ascend/ascend-toolkit/20.1.rc1/atc/bin/atc</p>\n<p><img src=\"/2021/03/12/%E6%8A%80%E6%9C%AF/%E3%80%90%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E3%80%91%E5%9F%BA%E4%BA%8EAtlas-200-DK%E7%9A%84%E9%9A%9C%E7%A2%8D%E7%89%A9%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/image-20210401155249903.png\" alt=\"image-20210401155249903\"></p>\n<p><img src=\"/2021/03/12/%E6%8A%80%E6%9C%AF/%E3%80%90%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E3%80%91%E5%9F%BA%E4%BA%8EAtlas-200-DK%E7%9A%84%E9%9A%9C%E7%A2%8D%E7%89%A9%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/image-20210412101856080.png\" alt=\"image-20210412101856080\"></p>\n<p>上述命令的含义： <a href=\"https://support.huaweicloud.com/environment-deployment-Atlas200DK202/atlased_04_0033.html\">https://support.huaweicloud.com/environment-deployment-Atlas200DK202/atlased_04_0033.html</a></p>\n<h3 id=\"具体案例\"><a href=\"#具体案例\" class=\"headerlink\" title=\"具体案例\"></a>具体案例</h3><h4 id=\"摄像头\"><a href=\"#摄像头\" class=\"headerlink\" title=\"摄像头\"></a><strong>摄像头</strong></h4><p><a href=\"https://gitee.com/ascend/samples/tree/master/cplusplus/level1_single_api/5_200dk_peripheral/ascendcamera\">https://gitee.com/ascend/samples/tree/master/cplusplus/level1_single_api/5_200dk_peripheral/ascendcamera</a>  （我的树莓派摄像头版本为V2）</p>\n<p>cd $HOME/ascendcamera/out</p>\n<p>./main -i -c 1 -o ./output/filename.jpg –overwrite</p>\n<p><strong>presenterserver：</strong> </p>\n<p>cd $HOME/ascendcamera/out</p>\n<p>./main -v -c 1 -t 60 –fps 20 -w 704 -h 576 -s ip:192.168.1.223:7002/youngyep        (命令行输7002，浏览器输7003)</p>\n<p>若要使用presenter server进行实时显示，则需要在开发环境修改ascendcamera中的script/.conf中的presenter_server_ip、presenter_view_ip、presenter_agent_ip修改为虚拟网卡的ip地址：</p>\n<p><img src=\"/2021/03/12/%E6%8A%80%E6%9C%AF/%E3%80%90%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E3%80%91%E5%9F%BA%E4%BA%8EAtlas-200-DK%E7%9A%84%E9%9A%9C%E7%A2%8D%E7%89%A9%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/image-20210405203242498.png\" alt=\"image-20210405203242498\"></p>\n<p><img src=\"/2021/03/12/%E6%8A%80%E6%9C%AF/%E3%80%90%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E3%80%91%E5%9F%BA%E4%BA%8EAtlas-200-DK%E7%9A%84%E9%9A%9C%E7%A2%8D%E7%89%A9%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/image-20210405203313368.png\" alt=\"image-20210405203313368\"></p>\n<p>将口罩检测和摄像头的代码通过shell脚本结合：</p>\n<p>运行环境：cd ~/mask_detection             ./start_detection.sh</p>\n<p>开发环境：scp -r <a href=\"mailto:HwHiAiUser@192.168.1.2\">HwHiAiUser@192.168.1.2</a>:/home/HwHiAiUsr/mask_detection/output ~/Pictures</p>\n<h4 id=\"网线连接\"><a href=\"#网线连接\" class=\"headerlink\" title=\"网线连接\"></a>网线连接</h4><p>参考： <a href=\"https://blog.csdn.net/qq_44527435/article/details/110441603\">https://blog.csdn.net/qq_44527435/article/details/110441603</a>    我的从机端口号为enp0s3</p>\n<p><img src=\"/2021/03/12/%E6%8A%80%E6%9C%AF/%E3%80%90%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E3%80%91%E5%9F%BA%E4%BA%8EAtlas-200-DK%E7%9A%84%E9%9A%9C%E7%A2%8D%E7%89%A9%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/image-20210414133624189.png\" alt=\"image-20210414133624189\"></p>\n<p><strong>socket通信</strong>：<a href=\"https://www.cnblogs.com/fnlingnzb-learner/p/8523242.html\">https://www.cnblogs.com/fnlingnzb-learner/p/8523242.html</a></p>\n<p>在client的代码中填写server的ip地址（我这里是192.168.1.223）</p>\n<p><img src=\"/2021/03/12/%E6%8A%80%E6%9C%AF/%E3%80%90%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E3%80%91%E5%9F%BA%E4%BA%8EAtlas-200-DK%E7%9A%84%E9%9A%9C%E7%A2%8D%E7%89%A9%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/image-20210414230902559.png\" alt=\"image-20210414230902559\"></p>\n<p>c++网络编程中socket函数：<a href=\"https://blog.csdn.net/bian_qing_quan11/article/details/71713647\">https://blog.csdn.net/bian_qing_quan11/article/details/71713647</a></p>\n<h4 id=\"交叉编译程序\"><a href=\"#交叉编译程序\" class=\"headerlink\" title=\"交叉编译程序\"></a>交叉编译程序</h4><p>交叉编译c++：aarch64-linux-gnu-gcc 后接cpp文件</p>\n<p>编译c++：g++ hello.cpp -o hello</p>\n<h4 id=\"uart和目标检测二合一\"><a href=\"#uart和目标检测二合一\" class=\"headerlink\" title=\"uart和目标检测二合一\"></a>uart和目标检测二合一</h4><p><img src=\"/2021/03/12/%E6%8A%80%E6%9C%AF/%E3%80%90%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E3%80%91%E5%9F%BA%E4%BA%8EAtlas-200-DK%E7%9A%84%E9%9A%9C%E7%A2%8D%E7%89%A9%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/image-20210419093448974.png\" alt=\"image-20210419093448974\"></p>\n<p>加入框位置和人的判断后结果（停止1表示目标框在图中间三分之一位置，停止2加上了目标是人的限制条件）</p>\n<p><img src=\"/2021/03/12/%E6%8A%80%E6%9C%AF/%E3%80%90%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E3%80%91%E5%9F%BA%E4%BA%8EAtlas-200-DK%E7%9A%84%E9%9A%9C%E7%A2%8D%E7%89%A9%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/image-20210420114417098.png\" alt=\"image-20210420114417098\"></p>\n<p><img src=\"/2021/03/12/%E6%8A%80%E6%9C%AF/%E3%80%90%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E3%80%91%E5%9F%BA%E4%BA%8EAtlas-200-DK%E7%9A%84%E9%9A%9C%E7%A2%8D%E7%89%A9%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/image-20210420114546682.png\" alt=\"image-20210420114546682\"></p>\n<p>目标检测总共可识别的类别：</p>\n<p><img src=\"/2021/03/12/%E6%8A%80%E6%9C%AF/%E3%80%90%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E3%80%91%E5%9F%BA%E4%BA%8EAtlas-200-DK%E7%9A%84%E9%9A%9C%E7%A2%8D%E7%89%A9%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/image-20210422091827753.png\" alt=\"image-20210422091827753\"></p>\n<h4 id=\"python调用uart接口\"><a href=\"#python调用uart接口\" class=\"headerlink\" title=\"python调用uart接口\"></a>python调用uart接口</h4><pre class=\" language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> periphery <span class=\"token keyword\">import</span> Serial\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"uart connection test\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\" spellcheck=\"true\"># Open /dev/ttyAMA1 with baudrate 115200</span>\n    ser <span class=\"token operator\">=</span> Serial<span class=\"token punctuation\">(</span><span class=\"token string\">\"/dev/ttyAMA1\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">115200</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Write to UART\"</span><span class=\"token punctuation\">)</span>\n        ser<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>b<span class=\"token string\">\"Hello from Atlas 200 DK\\n\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\" spellcheck=\"true\"># Read up to 32 bytes, with timeout of 2 seconds</span>\n    readdata <span class=\"token operator\">=</span> ser<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token string\">'Received reply: {readdata}'</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n<p>Atlas开发板联网后输入 pip install python-periphery ，然后运行 python3 uart.py 即可。</p>\n<p><a href=\"https://www.cnblogs.com/dongxiaodong/p/9992083.html\">Python的串口通信（pyserial） - 东小东 - 博客园 (cnblogs.com)</a></p>\n<h5 id=\"相关链接\"><a href=\"#相关链接\" class=\"headerlink\" title=\"相关链接\"></a>相关链接</h5><ol>\n<li> Atlas 200 DK 外设接口样例 <a href=\"https://gitee.com/ascend/samples/tree/master/cplusplus/level1_single_api/5_200dk_peripheral\">https://gitee.com/ascend/samples/tree/master/cplusplus/level1_single_api/5_200dk_peripheral</a> uart案例可参考该链接，将STM32串口和单板串口对接，TXD接RXD，串口波特率配置成一致，可以通讯。16-白-RX 18-绿-TX 20-黑-GND（即外侧那排的第8个引脚为白，第9个为绿，第10个为黑）</li>\n</ol>\n<h5 id=\"发送格式\"><a href=\"#发送格式\" class=\"headerlink\" title=\"发送格式\"></a>发送格式</h5><p>0xAE 0xEA {len} {cmd} {x0} {x1} {y0} {y1} {w0} {w1} 0xEF 0xFE<br>len = total - 4 (例如该情况len=0x08)<br>cmd = 0x11<br>x0 = (x + speed_offset)*100 / 256<br>x1 = (x + speed_offset)*100 &amp; 0xff</p>\n<p>speed_offset = 200<br>(x典型取值50)</p>\n<p><img src=\"/2021/03/12/%E6%8A%80%E6%9C%AF/%E3%80%90%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E3%80%91%E5%9F%BA%E4%BA%8EAtlas-200-DK%E7%9A%84%E9%9A%9C%E7%A2%8D%E7%89%A9%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/image-20210428101449468.png\" alt=\"image-20210428101449468\"></p>\n<p>![image-20210516110157569](【毕业设计】基于Atlas-200-DK的障碍物识别系统设计与实现/image-20210516110157569.png</p>\n<p><img src=\"/2021/03/12/%E6%8A%80%E6%9C%AF/%E3%80%90%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E3%80%91%E5%9F%BA%E4%BA%8EAtlas-200-DK%E7%9A%84%E9%9A%9C%E7%A2%8D%E7%89%A9%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/image-20210516110020248.png\" alt=\"image-20210516110020248\"></p>\n<h3 id=\"避障算法设计\"><a href=\"#避障算法设计\" class=\"headerlink\" title=\"避障算法设计\"></a>避障算法设计</h3><h5 id=\"检测区域划分\"><a href=\"#检测区域划分\" class=\"headerlink\" title=\"检测区域划分\"></a>检测区域划分</h5><p>思路一：只取车前方的检测结果（如只取图像中央三分之一处的检测结果）</p>\n<p>思路二：和车道线检测结合到一起，只将车道线范围内的目标识别为障碍物</p>\n<h3 id=\"项目总体定位\"><a href=\"#项目总体定位\" class=\"headerlink\" title=\"项目总体定位\"></a>项目总体定位</h3><p>重点在于识别出目标障碍物，而不是躲避障碍物。系统的输出为目标的类型及目标框的位置，优点是采用了搭载华为昇腾处理器的开发板Atlas 200 DK，识别速度非常快，可达几十ms一次。为了方便演示，选用人作为目标障碍物，假定人高度为175，通过拟合来测距，当距离小于设定值时发出停止信号。</p>\n<h2 id=\"总体测试\"><a href=\"#总体测试\" class=\"headerlink\" title=\"总体测试\"></a>总体测试</h2><p>摄像头正向</p>\n<p><img src=\"/2021/03/12/%E6%8A%80%E6%9C%AF/%E3%80%90%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E3%80%91%E5%9F%BA%E4%BA%8EAtlas-200-DK%E7%9A%84%E9%9A%9C%E7%A2%8D%E7%89%A9%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/image-20210516095559800.png\" alt=\"image-20210516095559800\"></p>\n<p>运行程序：</p>\n<pre><code>ssh HwHiAiUser@192.168.1.2\ncd /home/HwHiAiUser/testfile/xuezhang_test/python/level2_simple_inference/2_object_detection/YOLOV3_coco_detection_picture/src\npython3 object_detect.py</code></pre>\n<p>程序运行截图</p>\n<p><img src=\"/2021/03/12/%E6%8A%80%E6%9C%AF/%E3%80%90%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E3%80%91%E5%9F%BA%E4%BA%8EAtlas-200-DK%E7%9A%84%E9%9A%9C%E7%A2%8D%E7%89%A9%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/image-20210516100236140.png\" alt=\"image-20210516100236140\"></p>\n<p>uart传输的数据</p>\n<p><img src=\"/2021/03/12/%E6%8A%80%E6%9C%AF/%E3%80%90%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E3%80%91%E5%9F%BA%E4%BA%8EAtlas-200-DK%E7%9A%84%E9%9A%9C%E7%A2%8D%E7%89%A9%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/image-20210516112012898.png\" alt=\"image-20210516112012898\"></p>\n<p><img src=\"/2021/03/12/%E6%8A%80%E6%9C%AF/%E3%80%90%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1%E3%80%91%E5%9F%BA%E4%BA%8EAtlas-200-DK%E7%9A%84%E9%9A%9C%E7%A2%8D%E7%89%A9%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/image-20210516111952166.png\" alt=\"image-20210516111952166\"></p>\n","categories":["技术"],"tags":["深度学习","神经网络","Atlas","障碍物识别","目标识别"]},{"title":"【电赛】线路负载及故障检测装置","url":"/2021/03/13/%E6%8A%80%E6%9C%AF/%E3%80%90%E7%94%B5%E8%B5%9B%E3%80%91%E7%BA%BF%E8%B7%AF%E8%B4%9F%E8%BD%BD%E5%8F%8A%E6%95%85%E9%9A%9C%E6%A3%80%E6%B5%8B%E8%A3%85%E7%BD%AE/","content":"<p>这是2019年的国赛题，赛题链接为 <a href=\"https://youngyyp.github.io/download/2019_c.pdf\">https://youngyyp.github.io/download/2019_c.pdf</a></p>\n<p>我们小组的报告下载链接为 <a href=\"https://youngyyp.github.io/download/2019report.pdf\">https://youngyyp.github.io/download/2019report.pdf</a></p>\n<a id=\"more\"></a>\n\n<p>题目要求如下图所示：</p>\n<p><img src=\"/2021/03/13/%E6%8A%80%E6%9C%AF/%E3%80%90%E7%94%B5%E8%B5%9B%E3%80%91%E7%BA%BF%E8%B7%AF%E8%B4%9F%E8%BD%BD%E5%8F%8A%E6%95%85%E9%9A%9C%E6%A3%80%E6%B5%8B%E8%A3%85%E7%BD%AE/image-20210314203332601.png\" alt=\"image-20210314203332601\"></p>\n<p><img src=\"/2021/03/13/%E6%8A%80%E6%9C%AF/%E3%80%90%E7%94%B5%E8%B5%9B%E3%80%91%E7%BA%BF%E8%B7%AF%E8%B4%9F%E8%BD%BD%E5%8F%8A%E6%95%85%E9%9A%9C%E6%A3%80%E6%B5%8B%E8%A3%85%E7%BD%AE/image-20210314204048793.png\" alt=\"image-20210314204048793\"></p>\n<p>这个题目我们就差负载的网络结构没有做出来，不过这部分的分值较大，最后只得了省二等奖。还差一名就是省一，差两名就是国奖。（希望明天上交的分数线不要这样搞我心态，球球了&gt;.&lt;）</p>\n<p>最终的作品实物图</p>\n<p><img src=\"/2021/03/13/%E6%8A%80%E6%9C%AF/%E3%80%90%E7%94%B5%E8%B5%9B%E3%80%91%E7%BA%BF%E8%B7%AF%E8%B4%9F%E8%BD%BD%E5%8F%8A%E6%95%85%E9%9A%9C%E6%A3%80%E6%B5%8B%E8%A3%85%E7%BD%AE/98A42894CD1A83DF99E066FF81B52447.jpg\" alt=\"img\"></p>\n<p>比赛期间的伙食</p>\n<p><img src=\"/2021/03/13/%E6%8A%80%E6%9C%AF/%E3%80%90%E7%94%B5%E8%B5%9B%E3%80%91%E7%BA%BF%E8%B7%AF%E8%B4%9F%E8%BD%BD%E5%8F%8A%E6%95%85%E9%9A%9C%E6%A3%80%E6%B5%8B%E8%A3%85%E7%BD%AE/073EEBE3ADC8768CD77F6E7458FEE2EF.jpg\" alt=\"img\"></p>\n<p>调bug</p>\n<p><img src=\"/2021/03/13/%E6%8A%80%E6%9C%AF/%E3%80%90%E7%94%B5%E8%B5%9B%E3%80%91%E7%BA%BF%E8%B7%AF%E8%B4%9F%E8%BD%BD%E5%8F%8A%E6%95%85%E9%9A%9C%E6%A3%80%E6%B5%8B%E8%A3%85%E7%BD%AE/72E10092A5795009CC075D06B096D162.jpg\" alt=\"img\"></p>\n<p>截止时间到</p>\n<p><img src=\"/2021/03/13/%E6%8A%80%E6%9C%AF/%E3%80%90%E7%94%B5%E8%B5%9B%E3%80%91%E7%BA%BF%E8%B7%AF%E8%B4%9F%E8%BD%BD%E5%8F%8A%E6%95%85%E9%9A%9C%E6%A3%80%E6%B5%8B%E8%A3%85%E7%BD%AE/image-20210314215346801.png\" alt=\"image-20210314215346801\"></p>\n<p>装箱评测</p>\n<p><img src=\"/2021/03/13/%E6%8A%80%E6%9C%AF/%E3%80%90%E7%94%B5%E8%B5%9B%E3%80%91%E7%BA%BF%E8%B7%AF%E8%B4%9F%E8%BD%BD%E5%8F%8A%E6%95%85%E9%9A%9C%E6%A3%80%E6%B5%8B%E8%A3%85%E7%BD%AE/72A042A874BB3868CB583A44600D94D2.jpg\" alt=\"img\"></p>\n","categories":["电赛"],"tags":["线路故障检测","自平衡电桥","正交解调"]},{"title":"吴恩达深度学习课程作业","url":"/2021/03/02/%E6%8A%80%E6%9C%AF/%E5%90%B4%E6%81%A9%E8%BE%BE%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B%E4%BD%9C%E4%B8%9A/","content":"<p>笔记目录<a href=\"http://www.ai-start.com/dl2017/\">http://www.ai-start.com/dl2017/</a></p>\n<p>课后习题1（仅含选择题，界面更好）<a href=\"https://www.kesci.com/mw/project/5e20243e2823a10036b542da\">https://www.kesci.com/mw/project/5e20243e2823a10036b542da</a></p>\n<p>课后习题2（含选择题和编程题）<a href=\"https://blog.csdn.net/u013733326/article/details/79827273\">https://blog.csdn.net/u013733326/article/details/79827273</a></p>\n<h2 id=\"第一节后作业\"><a href=\"#第一节后作业\" class=\"headerlink\" title=\"第一节后作业\"></a>第一节后作业</h2><p>我的答案：D AC ABD A C A B ACD B AB  </p>\n<p>标准答案：1.D 2.AC 3.ABD 4.<strong>B</strong> 5.C 6.<strong>B</strong> 7.B 8.<strong>AC</strong> 9.B 10.AB</p>\n<p>改错：</p>\n<p>4.</p>\n<p><em>结构化数据</em></p>\n<p>结构化数据是数据的<em>数据库</em>(<em>即行数据,存储在数据库里,可以用二维表结构来逻辑表达实现的数据</em>)</p>\n<p><em>非结构化数据</em></p>\n<p>非结构化数据,包括所有格式的办公文档、文本、图片、XML、HTML、各类报表、图像和音频/视频信息等等</p>\n<p>8.</p>\n<p>CNN、RNN、DNN区别 —— <a href=\"https://blog.csdn.net/lff1208/article/details/77717149\">https://blog.csdn.net/lff1208/article/details/77717149</a> </p>\n<a id=\"more\"></a>\n\n<h2 id=\"第二节课后作业\"><a href=\"#第二节课后作业\" class=\"headerlink\" title=\"第二节课后作业\"></a>第二节课后作业</h2><p>我的答案：11.B 12.D 13.B 14.C 15.C 16.C 17.C 18.B 19.C 20.B</p>\n<p>标准答案：11.B 12.D 13.B 14.C 15.<strong>D</strong> 16.C 17.C 18.B 19.<strong>A</strong> 20.B</p>\n<p>改错：</p>\n<pre><code>15：</code></pre>\n<pre><code>a = np.random.randn(4, 3) # a.shape = (4, 3)\nb = np.random.randn(3, 2) # b.shape = (3, 2)\nc = a * b</code></pre>\n<p>运算符 “*” 说明了<strong>按元素乘法</strong>来相乘，但是元素乘法需要两个矩阵之间的维数相同，所以这将报错，无法计算。</p>\n<pre><code>19：</code></pre>\n<pre><code>a = np.random.randn(3, 3)\nb = np.random.randn(3, 1)\nc = a * b</code></pre>\n<p>这将会使用广播机制，b会被复制三次，就会变成(3,3)，再使用<strong>元素乘法</strong>。所以： <code>c.shape = (3, 3)</code></p>\n<h3 id=\"第三节课后作业\"><a href=\"#第三节课后作业\" class=\"headerlink\" title=\"第三节课后作业\"></a>第三节课后作业</h3><p>我的答案：21.</p>\n","categories":["技术"],"tags":["深度学习","神经网络"]},{"title":"吴恩达深度学习课程第一课_神经网络与深度学习","url":"/2021/02/09/%E6%8A%80%E6%9C%AF/%E5%90%B4%E6%81%A9%E8%BE%BE%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%80%E8%AF%BE_%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%B8%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/","content":"<h1 id=\"第一周-深度学习引言\"><a href=\"#第一周-深度学习引言\" class=\"headerlink\" title=\"第一周:深度学习引言\"></a>第一周:深度学习引言</h1><p>笔记目录<a href=\"http://www.ai-start.com/dl2017/\">http://www.ai-start.com/dl2017/</a></p>\n<p>课后习题1（仅含选择题，不过界面更好）<a href=\"https://www.kesci.com/mw/project/5e20243e2823a10036b542da\">https://www.kesci.com/mw/project/5e20243e2823a10036b542da</a></p>\n<p>课后习题2（含选择题和编程题）<a href=\"https://blog.csdn.net/u013733326/article/details/79827273\">https://blog.csdn.net/u013733326/article/details/79827273</a></p>\n<h3 id=\"神经网络简述\"><a href=\"#神经网络简述\" class=\"headerlink\" title=\"神经网络简述\"></a>神经网络简述</h3><p>在有关神经网络的文献中，你经常看得到这个函数。从趋近于零开始，然后变成一条直线。这个函数被称作<strong>ReLU激活函数</strong>，它的全称是Rectified Linear Unit。</p>\n<p>对于图像应用，我们经常在神经网络上使用<strong>卷积</strong>(Convolutional Neural Network)，通常缩写为<strong>CNN</strong><br>对于序列数据，经常使用<strong>RNN</strong>，一种<strong>递归神经网络</strong>（Recurrent Neural Network）</p>\n<p><strong>结构化数据</strong>意味着数据的基本数据库。例如在房价预测中，你可能有一个数据库，有专门的几列数据告诉你卧室的大小和数量，这就是结构化数据。或预测用户是否会点击广告，你可能会得到关于用户的信息，比如年龄以及关于广告的一些信息，然后对你的预测分类标注，这就是结构化数据，意思是每个特征，比如说房屋大小卧室数量，或者是一个用户的年龄，都有一个很好的定义。</p>\n<p><strong>非结构化数据</strong>是指比如音频，原始音频或者你想要识别的图像或文本中的内容。这里的特征可能是图像中的像素值或文本中的单个单词。</p>\n<a id=\"more\"></a>\n\n<h1 id=\"第二周：神经网络的编程基础\"><a href=\"#第二周：神经网络的编程基础\" class=\"headerlink\" title=\"第二周：神经网络的编程基础\"></a>第二周：神经网络的编程基础</h1><p><strong>逻辑回归</strong>(Logistic Regression)是一个用于<strong>二分类</strong>(binary classification)的算法。首先我们从一个问题开始说起，这里有一个二分类问题的例子，假如你有一张图片作为输入，比如这只猫，如果识别这张图片为猫，则输出标签1作为结果；如果识别出不是猫，那么输出标签0作为结果。</p>\n<p><img src=\"https://raw.githubusercontent.com/youngyyp/blogpicture/master/img/image-20210130230331844.png\" alt=\"image-20210130230331844\"></p>\n<p>本节主要介绍逻辑回归的<strong>Hypothesis Function</strong>（假设函数）</p>\n<p><img src=\"https://raw.githubusercontent.com/youngyyp/blogpicture/master/img/image-20210130170346158.png\" alt=\"image-20210130170346158\"></p>\n<p>逻辑回归的<strong>代价函数</strong>（Logistic Regression Cost Function）</p>\n<p>我们通过这个称为的损失函数，来衡量预测输出值和实际值有多接近。一般我们用预测值和实际值的平方差或者它们平方差的一半，但是通常在逻辑回归中我们不这么做，因为当我们在学习逻辑回归参数的时候，会发现我们的优化目标不是凸优化，只能找到多个局部最优值，梯度下降法很可能找不到全局最优值，虽然平方差是一个不错的损失函数，但是我们在逻辑回归模型中会定义另外一个损失函数。</p>\n<p>我们在逻辑回归中用到的<strong>损失函数</strong>是：<img src=\"https://raw.githubusercontent.com/youngyyp/blogpicture/master/img/image-20210130232244430.png\" alt=\"image-20210130232244430\"></p>\n<p><strong>损失函数是单个样本的损失，成本函数是数据集总的损失，都是越小越好。</strong></p>\n<h3 id=\"梯度下降法（Gradient-Descent）\"><a href=\"#梯度下降法（Gradient-Descent）\" class=\"headerlink\" title=\"梯度下降法（Gradient Descent）\"></a>梯度下降法（Gradient Descent）</h3><p><img src=\"https://raw.githubusercontent.com/youngyyp/blogpicture/master/img/image-20210130232432229.png\" alt=\"image-20210130232432229\"></p>\n<h3 id=\"Python-中的广播（Broadcasting-in-Python）\"><a href=\"#Python-中的广播（Broadcasting-in-Python）\" class=\"headerlink\" title=\"Python 中的广播（Broadcasting in Python）\"></a>Python 中的广播（Broadcasting in Python）</h3><p>numpy两个数组的相加、相减以及相乘都是<strong>对应元素</strong>之间的操作。</p>\n","categories":["技术"],"tags":["深度学习","神经网络"]},{"title":"常用hexo博客操作","url":"/2021/02/12/%E6%8A%80%E6%9C%AF/%E5%B8%B8%E7%94%A8hexo%E5%8D%9A%E5%AE%A2%E6%93%8D%E4%BD%9C/","content":"<h3 id=\"常用hexo指令\"><a href=\"#常用hexo指令\" class=\"headerlink\" title=\"常用hexo指令\"></a>常用hexo指令</h3><p><strong>hexo s</strong> (hexo server) : 启动本地服务器，用于预览主题。默认地址： <a href=\"http://localhost:4000/\">http://localhost:4000/</a></p>\n<p><strong>hexo g</strong> (hexo generate) : 生成网站静态文件到默认设置的 public 文件夹。</p>\n<p><strong>hexo d</strong> (hexo deploy) : 自动生成网站静态文件，并部署到设定的仓库。</p>\n<p><strong>hexo clean</strong> : 清除缓存文件 db.json 和已生成的静态文件 public。</p>\n<p><strong>hexo new</strong> + md文件名称 ：会在/source/__posts目录下生成md文件以及创建同名的文件夹。</p>\n<p><strong>hexo new page</strong> + 页面名称 ：新建一个页面，默认地址为 主页地址/页面名称。</p>\n<a id=\"more\"></a>\n\n<h3 id=\"设置hexo首页只显示部分摘要（不显示全文）\"><a href=\"#设置hexo首页只显示部分摘要（不显示全文）\" class=\"headerlink\" title=\"设置hexo首页只显示部分摘要（不显示全文）\"></a>设置hexo首页只显示部分摘要（不显示全文）</h3><p>法一：在文章的<code>front-matter</code>中添加<code>description</code>，其中<code>description</code>中的内容就会被显示在首页上，其余一律不显示。</p>\n<pre><code>---\ntitle: 让首页显示部分内容\ndate: 2020-02-23 22:55:10\ndescription: 这是显示在首页的概述，正文内容均会被隐藏。\n---</code></pre>\n<p>法二：在需要截断的地方加入：</p>\n<pre><code>&lt;!--more--&gt;</code></pre>\n<p>首页就会显示这条以上的所有内容，隐藏接下来的所有内容。</p>\n<h3 id=\"好用的插件\"><a href=\"#好用的插件\" class=\"headerlink\" title=\"好用的插件\"></a>好用的插件</h3><p>隐藏文章的插件<a href=\"https://github.com/printempw/hexo-hide-posts\">https://github.com/printempw/hexo-hide-posts</a></p>\n<p>hexo显示pdf<a href=\"https://blog.csdn.net/qq_43701912/article/details/107291518\">https://blog.csdn.net/qq_43701912/article/details/107291518</a>  ——我试了很久都无效</p>\n<h3 id=\"hexo博客中提供文件下载链接\"><a href=\"#hexo博客中提供文件下载链接\" class=\"headerlink\" title=\"hexo博客中提供文件下载链接\"></a>hexo博客中提供文件下载链接</h3><p>在博客的suorce文件夹下放入文件，路径为主页路径+文件在suorce文件夹中的路径。</p>\n<p><img src=\"/2021/02/12/%E6%8A%80%E6%9C%AF/%E5%B8%B8%E7%94%A8hexo%E5%8D%9A%E5%AE%A2%E6%93%8D%E4%BD%9C/image-20210314002727138.png\" alt=\"image-20210314002727138\"></p>\n<p>如这样的路径就是<a href=\"https://youngyyp.github.io/download/test1.doc\">https://youngyyp.github.io/download/test1.doc</a></p>\n","categories":["技术"],"tags":["hexo指令"]},{"title":"cpp学习笔记","url":"/2021/05/30/%E7%BC%96%E7%A8%8B/cpp%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","content":"<h2 id=\"基础语法\"><a href=\"#基础语法\" class=\"headerlink\" title=\"基础语法\"></a>基础语法</h2><h4 id=\"相关网站\"><a href=\"#相关网站\" class=\"headerlink\" title=\"相关网站\"></a>相关网站</h4><p><a href=\"https://blog.csdn.net/ClaireSy/article/details/108422945\">《黑马》——C++基础入门_漏网小鱼的博客-CSDN博客</a></p>\n<h4 id=\"函数的分文件编写\"><a href=\"#函数的分文件编写\" class=\"headerlink\" title=\"函数的分文件编写\"></a>函数的分文件编写</h4><p>函数分文件编写一般有4个步骤</p>\n<ol>\n<li>创建后缀名为.h的头文件</li>\n<li>创建后缀名为.cpp的源文件</li>\n<li>在头文件中写函数的声明</li>\n<li>在源文件中写函数的定义，include头文件</li>\n<li>在要用改函数的文件中include头文件</li>\n</ol>\n<h4 id=\"冒泡排序函数\"><a href=\"#冒泡排序函数\" class=\"headerlink\" title=\"冒泡排序函数\"></a>冒泡排序函数</h4><pre class=\" language-c++\"><code class=\"language-c++\">//冒泡排序函数\nvoid bubbleSort(int * arr, int len)  //int * arr 也可以写为int arr[]\n{\n    for (int i = 0; i < len - 1; i++)\n    {\n        for (int j = 0; j < len - 1 - i; j++)\n        {\n            if (arr[j] > arr[j + 1])\n            {\n                int temp = arr[j];\n                arr[j] = arr[j + 1];\n                arr[j + 1] = temp;\n            }\n        }\n    }\n}\n</code></pre>\n<h4 id=\"结构体指针\"><a href=\"#结构体指针\" class=\"headerlink\" title=\"结构体指针\"></a>结构体指针</h4><p>结构体变量通过 <code>.</code> 来访问成员，而结构体指针通过 <code>-&gt;</code> 来访问成员</p>\n<h4 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h4><p>引用的本质在c++内部实现是一个<strong>指针常量</strong>，即可改变值不可改变指向（C++推荐用引用技术，因为语法方便，如 int&amp; b = a）</p>\n<h4 id=\"内存分区模型\"><a href=\"#内存分区模型\" class=\"headerlink\" title=\"内存分区模型\"></a>内存分区模型</h4><p>C++程序在执行时，将内存大方向划分为<strong>4个区域</strong></p>\n<ul>\n<li>代码区：存放函数体的二进制代码，由操作系统进行管理的</li>\n<li>全局区：存放<strong>全局变量和静态变量以及常量</strong></li>\n<li>栈区：<strong>由编译器自动分配释放, 存放函数的参数值,局部变量等</strong></li>\n<li>堆区：<strong>由程序员分配和释放,若程序员不释放,程序结束时由操作系统回收</strong></li>\n</ul>\n","categories":["编程语言"],"tags":["c++"]},{"title":"21年一战上海交通大学电子系819初试及复试逆袭经验贴","url":"/2021/04/01/%E9%9A%8F%E7%AC%94/%E4%B8%80%E6%88%98%E4%B8%8A%E6%B5%B7%E4%BA%A4%E9%80%9A%E5%A4%A7%E5%AD%A6%E7%94%B5%E5%AD%90%E7%B3%BB819%E5%88%9D%E8%AF%95%E5%8F%8A%E5%A4%8D%E8%AF%95%E9%80%86%E8%A2%AD%E7%BB%8F%E9%AA%8C%E8%B4%B4/","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>我的成绩排名并不太好，写此篇单纯是想记录一下自己的经历，仅供参考。</p>\n<p>参考书什么的，我会简单一提，主要讲下对于819专业课的理解。我更多的想写一写我在考研的过程中的一些感悟和小建议，在我看来这比单纯的列写推荐书目以及进度安排更为重要。</p>\n<p>首先，我希望学弟学妹们在考研之前认真的想一想以下几个问题：</p>\n<ol>\n<li>我为什么要考研？</li>\n<li>为什么不选择工作或出国呢？</li>\n<li>我是一个能沉得住心的人吗？或者说，考研这枯燥的几个月甚至是一年，我能坚持下来吗？</li>\n<li>你能接受考研失败吗？</li>\n</ol>\n<p>其次，我会说说我自己对这几个问题的理解，以及我的一些小感悟和小建议。</p>\n<p>最后，我会讲述我的<strong>复试经历</strong>。（复试面试时一共5位老师，其中有<strong>4位</strong>老师在面试完后都给我打电话邀请我加入团队）</p>\n<a id=\"more\"></a>\n\n<h3 id=\"个人背景介绍（21届考研）\"><a href=\"#个人背景介绍（21届考研）\" class=\"headerlink\" title=\"个人背景介绍（21届考研）\"></a>个人背景介绍（21届考研）</h3><p>本科：武汉某985，加权排名年级前27%，参加过两年电赛培训。</p>\n<p>初试成绩：总分370– （21年分数线355），出乎意料的数学爆炸（只有一百零几分），所以可以说初试考的很糟糕，且初试成绩排名处于录取人数（120人）的边缘。</p>\n<p>复试：总分160+（满分200分），复试成绩使我排名上涨40+。</p>\n<hr>\n<h3 id=\"参考书推荐\"><a href=\"#参考书推荐\" class=\"headerlink\" title=\"参考书推荐\"></a>参考书推荐</h3><p><strong>专业课：</strong>专业课我考的还不错，我的推荐书目可能有点不一样。信号与系统（ss)  当然还是推荐上交本科的教材——胡光锐老师编写的《信号与系统》（作为课本）以及配套的习题《信号与系统习题精解与考研指导》（俗称白皮书）。不过数字信号处理（dsp）我其实不太推荐奥本海默的书，反而我强推上交本科的教材——刘兴钊老师的《数字信号处理》 （作为课本）。</p>\n<p>奥本海默的书实在是写的太细了，其实对于最近几年的命题趋势来说，没必要这么细。我一开始也是看的奥本的书，啃的很难受，而且上面很多不会考的内容。同时奥本书后的的习题，我刷的时候感觉就是一直抄答案（个人认为时间较紧的话刷一遍重点题就行了，不过记得做好笔记）。直到我有一天翻开了<strong>刘兴钊</strong>老师的书，里面的内容都是活生生的考点啊！而且内容简洁明了，我觉得更适合中国学生，看着本书的效率完爆看奥本的书。而且我做了真题后发现，真题中很多题目都是直接来自于这本书的例题中，同时课后的习题质量也很高，做一遍选填题后对概念的理解会更深入。而且最近几年dsp考试的题型都更偏向于概念，选填题增多，刘的书更符合这个趋势。</p>\n<p>总结，其实819并不是特别难，说难其实是因为奥本的书以及习题特别难啃，但是在我看来，可以以刘的书为主力，奥本的书为辅助。如果不追求130以上的分数，看刘的书绝对是更好的选择，特别是对于时间紧张的同学。</p>\n<p><strong>数学：</strong>不建议大家一直纠结于买谁的书好，多刷题才是王道，而且不要以为以前很少考的今年就不考，复习一定要全面！（我就是吃了这个亏）。具体推荐书目大家看看别的帖子吧，别太纠结。</p>\n<p><strong>英语、政治：</strong>相信我，如果时间紧的话，这两门没必要花太多时间，最后的分数差不了多少。在保证数学专业课能拿高分的情况下再多看看英语，政治最后突击一下分都差不多。（当然，这两门你想打80+的话还是得多下功夫的，但是实际情况是你可能比别人多看很久，最后却只比别人高几分或者甚至还比别人低。大家一般都在70分左右）</p>\n<p>ps：我是有颈椎问题的，初试效率可能比其他人低很多。不过没经历过颈椎病的人估计也无法感同身受，就不多说了，总之，<strong>注意身体</strong>！！！！</p>\n<hr>\n<h3 id=\"问题解答以及一些建议\"><a href=\"#问题解答以及一些建议\" class=\"headerlink\" title=\"问题解答以及一些建议\"></a>问题解答以及一些建议</h3><p>先说说我对下面这几个问题的理解吧。</p>\n<ol>\n<li><p><strong>我为什么要考研？</strong></p>\n<p> 是因为大家都考研吗？还是因为父母的期待？还是因为自己对于职场的恐惧，想给自己一点缓冲的时间？还是因为自己对学术很感兴趣，想进一步深造？还是觉得自己本科过的太混了或者觉得本科学校不够好？还是觉得考研后工资更高？我相信每个人对这个问题都有不同的答案，不管是什么样的回答，希望这个答案能足以坚持你走完这条并不平坦的路。</p>\n</li>\n<li><p><strong>为什么不选择工作或出国呢？</strong></p>\n<p> 其实很多人在考研途中又去选择了工作，或者边找工作边考研。如果能更早的明确以后的方向，岂不是更好？</p>\n<p> 如果你的专业是互联网行业相关（别的我不了解），认真准备一年或者半年是绝对可以找到一份不错的工作的，而且研究生的工资并不会高特别多，如果你中途退出或者因为没有认真准备而没过初试，转而去找工作，为什么不一开始就选择找工作呢？</p>\n<p> 如果家庭条件允许，出国其实也是一个很好的选择，同等努力下，出国可以进入更好的学校。（我个人对国外不向往，热爱祖国，当然家庭条件也不允许哈哈~）</p>\n</li>\n<li><p><strong>我是一个能沉得住心的人吗？或者说，考研这枯燥的几个月甚至是一年，我能坚持下来吗？</strong></p>\n<p> 当你备考时，会陆陆续续听到周围许多同学都找到了工作，有的甚至工资很高，你会继续坚持吗？</p>\n<p> 当你备考时，找到工作的和保研了的人都在和小伙伴愉快的玩耍，你会继续坚持吗？</p>\n<p> 当你备考时，找工作和出国的同学都拿到了offer，而你的未来还很迷茫，你会继续坚持吗？</p>\n<p> 当你备考时，遇到了一位心爱的ta，你会继续坚持吗？</p>\n<p> ……</p>\n</li>\n<li><p><strong>你能接受考研失败吗？</strong></p>\n<p> 我曾经以为我能接受，但我现在觉得我的确接受不了。若你运气不太好（从另一方面也可以说运气比较好了），初试差很多分，考完就知道自己绝对考不上，那么你马上开始准备找工作（1月份开始），春招的时候（3月份最集中）你还有很大的可能找到一份不错的工作。若你运气很差，初试过了复试又被刷了，这时可能已经到了4月份中旬左右，春招已经基本接近尾声，那么，你的机会还有多少？对于我这个不想二战的人来说，我的确很难接受。那么你怎么想？</p>\n</li>\n</ol>\n<p><strong>我的一些小建议：</strong></p>\n<ol>\n<li><p>尽早确定学校，最好不要中途换</p>\n</li>\n<li><p>找几个一起考研的小伙伴，互相监督，互相鼓励，更容易坚持下去哦~</p>\n</li>\n<li><p>学的好不如选的好，选择学校和专业也是一场博弈，非常重要！</p>\n</li>\n<li><p>知乎很好，但不要贪多哦！每个人的说法都各有不同，还是得跟着自己的节奏来</p>\n</li>\n<li><p>考研其实也没那么难，别被一些文章和公众号营造的焦虑困扰。</p>\n</li>\n<li><p>如果觉得自己没啥奖项和项目经历，尽量选择本校或者复试占比小的学校（上交初试500分，复试200分。复试中面试占80分，笔试占100分，英语占20分）</p>\n</li>\n<li><p>千万不要以为初试完了就完事大吉了，复试同样重要！特别是简历要精心打磨，上面的每一个点都要能回答。</p>\n</li>\n<li><p><strong>身体第一！</strong>千万要注意身体啊！！！少久坐！多运动！一定不要因为考研而不坚持运动了啊！不要熬夜！</p>\n</li>\n<li><p>初试更重要的是<strong>坚持</strong>，复试则与你本科前几年所学的知识和项目关系更大，不过不同学校不太一样，有的甚至复试的面试分数基本没啥差距，这也是一个很重要的因素。</p>\n</li>\n</ol>\n<hr>\n<h3 id=\"复试经历\"><a href=\"#复试经历\" class=\"headerlink\" title=\"复试经历\"></a>复试经历</h3><p>3月初可能是我最迷茫最黑暗的时候，那时初试分数刚出来，群里做了个成绩调查，统计结果是400分以上的比以往任何一年都多，大家都预测今年分数线会上涨很多（关于这个，几乎每年都会有人在群里喊分数线必涨，很搞人心态）。我估摸着自己可能处于分数线边缘，非常难受。一边复习一边看调剂信息，同时还想着是不是得准备找工作了，还有毕业设计的老师也在催进度。四重折磨让我压力山大，爸妈和我的很多朋友来鼓励我，很感谢他们。最后我还是决定赌一把，相信光~</p>\n<p>我算是很幸运，比复试线高出了十几分。这让我信心大增，本科的项目经历也为我在复试中增色不少。最终复试逆袭，<strong>排名上涨了40多名</strong>。同时在复试面试结束后，有<strong>4位</strong>面试老师都给我打电话邀请我加入。想看具体的<strong>复试经历</strong>请见我的另一篇博客——《考研感悟》<a href=\"https://youngyyp.github.io/2021/03/02/%E8%80%83%E7%A0%94%E6%84%9F%E6%82%9F/#more\">https://youngyyp.github.io/2021/03/02/%E8%80%83%E7%A0%94%E6%84%9F%E6%82%9F/#more</a></p>\n","categories":["随笔"],"tags":["考研"]},{"title":"日常随笔","url":"/2021/07/04/%E9%9A%8F%E7%AC%94/%E6%97%A5%E5%B8%B8%E9%9A%8F%E7%AC%94/","content":"<h4 id=\"2021-7-4\"><a href=\"#2021-7-4\" class=\"headerlink\" title=\"2021/7/4\"></a>2021/7/4</h4><p>好久没有静下来写点什么了，这几天放假回家，一直都在和朋友们玩儿，散步，吃饭，聊天，看鬼片，拍照，打麻将，游泳，遛狗，弹琴，唱歌。好像挺充实的，但心中却又总觉得空落落的，为什么呢，可能是心中有好多话压抑着没有言说吧。此刻，当我独自一人，戴着耳机，听着舒缓的音乐，敲击着键盘，写下心中所想，才觉得轻松了许多。</p>\n<p>的确像许多人说的那样，我好像总是把自己的事情埋在心里。可能是语言表达能力不够吧，也可能是没有到那种情绪吧。和朋友们一起玩的时候，常常他们玩的很嗨的时候，我内心却毫无波澜。他们或笑，或跳，或讲故事，或聊综艺，而我只是静静地听着，好像他们越兴奋，我离他们越远。不知道这算不算所谓的社恐，不过对于有些特别好的朋友不会出现这样的情况。</p>\n<p>总有人问我，你不打游戏，也不看综艺，也不追剧，你每天都在干什么。是啊，我每天在干什么呢。我想说，我打游戏，而且打的也不少，只是越长大越觉得，缺少了小时候那种对游戏不知名的热爱，现在在我看来打游戏只是一种社交；我也会看剧，只是看的没有许多狂热看剧爱好者看的多，我喜欢好剧，喜欢那种能让人回想好久的剧，而不是紧跟最新更新的剧。若你认为除了这些，就没有其他的事情可做了，或者说就没有其他的娱乐可做了，那你挺惨的。对于我来说，我有着更多喜欢做的事情。我喜欢和朋友一起运动，我喜欢一个人在房间的时候唱歌弹琴，我喜欢在清晨背上包，到图书馆安安静静地看一本书，我喜欢在夕阳落下之前去健身房健身，我喜欢在黄昏之时出去遛狗，我喜欢在月亮高悬之时和你散步聊天，我喜欢你（哈哈，不知道是不是你）。</p>\n"},{"title":"考研感悟","url":"/2021/03/02/%E9%9A%8F%E7%AC%94/%E8%80%83%E7%A0%94%E6%84%9F%E6%82%9F/","content":"<h4 id=\"2021-3-2\"><a href=\"#2021-3-2\" class=\"headerlink\" title=\"2021/3/2\"></a>2021/3/2</h4><p>考研分数出来了，考的很糟糕，政治69，英语一71，数学一102，专业课127，总分369。</p>\n<p>按照目前群里的统计，400分以上的已经远超往年，我很大概率不会过线了。我爸想让我调剂，我有点想直接去找工作了。</p>\n<a id=\"more\"></a>\n\n<p>一时间不知道如何是好，辛辛苦苦准备了差不多一年，最后的结果就是这样吗？本来估分起码有个三百八九十分，结果谁知数学给了我当头一棒，这一棒瞬间把我打成了一个没有梦想的咸鱼。或许自己真的是数学天赋不够吧，毕竟高考也是数学考砸了。付出了那么多的时间，反而还没别人考的好。或许我真该反思一下是不是自己做了太多的无用功。</p>\n<p>或许一开始就不应该选择考研这条路。当初凭着一腔热血以及对步入社会的恐惧，选择了考研，硬撑着颈椎病走到了现在，看着别的同学能坐那不动学一天，好生羡慕，而我顶多坐一个小时就必须出去活动一下，不然疼的受不了。跟别人说我脖子疼，大多也是笑笑，只有得过颈椎病的人才能体会我的难处。</p>\n<p>当然，这也并不是说为成绩考差找借口，我承认数学没考好是我自己的原因，我也确确实实尽到了我能做的最大努力。只是确实心有不甘，明明是保研边缘的成绩，最后连研都没考上，做了一年的无用题，真的是对不起我自己，也对不起大家对我的厚望。有时候，我常常想，要是我一直成绩就很差那该多好啊，那样大家就不会对我期望那么高了，我找个工资一般的工作也不会有人说什么了，我是不是就可以做我想做的事情了呢？（不过，我到底想做什么呢，哈哈我自己也不知道，我可能只是想混吧）</p>\n<p>哎，明明感觉心里有很多东西想说，可是真要我来写，又不知道写什么了，要是研真没考上，找几个兄弟去喝酒吧，或许这样我能把堵在心中的话说出来吧。记得以前我说过，要是什么时候我开始喝酒了，那就证明我向这个世界妥协了。我真的有点累了，虽然确实很想为这个世界做点什么，做点什么能让后人记得的好事。小时候以为自己以后能够很厉害，自己的qq号昵称都是 I am the one and only (我独一无二) 。而现在才发现，自己不过是一个毫不起眼的小角色罢了，特别是在东九下课的时候，上千人蜂拥而出，在这人潮中，所有人都和我差不多，仅仅在这些人中，我就已经被淹没的无影无踪，只能随着人潮慢慢前进。</p>\n<p>​    <img src=\"/2021/03/02/%E9%9A%8F%E7%AC%94/%E8%80%83%E7%A0%94%E6%84%9F%E6%82%9F/image-20210302221734426.png\" alt=\"image-20210302221734426\"></p>\n<p>今天在一本书中看到上面一段话，有人又成功考上了研，又拿了几个好offer，又谈了恋爱，而我一无所有。</p>\n<p>时候不早了，教室只有我一个人了，下次再写吧。</p>\n<p><img src=\"/2021/03/02/%E9%9A%8F%E7%AC%94/%E8%80%83%E7%A0%94%E6%84%9F%E6%82%9F/image-20210302222157963.png\" alt=\"image-20210302222157963\"></p>\n<h4 id=\"2021-3-5\"><a href=\"#2021-3-5\" class=\"headerlink\" title=\"2021/3/5\"></a>2021/3/5</h4><p>这两天感觉好了很多，决定一条路走到黑了，不管找工作的事情了，这让我轻松许多。在小木虫上发布了我的调剂信息后，一个中科院近物所的老师加了我，很希望我去他们那。同时曾老师也帮我找了一些调剂信息，虽然不太行，但还是投了一个西电的。总之是有保底的了，那就加油冲吧！</p>\n<h4 id=\"2021-3-12\"><a href=\"#2021-3-12\" class=\"headerlink\" title=\"2021/3/12\"></a>2021/3/12</h4><p>今年校线出了，还是330分，不过校线也没啥太大的意义。今天搞完了毕设的开题答辩，可以短期内不用管毕设的事情了，接下来核心任务还是去认真准备复试，如果上天真的给了我这个机会，而我却没有好好珍惜的话，那才是真的难受。既然一切都还有希望，那么在最后揭晓的那一刻来临之前，都要努力去拼一拼啊！还有那么多人为我加油鼓气呢！（在这里真心的感谢为我鼓起和提供帮助的人）我怎么能自己先放弃了呢。明天得认真看笔试了。</p>\n<p>关于找工作的事情，可以先看看嵌入式开发的方向，毕竟我本科基本都是在做嵌入式，对于我来说，这个方向所需的准备时间也少一些，没进复试再找工作！现在要分清孰轻孰重，学长说让我好好准备，先别管毕设了，复试逆袭的可能性还很大。</p>\n<p>同时，每天晚上开始梳理以前电赛或者课设所做的东西，并整理成md文档发到博客上吧，每天一个项目！</p>\n<p>噗，现在看上面3月2日的记录，感觉自己好憨啊，没事儿就别瞎想，做好当下的事情！累了就去运动！加油！</p>\n<h4 id=\"2021-3-13\"><a href=\"#2021-3-13\" class=\"headerlink\" title=\"2021/3/13\"></a>2021/3/13</h4><p>今天中科院的老师给我发消息，说是下周末他们搞线下复试，问我去不去。我想，就算上交没过线，也不会去他们那里吧，去了的话，我或许会后悔很久很久吧。终究还是想去大城市闯一闯啊。我这人有个毛病，似乎很难多线程，如果有一件什么事情等着我去完成，那我就中途不想管其他事情了。</p>\n<p>希望能进复试吧！我相信天无绝人之路，无论结果如何，总会走下去的。听习大大的话，不忘初心啊！</p>\n<h4 id=\"2021-3-29\"><a href=\"#2021-3-29\" class=\"headerlink\" title=\"2021/3/29\"></a>2021/3/29</h4><p>距离复试完有好几天了，这几天感觉发生了好多好多事啊！</p>\n<p>首先，很幸运，我进入了复试，今年上交分数线<strong>356分</strong>，没想到这么多高分的情况下，分数线只比去年高了一分，真可以称的上是奇迹再现了！感谢之前在我感到最黑暗的时候鼓励了我的好朋友们！果然，灯不会在，任何时候为我开，是好是坏，该不该，还没来的不想猜~~ 确实很多时候，做好眼前的事就好，不用去猜那些还没有发生的事情。毕竟，谁也说不清楚未来会怎样。</p>\n<p>确定进入复试后，自然是疯狂的学，因为复试线发布是15号，线下复试，21号笔试，22号面试。于是我20号便和我爸一起去了上海。终于是成功来到我心心念念了一年的真正的大城市，由于直接坐地铁到了闵行，当我真正踏上这片土地时，也并未觉得有什么不同，心想，上海就这？哈哈。</p>\n<p>当21号来到上交时，看到曾经在我电脑桌面的校门真正的出现在我的眼前，顿时觉得好像有那么一点点不真实。有一说一，上交的建筑风格确实完爆我科。第一天是下午笔试，往年都是一个小时，今年改成了俩小时，不过还好，并没有更改题型，还是50道选择题，那这就没啥好说的了，毕竟选择题怎么都可以做，不会考很深入。笔试考完确实轻松了许多，又赶紧回宾馆准备面试。</p>\n<p>面试的简历是非常重要的，好在我很早就在开始写我的简历，而且把简历里面可能问到的每个点都思考了一遍，并写在纸上。我被分在了第二天上午，一大早7点多我就到面试地点了，去的时候教室还一个人都没有，谁知面试顺序是按成绩排的，一直等到中午11点半才到我。</p>\n<hr>\n<p>（下面的面试过程考虑后面出一个对话版，现在可能比较乱，凑合看看我刺激的面试历程吧！</p>\n<p>​                                                                                                    ——<strong>论我是如何在面试时就斩获4位老师青睐的？</strong>）</p>\n<p>一进门，一共5位面试老师（用ABCDE来代称吧，有些问题记不清是哪个老师问的了，就不明写了）和一名学生（负责收我们的资料），老师们正在互相交流，好像很随意，也没有全把目光盯到我身上。我将提前准备好的简历和成绩单发给老师们，然后站到讲台上（不同教室不一样，有的教室学生坐着），鞠躬说道，老师好！然后<strong>A老师</strong>开始用英文提问，第一个问题是让我介绍我的毕设。这个我有所准备，所以答上来了，不过由于很紧张，也是吞吞吐吐的。接下来，谁知他让我介绍我毕设里面的一个设备（Atlas 200 DK），啊这，这谁答的上来啊，问这么细，我知道用中文怎么说，但是让我说英文，我无能为力，憋了半天说了个AI compute machine。A老师步步紧逼，继续问我具体有什么功能，我也记不清当时说了啥，反正嗯嗯啊啊了很久，A老师也没继续问了，英语问答环节到此结束。（其实后来想想，这个环节其实也没多重要，我感觉老师就是想留点时间看看我的简历，我吞吞吐吐的时候老师也并没在意，大多都是盯着我的简历在看。）</p>\n<p>接着<strong>A老师</strong>就用中文问起了我的电赛经历，让我介绍一下电赛的项目，这可是我花大力气准备了的，当然丝毫不慌，把功能讲了一遍。老师们好像对这很感兴趣，又继续问我原理，（只要是自己真正做了的项目，遇到懂行的老师是真的好，我就是怕老师不问，只要他问，我都能答上来），这我自然是把原理讲了一通，老师们十分满意，脸上都露出了笑容，我也进入了闲聊模式，放松下来了。然后老师又让我介绍一下软件课设，我也就先介绍了一下功能，然后老师问我为什么数据库要选择mongodb，我很实在的说这是我队友负责的部分，我只负责前端的工作，老师也没有继续深究。</p>\n<p>后面老师又看到我下面写的大一大二加入学校的电工基地，做的电赛的培训项目，（我写了好多项目）老师随便抽了一个红外线信号传输的项目，问我怎么实现的，（哈哈，幸好我把每个项目都准备了一遍，而且这些都是我真正做过的项目，自然是手到擒来，还是那句话，就怕他不问），我回答原理和结构后，老师们也很高兴，接着跟我讨论里面为什么要用到我说的方法，我依然答上来了。项目的问题基本就到此结束，后面就真的是纯闲聊了。</p>\n<p>A老师问我以后想做什么方向，我说只要不是纯硬件都可以，毕竟硬件有时候太玄了！老师笑着总结我的话：”那意思就是，你大一大二搞了两年硬件搞伤心了，想做软件了，可以这么理解吧？那我看看你软件的课程学的怎么样，哦！python成绩挺高的嘛！“我说python是最后课设用pygame做了个植物大战僵尸的游戏。C老师问，那你觉得verilog是属于硬件还是软件呢？我说，应该也算硬件吧，毕竟它叫硬件编程语言嘛。</p>\n<p>然后E老师看到我参加了很多课外活动，问我是怎么分配时间的，我说周六周日都会去实验室学电赛的培训，时间安排挺紧的。B老师看到我的绩点，很疑惑的问我绩点这么高怎么没保研？而且成绩排年级前27%。我笑着说大概要前25%才能保研（上交保研率更高，我这个排名在上交就保研了）。老师也笑着说那刚好差一点啊，很可惜。又看到我初试成绩不高，问我排多少名，我说排114，（一共招120个），老师们又笑着说那你这和你保研一样都是边缘啊！说我就是数学考差了点。我也答道确实如此，数学成绩出乎了我的预料。又问我有没有联系导师，我说联系了一个，但是那个老师说不确定有没有名额。</p>\n<p>基本就是这些，老师看了下时间说差不多了，我道谢后下去，<strong>B老师笑着对我说祝我好运</strong>。然后老师们都把简历递给了我，但是到<strong>C老师的时候，他说要把我的简历留一份</strong>在这儿，那我自然是同意，旁边的<strong>B老师</strong>对他说，学校规定是不能留学生简历的！几个老师笑了笑，最后还是留下了简历。我走出教室门的时候，<strong>A老师又跟着我出来，跟我说表现不错，让我记一下他电话</strong>，等会跟我打过来。（哈哈，内心极其激动。）</p>\n<p>谁知这还没完，本来面试完就差不多12点多了，我出去和我爸（学校不让家长进去，辛苦我爸一直在学校外等我了）找了家餐馆，刚准备开吃，一个电话打过来，就是<strong>A老师</strong>，问我现在在哪，想跟我谈谈，我说正在跟我爸吃饭，然后他说他1点半有个会，让我3点去他办公室找他交流交流。我接完电话，没吃几口菜，又来一个电话（<strong>B老师</strong>），说：“你还记不记得我，我是那个跟你说了祝你好运的老师，想邀请你加入我们团队……”。我加了他微信，他给我发了一个链接让我报名参加他们晚上的所面（可是我因为复试之前联系的老师（叫<strong>0老师</strong>吧）的所面也是在这个晚上，我看在前面老师跟我打电话聊了很久的份上，先去了他那，这个后面再说）。我再次接完电话，又回去没吃几口饭，一个电话再次响起（这次是<strong>C老师</strong>），我一样接完电话加了微信。最后，总算是清净了一会儿，安安心心地吃完了饭。</p>\n<p>下午和A老师聊了一个多小时，主要是他在讲，跟我讲他们实验室的研究方向，以及回答我的一些小问题，总之聊的还是很愉快的。聊完后我走到电院草坪上，静静地躺着，终于可以休息一小会儿了！</p>\n<p>紧接着，晚上又去参加<strong>0老师</strong>的所面，不过他居然不在，是其他老师面的我，这个所的老师似乎对我的项目并不感兴趣，甚至有一个女老师居然指着我的电赛项目说：”我看你这也没做过什么实际的东西啊，也就是买几个模块来拼一拼而已“（我TM瞬间不想聊下去了，不仅不懂，还在这随便诋毁别人的项目，估计这老师连电赛是啥都不知道吧）。总之，我对这个研究所的印象极其差，非常后悔来这里面试。也因为来了这面试，我错过了B老师的所面，后面问他时，他说名额已经确定，说我怎么不早点跟他说，感到非常可惜。</p>\n<p>说实话，这个所面对我的打击很大，有点不想再面试了。不过，也让我明白，找一个懂你的老师是多么重要，我很幸运，复试面试我的5位老师都很好，都很懂我。（我就跟A老师发消息说想去他那，结果谁知，他又说还会安排明天下午让我我见他手下两个小老板）还是不能自己放弃机会啊！最后还是决定去下一个所试一试。（这个研究所是我随便报的，去聊的也很随意，没啥意思，就不多说）。22号的面试就正是结束了，也大概9点多了。</p>\n<p>第二天上午好好睡了觉（其实也没睡太着，多在床上躺了会儿而已），结果刚洗漱完，又接到一个电话，也是我之前随便投的一个研究所，是一个女老师（叫<strong>F老师</strong>吧）打来的电话，问我还记不记得他们所，问我还在不在上海，在的话下午想让我到他们那聊聊，我说我下午约了2点面试。然后她说，你肯定不会聊一下午吧，你聊完了跟我发消息再过来。我看老师这般邀请，自然不能拒绝。</p>\n<p>下午去见了A老师手下的两个小老板，有一个我很不喜欢，感觉很严肃，而且说还得再测我一轮，给我一个论文，让我一周内复现。我心想这也太搞了吧，面了这么多次还要测试，感觉不信任我，虽然我很喜欢A老师（他是大老板，不会直接带学生），但是不喜欢这个小老板，还是不太想去他们这了。</p>\n<p>跟他们聊完后，又发现B老师跟我打电话，说学校多给了他一个名额，问我想不想去，然后让我加他手下一个博士生，跟博士生用微信聊了会儿，说要跟我保持联系。此时我本来想的是，已经有这么多老师对我感兴趣了，要不不去F老师那面试了吧，可到了差不多4点时，F老师又跟我发微信问我情况，让我别急，他们等我去。我心想，老师这么热情，还是去一下吧，不能自己放弃机会啊。</p>\n<p>去到F老师那，老师让我坐着等会儿，过一会儿来了两个男老师，<strong>没想到其中一个就是当初面试我的D老师</strong>。（其实我开始以为会是很多同学都来这排队复试，没想到就我一个）这两位老师基本没问我什么技术问题，就是闲聊，说很看好我，还问我喜欢唱谁的歌，室友情况怎么样等等问题（感觉好像是在做性格测试）。总之，这两个老师是我聊的最开心的。</p>\n<p>至此，全部面试结束。我和我爸晚上去外滩看了看，然后第二天坐飞机回家了。</p>\n<p>回到家，下午我躺在床上补觉，醒来的时候，发现又有电话没接，群里也炸开了锅。原来是复试没通过的收到了死亡短信，我看了看没收到，应该是过了。电话是F老师打来的，还是问我想不想去他们那儿。最终经过我深思熟虑，<strong>选择了F老师的研究所。</strong></p>\n<hr>\n<p>这么多场面试下来，也算是涨了很多经验。也让我深刻地认识到，<strong>曾经的努力都没有白费</strong>（大学没白过就足够了）！这波不亏！以后也要继续努力！</p>\n<hr>\n<p>哈哈，现在看当最开始写的东西，好丧啊，好傻&gt;.&lt;  还是乐观点好啊！</p>\n","categories":["随笔"],"tags":["考研"]},{"title":"verilog学习笔记","url":"/2021/07/16/FPGA/verilog%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","content":"<h2 id=\"Modelsim使用技巧\"><a href=\"#Modelsim使用技巧\" class=\"headerlink\" title=\"Modelsim使用技巧\"></a>Modelsim使用技巧</h2><h3 id=\"基本操作流程\"><a href=\"#基本操作流程\" class=\"headerlink\" title=\"基本操作流程\"></a>基本操作流程</h3><h4 id=\"图形界面操作\"><a href=\"#图形界面操作\" class=\"headerlink\" title=\"图形界面操作\"></a>图形界面操作</h4><ol>\n<li>新建工程（建议给每个工程单独建文件夹）</li>\n<li>调试的时候直接在library中的work目录下对testbench文件右键simulate</li>\n</ol>\n<h4 id=\"命令行操作\"><a href=\"#命令行操作\" class=\"headerlink\" title=\"命令行操作\"></a>命令行操作</h4><p>①创建一个工程和工程库;<br>②加载设计文件（包括你编写好的testbench）；<br>③编译源文件；<br>④运行仿真，并查看结果；<br>⑤最后进行工程调试。<br>上面为利用modelsim的仿真步骤，利用do文件可以完成以上1—4步。</p>\n<p>例程<br>（1） sim_run.bat文件用于批处理<br>@set modelsim=C:\\modeltech64_10.7\\win64\\vsim.exe<br>@if exist vsim.wlf del vsim.wlf<br>%modelsim% -do sim_top.do</p>\n<p>（“％环境变量名％”用法的含义是取指定环境变量的值）<br>首先设置modelsim的执行路径，可以是vsim.exe也可以是modelsim.exe<br>然后删除历史运行的vsim.wlf文件，以便后面进行更新<br>最后用DOS命令调用modelsim工具，并在modelsim工具中执行sim._top.do文件<br>(2)sim_top.do文件<br>vlib work<br>//建立work库</p>\n<p>vmap work work<br>//将目前逻辑库work和实际工作库work相映射对应<br>vlog -f vlog-rtl.list<br>#将vlog-rtl.list文件中所有文件编译</p>\n<p>vopt +acc=npr tb_top -o tb_top_opt<br>#仿真时优化tb_top输出tb_top_opt<br>vsim tb_top_opt<br>#仿真tb_top_opt</p>\n<p>(也可以直接 vsim -novopt work.tb_top)</p>\n<p>do wave.do<br>#运行wave.do，添加wave的信息<br>run 20ms<br>#运行20ms （run -all：运行全过程）<br>（3）vlog-rtl.list<br>../rtl/<em>.v<br>#上级文件夹rtl的所有v文件<br>../../calc_engine/</em>.v<br>#上上级文件夹calc_engine文件夹的所有v文件<br>../sim/tb/*.v<br>上级sim/tb文件夹内的所有v文件<br>（4）wave.do<br>通过添加并设置波形参数，保存为wave.do文件</p>\n<p>更多详情可参考 <a href=\"http://blog.sina.com.cn/s/blog_7e2e98ad0101gxx7.html\">http://blog.sina.com.cn/s/blog_7e2e98ad0101gxx7.html</a></p>\n<p> log -r /* 对所有的信号记录，运行这个命令后即使在仿真前没有把信号加入wave窗口，仿真完成后直接加入wave窗口就可以查看波形，比较方便，但是缺点是当工程较大和仿真时间很长时仿真速度较慢，占用内存也较大。<br> vsim  -voptargs=”+acc”<br>+acc意思是设计中所有的信号都提供入口，可以观察，而log命令的意思就是在运行仿真的时候信号不用加入wave窗口在开始仿真后直接可以看波形，意思就是他记录了所有的信号波形<br>观察其它窗口的结果，用view *命令显示 。view *命令可以观察包括signals、wave、dataflow等窗口文件，也可以分别打开。例如用view signals来观察信号变量。</p>\n<h2 id=\"verilog语法\"><a href=\"#verilog语法\" class=\"headerlink\" title=\"verilog语法\"></a>verilog语法</h2><ul>\n<li><p>always块中被赋值的变量只能为reg</p>\n</li>\n<li><p>不可在不同的always块中对同一个reg赋值</p>\n</li>\n<li><p>assign 语句对已经定义的wire赋值，wire也可在被定义的时候赋值，wire变量只能被赋值一次</p>\n</li>\n<li><p>组合逻辑用阻塞赋值，非组合逻辑用非阻塞赋值。——<strong>组合逻辑</strong>电路在逻辑功能上的特点是任意时刻的输出仅仅取决于该时刻的输入，与电路原来的状态无关。<strong>时序逻辑</strong>电路在逻辑功能上的特点是任意时刻的输出不仅取决于当时的输入信号，而且还取决于电路原来的状态，或者说，还与以前的输入有关</p>\n</li>\n<li><p>`timescale 1 ns / 1 ps 该指令用于定义时延、仿真的单位和精度</p>\n</li>\n<li><p>`default_nettype wand 用于默认设置为线网类型</p>\n</li>\n<li><p><a href=\"https://blog.csdn.net/qq397381823/article/details/87521885\">verilog设计过程寄存器使用#1的问题_烟花一时的博客-CSDN博客</a></p>\n</li>\n<li><p>{1’b0,1’b0,1’b0,1’b0,1’b0,1’b0,1’b0,1’b0}可以简单写成{8{1’b0}}</p>\n</li>\n<li><p>input、inout 类型不能声明为 reg 数据类型，因为 reg 类型是用于保存数值的，而输入端口只能反映与其相连的外部信号的变化，不能保存这些信号的值。</p>\n<p>  output 可以声明为 wire 或 reg 数据类型。</p>\n</li>\n<li><h6 id=\"端口连接规则\"><a href=\"#端口连接规则\" class=\"headerlink\" title=\"端口连接规则:\"></a>端口连接规则:</h6><p>  <strong>输入端口</strong></p>\n<p>  模块例化时，从模块外部来讲， input 端口可以连接 wire 或 reg 型变量。这与模块声明是不同的，从<strong>模块内部</strong>来讲，<strong>input 端口必须是 wire 型变量</strong>。</p>\n<p>  <strong>输出端口</strong></p>\n<p>  模块例化时，从模块外部来讲，output 端口必须连接 wire 型变量。这与模块声明是不同的，从<strong>模块内部</strong>来讲，<strong>output 端口可以是 wire 或 reg 型变量</strong>。</p>\n<p>  <strong>输入输出端口</strong></p>\n<p>  模块例化时，从模块外部来讲，inout 端口必须连接 wire 型变量。这与模块声明是相同的。</p>\n<p>  <strong>悬空端口</strong></p>\n<p>  模块例化时，如果某些信号不需要与外部信号进行连接交互，我们可以将其悬空，即端口例化处保留空白即可，上述例子中有提及。</p>\n<p>  output 端口正常悬空时，我们甚至可以在例化时将其删除。</p>\n<p>  input 端口正常悬空时，悬空信号的逻辑功能表现为高阻状态（逻辑值为 z）。但是，例化时一般不能将悬空的 input 端口删除，否则编译会报错。</p>\n</li>\n<li></li>\n</ul>\n","categories":["FPGA"],"tags":["verilog","modelsim"]},{"title":"【FPGA】图像处理","url":"/2021/07/23/FPGA/%E3%80%90FPGA%E3%80%91%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/","content":"<h2 id=\"图像的中值滤波\"><a href=\"#图像的中值滤波\" class=\"headerlink\" title=\"图像的中值滤波\"></a>图像的中值滤波</h2><p>统计排序滤波器是非线性滤波器的一种，这里我们学习较为常见的<strong>中值滤波</strong>，并以掩膜大小为3*3进行举例，来说明使用FPGA设计二维中值滤波器的流程。</p>\n<h3 id=\"一、行缓存\"><a href=\"#一、行缓存\" class=\"headerlink\" title=\"一、行缓存\"></a>一、行缓存</h3><p>在FPGA数字图像处理中，行缓存的使用非常频繁，例如我们需要图像矩阵操作的时候就需要进行缓存，例如图像的均值滤波，中值滤波，高斯滤波以及sobel边缘查找等都需要行缓存设计。</p>\n<p><img src=\"/2021/07/23/FPGA/%E3%80%90FPGA%E3%80%91%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/image-20210723151332772.png\" alt=\"image-20210723151332772\"><img src=\"/2021/07/23/FPGA/%E3%80%90FPGA%E3%80%91%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/image-20210723151214106.png\" alt=\"image-20210723151214106\" style=\"zoom: 80%;\"></p>\n<p>图像数据以数据流的方式，先从左到右，然后从上到下将每一个像素数据输出。若要获取如上左图中的3*3矩阵，则必须对行数据进行缓存，如下图所示，采用两个FIFO即可解决行缓存的问题，下图即可同时获取到第一个掩膜所覆盖的9个数据。基本思路是，第一行数据依次输入进来写入fifo1，当写到第一行最后一个数据时，开始从fifo1依次读出数据然后写入fifo2，依次类推。通过行缓存的方式使前三行的输出对齐。</p>\n<p><img src=\"/2021/07/23/FPGA/%E3%80%90FPGA%E3%80%91%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/line_buffer.png\" alt=\"line_buffer.png\"></p>\n<h3 id=\"二、并行全比较排序\"><a href=\"#二、并行全比较排序\" class=\"headerlink\" title=\"二、并行全比较排序\"></a>二、并行全比较排序</h3><p>排序是一种重要的数据运算，传统的排序方法主要靠软件串行方式实现，包括冒泡法、选择法、计数法等，这些算法大多采用循环比较，运算费时，实时性差。不能满足工程上越来越高的实时性要求。并行全比较实时排序算法是基于序列中任意两个数并行比较实现。由于全部数字同时进行比较处理，将会占用大量的处理空间，因此此算法也可称为“<strong>以空间换时间</strong>”排序算法。</p>\n<p>假设有一数组{20，80，40，40，60，70}，定为A0=20、A1=80、 A2=40、A3=40、A4=60、A5=70，要求对该数组按从大到小的顺序排列。排序按以下过程进行 ： </p>\n<p><strong>(1) 两两比较，并累积分数。</strong>考虑到可能出现相同的数，规定<strong>下标越大的数优先级越高</strong>，即：</p>\n<pre class=\" language-c\"><code class=\"language-c\">若m<span class=\"token operator\">></span>n<span class=\"token punctuation\">,</span>则选用  （Am<span class=\"token operator\">>=</span>An）<span class=\"token operator\">?</span> <span class=\"token number\">1</span>：<span class=\"token number\">0</span> <span class=\"token punctuation\">;</span>\n若m<span class=\"token operator\">&lt;</span>n，则选用  <span class=\"token punctuation\">(</span>Am<span class=\"token operator\">></span>An<span class=\"token punctuation\">)</span><span class=\"token operator\">?</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">0</span> <span class=\"token punctuation\">;</span></code></pre>\n<p><img src=\"/2021/07/23/FPGA/%E3%80%90FPGA%E3%80%91%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/image-20210723155419045.png\" alt=\"image-20210723155419045\"></p>\n<p><strong>(2) 按积分排序。</strong>由上图可知，积分越大，表明对应的数越大。</p>\n<h4 id=\"3-3数据的中值\"><a href=\"#3-3数据的中值\" class=\"headerlink\" title=\"3*3数据的中值\"></a>3*3数据的中值</h4><p>若直接对3*3掩膜所覆盖的9个数据进行并行全比较排序，资源消耗较大，这里可以分别对每一行的3个数据进行并行全比较排序，获得每一行的中值，再将这3个中值再进行一次排序，取出中值。（这样取出来的不一定是真正的中值，但比较近似，算法复杂度也不高）</p>\n","categories":["FPGA"],"tags":["图像处理"]}]