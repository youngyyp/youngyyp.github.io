[{"title":"纪念我的外婆与我的22岁生日","url":"/2021/08/23/随笔/纪念我的外婆与我的22岁生日/","content":"\n\n\n阳历8月8日，阴历7月初1（我阴历生日的前一天）。那天是星期日，难得的假期，经历了几周995生活的我躺在床上，不知道干什么，同实验室和我住在同一所公寓的两个哥们儿，都去陪女朋友了，在上海其他两个朋友上周也刚聚过。那索性就还是呆在公寓里把导师让我看的书看完吧，可我的确对这本书不感兴趣，看不懂也看不进去，于是便假装随便翻翻。早上8点34分，电话忽然响起，是我爸爸打来的，我以为是日常的关心，接起电话，“喂，有什么事？”，父亲短暂迟疑了几秒“emmm你婆婆过了”  “啊？！？” “我们就来迟了一会……” “……” “你赶紧把核酸检测做了，跟导师请个假回来”。\n\n一时间，我蒙了，虽说昨晚跟爸妈视频时，妈妈还提到婆婆可能不行了，不吃东西了，说要去看婆婆，可谁知会这么突然。我瘫在床上，没有哭，尽我最快的速度查询了从上海回家的相关防疫政策，买好了第二天早上的火车票，和导师请了假，收拾好了行李，拿回了放在实验室的东西。\n\n回到老家，见到了我妈，她看到我的一瞬间就哭了起来，我到婆婆的灵前，磕了三个头，妈妈跪倒在地上，嚎啕大哭，说婆婆还没能等到我工作就走了，我忍住了泪水，扶妈妈起来。接着就是守夜，守满3天后，到了送葬的时间，送葬前的仪式，亲人们围着婆婆的棺材绕圈祷告，这时见到了婆婆最后一面，在见到那冰冷发青的脸的一瞬间，泪水在眼眶不断翻滚。在送葬的路上，母亲再次瘫倒在地上撕心裂肺的哭，我搀着她，我的眼泪止不住流了下来。\n\n走了，真的走了。还记得小时候，每次回老家，婆婆总会拿出许多好吃的让我吃（我想，这应该是她表达对我的关爱最简单质朴的方式了）；还记得婆婆坐在椅子上就睡着了，我还趁机和婆婆合了张影；还记得我烫了头发回去的时候，婆婆居然没认出来我，问我是谁；还记得之前考上研后，见到瘫在床上的婆婆，还记得我考去了上海，还问我怎么不去南京，南京是个好地方，南京有总统府。妈妈说我小时候一直是婆婆把我养大的，可我长大后却似乎没有和婆婆有过太多交流，婆婆耳朵不好，要说非常大声才能听得见，即便我每次回老家的时候只是叫几声婆婆，她便十分高兴，除此之外最常交流的话就是问我放假了吗，什么时候上学，放多少天之类的。\n\n婆婆生于中国动荡之时（1937年），见证了解放战争的胜利与新中国的成立，经历了十年文革的动荡，感受到了中国的飞速发展，却在我们迈入小康社会之时离我们远去。\n\n《寻梦环游记》中有一句台词另外印象非常深刻，“真正的死亡是世界上再没有一个人记得你”。我想通过这篇文章，来纪念我的外婆，至少我会记得，这篇文章会记得。\n\n------\n\n7月初2是我的阴历生日，那天若不是我爸提醒我，我还真想不起来。8月12日是我的阳历生日，那天主动祝福我生日快乐的人有hhgg、jianjian、jieguo、weiguo、dandan，好像没了吧。感谢他们记得我的生日，真的很感谢。没有生日礼物（这点已经习惯，貌似除父母外，我总共收到的生日礼物不超过5个吧，记得上一次收到生日礼物还是高三毕业），也没有等到某个人的祝福。那就这样吧，有人能记得我的生日就不错了，还奢求那么多干嘛呢？若是在上海，大概率是一个人过生日吧。 好好珍惜那些记得我生日的朋友吧！\n\n希望下一次能有惊喜吧，希望22岁，能遇见一个陪我一起走下去的人吧。\n\n","tags":["纪念"],"categories":["随笔"]},{"title":"【FPGA】图像处理","url":"/2021/07/23/嵌入式和硬件/FPGA/【FPGA】图像处理/","content":"\n## 图像的中值滤波\n\n统计排序滤波器是非线性滤波器的一种，这里我们学习较为常见的**中值滤波**，并以掩膜大小为3*3进行举例，来说明使用FPGA设计二维中值滤波器的流程。\n\n### 一、行缓存\n\n在FPGA数字图像处理中，行缓存的使用非常频繁，例如我们需要图像矩阵操作的时候就需要进行缓存，例如图像的均值滤波，中值滤波，高斯滤波以及sobel边缘查找等都需要行缓存设计。\n\n![image-20210723151332772](【FPGA】图像处理/image-20210723151332772.png)<img src=\"【FPGA】图像处理/image-20210723151214106.png\" alt=\"image-20210723151214106\" style=\"zoom: 80%;\" />\n\n图像数据以数据流的方式，先从左到右，然后从上到下将每一个像素数据输出。若要获取如上图中的3*3矩阵，则必须对行数据进行缓存，如下图所示，采用两个FIFO即可解决行缓存的问题，下图即可同时获取到第一个掩膜所覆盖的9个数据。基本思路是，第一行数据依次输入进来写入fifo1，当写到第一行最后一个数据时，开始从fifo1依次读出数据然后写入fifo2，依次类推。通过行缓存的方式使前三行的输出对齐。\n\n![line_buffer.png](【FPGA】图像处理/line_buffer.png)\n\n### 二、并行全比较排序\n\n排序是一种重要的数据运算，传统的排序方法主要靠软件串行方式实现，包括冒泡法、选择法、计数法等，这些算法大多采用循环比较，运算费时，实时性差。不能满足工程上越来越高的实时性要求。并行全比较实时排序算法是基于序列中任意两个数并行比较实现。由于全部数字同时进行比较处理，将会占用大量的处理空间，因此此算法也可称为“**以空间换时间**”排序算法。\n\n假设有一数组{20，80，40，40，60，70}，定为A0=20、A1=80、 A2=40、A3=40、A4=60、A5=70，要求对该数组按从大到小的顺序排列。排序按以下过程进行 ： \n\n**(1) 两两比较，并累积分数。**考虑到可能出现相同的数，规定**下标越大的数优先级越高**，即：\n\n```c\n若m>n,则选用  （Am>=An）? 1：0 ;\n若m<n，则选用  (Am>An)? 1:0 ;\n```\n\n![image-20210723155419045](【FPGA】图像处理/image-20210723155419045.png)\n\n**(2) 按积分排序。**由上图可知，积分越大，表明对应的数越大。\n\n\n\n#### 3*3数据的中值\n\n若直接对3*3掩膜所覆盖的9个数据进行并行全比较排序，资源消耗较大，这里可以分别对每一行的3个数据进行并行全比较排序，获得每一行的中值，再将这3个中值再进行一次排序，取出中值。（这样取出来的不一定是真正的中值，但比较近似，算法复杂度也不高）\n\n\n\n\n\n## TOF的工作原理和数据处理流程\n\n### 一、什么是TOF相机\n\n双目相机是一种被动接收自然光的传感器，通过接收自然光利用三角测距的方式描述三维环境。本文的TOF相机则是一种主动发射红外光的传感器，通过发射光脉冲并接收打到物体反射回来的脉冲信号，最后计算光脉冲的飞行时间得到目标物体的距离。\n\n与激光雷达不同，TOF相机不是以逐点扫描的方式感知环境信息，而是以面阵的方式得到深度图。\n\n### 二、TOF相机的技术原理\n\nTOF相机有两种成像方法，分别为脉冲法和连续波调制法，下面分别介绍其技术原理和优缺点。\n\n1. **脉冲法**：通过记录脉冲波从发出到返回的时间来计算相机到物体的距离，即**D=0.5×c×Δt**（其中c表示光在空气中传播的速度，Δt表示脉冲信号从相机到目标往返的时间）\n\n\t<img src=\"【FPGA】图像处理/image-20210727103401146.png\" alt=\"image-20210727103401146\" style=\"zoom:150%;\" />\n\n\t通过一个**高频率**的时钟驱动计数器对收发脉冲之间的时间进行计数，使得计数时钟的周期必须远小于发送脉冲和接收脉冲之间的时间才能够保证足够的精度。但是如果要达到毫米级别的测量，对控制时钟，发射单元等电子元器件的精度都是一项挑战。这就是为什么无人驾驶中应用的激光雷达传感器常基于脉冲法，因为该方法比较适合**中远距离**的测量。\n\n\t**脉冲法**测量方式简单，占空比窄检测距离远；但是它易受环境光和元器件精度影响，测量精度相对较低。\n\n2. **连续波调制法**：使用调制光照射场景, 并测量通过场景中的物体反射后返回光的相位延迟。得到相位延迟后, 再使用正交采样技术测量间接得到距离，即**D=0.5×c×φ×T/2π**（其中c表示光在空气中传播的速度，T表示调制周期，ϕ表示发射和接收波形的相位差）\n\n\t![image-20210727103341053](【FPGA】图像处理/image-20210727103341053.png)\n\n\t该方法比较适合**中短距离**的测量，精度往往可以达到毫米级，在机器人等应用中使用的TOF相机大多采用的是连续波调制的方法。**相位差**可以消除测量器件带来的固定偏差但是采样次数多，导致测量耗时帧率低。\n\n### 三、如何将相位偏移转换为距离？\n\n两种方法的距离求解公式都是D=c×t。那么t是如何得到的呢？脉冲法比较直接，就不多叙述。\n\n连续波调制法通过测量相位差来计算时间。采用**四次曝光**原理来测量相位差，即传感器上的每个像素以相等的间隔对场景反射的光进行四次采样。\n\n在连续波调制过程中通常将连续波近似为正弦波划分成4个窗口进行采样，并且采样时间间隔相同。设定四次曝光的采样相位分别为：0°，90°，180°，270°。如下图所示：\n\n<img src=\"【FPGA】图像处理/image-20210727141830496.png\" alt=\"image-20210727141830496\" style=\"zoom: 67%;\" />\n\n![image-20210727144035880](【FPGA】图像处理/image-20210727144035880.png)\n\n物体与传感器的距离和相位差可定义如下：\n$$\nDmax = c/2f  \\tag{1}\n$$\n\n$$\nφ=acrtan[(Q_3-Q_1)/(Q_0-Q_2)] \\tag{2}\n$$\n\n$$\nD=cφ/4πf \\tag{3}\n$$\n\n其中Dmax是最大测量距离，D是目标距离，f是ToF发射波的频率，c是光速，Q0-Q3分别为0°-270°的采样值。\n\n公式2的具体推导过程见参考文献[1]。\n\n\n\n### 参考文献\n\n[[1]王胤. 应用于三维成像飞行时间法建模及其误差分析[D].湘潭大学,2017.](https://kns.cnki.net/kcms/detail/detail.aspx?dbcode=CMFD&filename=1017269863.nh&v=MjQ4NDIyNkdiRytGOW5LckpFYlBJUUtESDg0dlI0VDZqNTRPM3pxcUJ0R0ZyQ1VSN3VmWU9Sb0Z5bmdWcnpNVkY=&uid=WEEvREcwSlJHSldSdmVqM1BLVW9SbUxZeG1WK0ZTTVUyWWFNVTVibm1CUT0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!)\n\n[[2]一文详解深度相机之TOF成像,新机器视觉](https://mp.weixin.qq.com/s/5dqn_vrW86plQRPEGY12Dw)\n\n[[3]Y. Fang, X. Wang, Y. Su, K. Zhang and B. Su, \"The Accuracy Analysis of TOF Camera Based on ANOVA,\" 2018 IEEE International Conference on Consumer Electronics-Taiwan (ICCE-TW), 2018, pp. 1-2, doi: 10.1109/ICCE-China.2018.8448475.](https://ieeexplore.ieee.org/document/8448475)\n\n","tags":["图像处理"],"categories":["FPGA"]},{"title":"verilog学习笔记","url":"/2021/07/16/嵌入式和硬件/FPGA/verilog学习笔记/","content":"\n\n\n## Modelsim使用技巧\n\n\n\n### 基本操作流程\n\n\n\n#### 图形界面操作\n\n1. 新建工程（建议给每个工程单独建文件夹）\n2. 调试的时候直接在library中的work目录下对testbench文件右键simulate\n\n\n\n\n\n#### 命令行操作\n\n①创建一个工程和工程库;\n②加载设计文件（包括你编写好的testbench）；\n③编译源文件；\n④运行仿真，并查看结果；\n⑤最后进行工程调试。\n上面为利用modelsim的仿真步骤，利用do文件可以完成以上1—4步。\n\n例程\n（1） sim_run.bat文件用于批处理\n@set modelsim=C:\\modeltech64_10.7\\win64\\vsim.exe\n@if exist vsim.wlf del vsim.wlf\n%modelsim% -do sim_top.do\n\n（“％环境变量名％”用法的含义是取指定环境变量的值）\n首先设置modelsim的执行路径，可以是vsim.exe也可以是modelsim.exe\n然后删除历史运行的vsim.wlf文件，以便后面进行更新\n最后用DOS命令调用modelsim工具，并在modelsim工具中执行sim._top.do文件\n(2)sim_top.do文件\nvlib work\n//建立work库\n\nvmap work work \n//将目前逻辑库work和实际工作库work相映射对应  \nvlog -f vlog-rtl.list \n#将vlog-rtl.list文件中所有文件编译\n\nvopt +acc=npr tb_top -o tb_top_opt\n#仿真时优化tb_top输出tb_top_opt\nvsim tb_top_opt\n#仿真tb_top_opt\n\n(也可以直接 vsim -novopt work.tb_top)\n\ndo wave.do\n#运行wave.do，添加wave的信息\nrun 20ms\n#运行20ms （run -all：运行全过程）\n（3）vlog-rtl.list\n../rtl/*.v\n#上级文件夹rtl的所有v文件\n../../calc_engine/*.v\n#上上级文件夹calc_engine文件夹的所有v文件\n../sim/tb/*.v \n上级sim/tb文件夹内的所有v文件\n（4）wave.do\n通过添加并设置波形参数，保存为wave.do文件\n\n更多详情可参考 http://blog.sina.com.cn/s/blog_7e2e98ad0101gxx7.html\n\n\n\n log -r /* 对所有的信号记录，运行这个命令后即使在仿真前没有把信号加入wave窗口，仿真完成后直接加入wave窗口就可以查看波形，比较方便，但是缺点是当工程较大和仿真时间很长时仿真速度较慢，占用内存也较大。\n vsim  -voptargs=\"+acc\"\n+acc意思是设计中所有的信号都提供入口，可以观察，而log命令的意思就是在运行仿真的时候信号不用加入wave窗口在开始仿真后直接可以看波形，意思就是他记录了所有的信号波形\n观察其它窗口的结果，用view *命令显示 。view *命令可以观察包括signals、wave、dataflow等窗口文件，也可以分别打开。例如用view signals来观察信号变量。\n\n\n\n\n\n## verilog语法\n\n- always块中被赋值的变量只能为reg\n\n- 不可在不同的always块中对同一个reg赋值\n\n- assign 语句对已经定义的wire赋值，wire也可在被定义的时候赋值，wire变量只能被赋值一次\n\n- 组合逻辑用阻塞赋值，非组合逻辑用非阻塞赋值。——**组合逻辑**电路在逻辑功能上的特点是任意时刻的输出仅仅取决于该时刻的输入，与电路原来的状态无关。**时序逻辑**电路在逻辑功能上的特点是任意时刻的输出不仅取决于当时的输入信号，而且还取决于电路原来的状态，或者说，还与以前的输入有关\n\n\t```verilog\n\t组合逻辑：always @(*)  //组合always块相当于assign语句，因此组合电路存在两种表达方法\n\t时序逻辑：always @(posedge clk)\n\t```\n\n- 在**时序逻辑**中，不完整的 if…else… 结构并**不会生成锁存器**，而组合逻辑中不完整的 if…else… 结构就会生成锁存器\n\n- `timescale 1 ns / 1 ps 该指令用于定义时延、仿真的单位和精度\n\n- `default_nettype wand 用于默认设置为线网类型 \n\n- `default_nettype none 会关闭隐式声明功能，有助于查bug\n\n- [verilog设计过程寄存器使用#1的问题_烟花一时的博客-CSDN博客](https://blog.csdn.net/qq397381823/article/details/87521885)\n\n- {1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}可以简单写成{8{1'b0}}\n\n- input、inout 类型不能声明为 reg 数据类型，因为 reg 类型是用于保存数值的，而输入端口只能反映与其相连的外部信号的变化，不能保存这些信号的值。\n\n\toutput 可以声明为 wire 或 reg 数据类型。\n\n- ###### 端口连接规则:\n\n\t**输入端口**\n\n\t模块例化时，从模块外部来讲， input 端口可以连接 wire 或 reg 型变量。这与模块声明是不同的，从**模块内部**来讲，***input 端口必须是 wire 型变量***。\n\n\t**输出端口**\n\n\t模块例化时，**从模块外部来讲，output 端口必须连接 wire 型变量**。这与模块声明是不同的，从**模块内部**来讲，output 端口可以是 wire 或 reg 型变量。\n\n\t**输入输出端口**\n\n\t模块例化时，从模块外部来讲，inout 端口必须连接 wire 型变量。这与模块声明是相同的。\n\n\t**悬空端口**\n\n\t模块例化时，如果某些信号不需要与外部信号进行连接交互，我们可以将其悬空，即端口例化处保留空白即可，上述例子中有提及。\n\n\toutput 端口正常悬空时，我们甚至可以在例化时将其删除。\n\n\tinput 端口正常悬空时，悬空信号的逻辑功能表现为高阻状态（逻辑值为 z）。但是，例化时一般不能将悬空的 input 端口删除，否则编译会报错。\n\n- ```verilog\n\treg [7:0] mem [255:0];//定义在向量名之前的是向量的位宽，定义在向量名之后的维度可以理解为向量数组的长度\n\t```\n\t\n- ```verilog\n\talways @(*) begin\n\t    casez (in[3:0])\n\t        4'bzzz1: out = 0;   // in[3:1]输入什么都可以\n\t        4'bzz1z: out = 1;\n\t        4'bz1zz: out = 2;\n\t        4'b1zzz: out = 3;\n\t        default: out = 0;\n\t    endcase\n\tend\n\t//case项是按顺序检查的(实际上，它更像是生成一个巨大的真值表然后生成超大的门)。注意有输入(例如，4'b1111)匹配多个case项。选择第一个匹配(因此4'b1111匹配第一个case项，out = 0)。\n\t```\n\t\n- ```verilog\n\tfor(i=0;i<3;i=i+1) begin \n\t  \t……  //循环中的 i 最高可到 2\n\tend\n\t\n\tfor(初始化表达式1; 布尔表达式2; 步进表达式4){\n\t         循环体3\n\t}//执行顺序：1234-->234-->234-->不满足为止。\n\t```\n\t\n\t\n\t\n- 端口声明规范，例子如下\n\n\t```verilog\n\tmodule ax_pwm\n\t#(\n\t\tparameter N = 32 //pwm bit width \n\t)\n\t(\n\t    input         clk,\n\t    input         rst,\n\t    input[N - 1:0]period,\n\t    input[N - 1:0]duty,\n\t    output        pwm_out \n\t    );\n\t //在声明时统一使用wire，避免模块连接的时候出现问题\n\treg[N - 1:0] period_r;\n\treg[N - 1:0] duty_r;\n\treg[N - 1:0] period_cnt;\n\treg pwm_r;//若要对输出的值进行修改，则再定义一个reg变量，使用assign语句对wire赋值\n\tassign pwm_out = pwm_r;\n\t```\n\n\t\n\n仿真时的文件操作\n\n- ```verilog\n\t//下面进行文件读操作\n\tinteger file;\n\tinitial begin   \n\t    file = $fopen(\"../data/tof.txt\",\"r\");//只读方式打开文件\n\t    if (!file)\n\t        $display(\"Could not open file!\");\n\t    else begin\n\t        $display(\"Open file success!\");\n\t    end\n\tend\n\t-------------------------------------------\n\talways @(posedge clk or negedge rstn) begin\n\t    if(~rstn)begin\n\t        ……\n\t    end\n\t    else begin\n\t        $fscanf(file,\"%d\",data_i);//将file文件按行读取至data_i,每个时钟读取一次\n\t    end\n\tend\n\t-------------------------------------------\n\t//下面进行文件写操作\n\twire [DW-1:0] data_o;\n\tinteger file_out;\n\t\n\tinitial begin\n\t    file_out = $fopen(\"data_out.txt\", \"w\");\n\t    if (!file)\n\t        $display(\"Could not open file_out!\");\n\t    else begin\n\t        $display(\"Open file_out success!\");\n\t    end\n\tend\n\talways @(posedge clk) begin\n\t    if (……) begin\n\t        $fwrite(file_out, \"%d\\n\", data_o);//将data_o逐行写入\n\t    end    \n\t    else if (……) begin\n\t        $fclose(file_out);//关闭文件\n\t        $finish;//关闭仿真\n\t    end\n\tend\n\t```\n\n### 三段式状态机\n\n![这里写图片描述](verilog学习笔记/70.jpeg)\n\n```verilog\n采用三段式的写法：\n1.状态触发\n2.状态转移\n3.结果输出\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n//第一个always块，时序逻辑，描述现态转移到次态\nalways @ (posedge clk or negedge rst) begin\n    if(rst_n) \n        current_state<=S0;\n    else\n        current_state<=next_state;\nend\n\n//第二个always块，组合逻辑，描述状态转移的条件\nalways @ (current_state) begin  //或者always@(*)\n    next_state = x; //初始化，使得系统复位后能进入正确的状态（可省）\n    case(current_state)\n    S0：begin\n        if(condition1)        next_state = S1;//状态转移\n        else if (condition2)  next_state = S2;//状态转移\n        else next_state <= S0;\n        end\n    S1：begin\n        if(condition3)       next_state = S3;//状态转移\n        else if (condition4) next_state =S4; \n        …\n        end\n    ……\n    default: begin\n            if(condition0)   next_state = S0;//状态转移\n           end\n    endcase\nend\n//第三个always块，时序逻辑，描述输出。这部分也可采用assign输出\nalways @ (posedge clk or negedge rst) begin\nif(rst)\n    out0；\nelse\n    case(current_state)\n    S0: out0;\n    S1: out1;\n    ….\n    default:Out0;\n    endcase\nend\n//////////////////////////////////////////////////////////////////////////////\n```\n\n### generate语句\n\n```verilog\n//四位全加器的实现\nmodule top_module (\n    input [3:0] x,\n    input [3:0] y, \n    output [4:0] sum);\n\n    wire [3:0] cout;\n    assign sum[4]=cout[3];\n    \n    fa fa0(\n        .a(x[0]),\n        .b(y[0]),\n        .cin(1'b0),\n        .cout(cout[0]),\n        .sum(sum[0])\n    );\n    \n    genvar i;\n    generate \n        for(i=1;i<=3;i=i+1)\n        begin:adds\n       \t\tfa fa1(\n            .a(x[i]),\n            .b(y[i]),\n            .cin(cout[i-1]),\n            .cout(cout[i]),\n            .sum(sum[i])\n    \t\t);\n        end\n    endgenerate\nendmodule\n\nmodule fa (\n\tinput a,b,cin,\n    output cout,sum\n);\n    assign {cout,sum} = a+b+cin;    \nendmodule\n    \n```\n\n\n\n## 数电知识\n\n[逻辑代数最大项和最小项的概念表达式的转换及关系_阿锋不知道丶的博客-CSDN博客](https://blog.csdn.net/weixin_43342105/article/details/104515921)\n\n[卡诺图化简法_hahasusu的专栏-CSDN博客_卡诺图](https://blog.csdn.net/hahasusu/article/details/88244155)   \n\n[卡诺图圈零的时候 表达式怎么写圈1表达式是与或式 圈零是或与式？_百度知道 (baidu.com)](https://zhidao.baidu.com/question/427622855038635732.html)\n\n","tags":["verilog","modelsim"],"categories":["FPGA"]},{"title":"日常随笔","url":"/2021/07/04/随笔/日常随笔/","content":"\n#### 2021/7/4\n\n好久没有静下来写点什么了，这几天放假回家，一直都在和朋友们玩儿，散步，吃饭，聊天，看鬼片，拍照，打麻将，游泳，遛狗，弹琴，唱歌。好像挺充实的，但心中却又总觉得空落落的，为什么呢，可能是心中有好多话压抑着没有言说吧。此刻，当我独自一人，戴着耳机，听着舒缓的音乐，敲击着键盘，写下心中所想，才觉得轻松了许多。\n\n的确像许多人说的那样，我好像总是把自己的事情埋在心里。可能是语言表达能力不够吧，也可能是没有到那种情绪吧。和朋友们一起玩的时候，常常他们玩的很嗨的时候，我内心却毫无波澜。他们或笑，或跳，或讲故事，或聊综艺，而我只是静静地听着，好像他们越兴奋，我离他们越远。不知道这算不算所谓的社恐，不过对于有些特别好的朋友不会出现这样的情况。\n\n总有人问我，你不打游戏，也不看综艺，也不追剧，你每天都在干什么。是啊，我每天在干什么呢。我想说，我打游戏，而且打的也不少，只是越长大越觉得，缺少了小时候那种对游戏不知名的热爱，现在在我看来打游戏只是一种社交；我也会看剧，只是看的没有许多狂热看剧爱好者看的多，我喜欢好剧，喜欢那种能让人回想好久的剧，而不是紧跟最新更新的剧。若你认为除了这些，就没有其他的事情可做了，或者说就没有其他的娱乐可做了，那你挺惨的。对于我来说，我有着更多喜欢做的事情。我喜欢和朋友一起运动，我喜欢一个人在房间的时候唱歌弹琴，我喜欢在清晨背上包，到图书馆安安静静地看一本书，我喜欢在夕阳落下之前去健身房健身，我喜欢在黄昏之时出去遛狗，我喜欢在月亮高悬之时散步聊天。\n\n"},{"title":"21年一战上海交通大学电子系819初试及复试逆袭经验贴","url":"/2021/04/01/随笔/一战上海交通大学电子系819初试及复试逆袭经验贴/","content":"\n### 前言\n\n我的成绩排名并不太好，写此篇单纯是想记录一下自己的经历，仅供参考。\n\n参考书什么的，我会简单一提，主要讲下对于819专业课的理解。我更多的想写一写我在考研的过程中的一些感悟和小建议，在我看来这比单纯的列写推荐书目以及进度安排更为重要。\n\n首先，我希望学弟学妹们在考研之前认真的想一想以下几个问题：\n\n1. 我为什么要考研？\n2. 为什么不选择工作或出国呢？\n3. 我是一个能沉得住心的人吗？或者说，考研这枯燥的几个月甚至是一年，我能坚持下来吗？\n4. 你能接受考研失败吗？\n\n其次，我会说说我自己对这几个问题的理解，以及我的一些小感悟和小建议。\n\n最后，我会讲述我的**复试经历**。（复试面试时一共5位老师，其中有**4位**老师在面试完后都给我打电话邀请我加入团队）\n\n<!--more-->\n\n### 个人背景介绍（21届考研）\n\n本科：武汉某985，加权排名年级前27%，参加过两年电赛培训。\n\n初试成绩：总分370– （21年分数线355），出乎意料的数学爆炸（只有一百零几分），所以可以说初试考的很糟糕，且初试成绩排名处于录取人数（120人）的边缘。\n\n复试：总分160+（满分200分），复试成绩使我排名上涨40+。\n\n------\n\n### 参考书推荐\n\n**专业课：**专业课我考的还不错，我的推荐书目可能有点不一样。信号与系统（ss)  当然还是推荐上交本科的教材——胡光锐老师编写的《信号与系统》（作为课本）以及配套的习题《信号与系统习题精解与考研指导》（俗称白皮书）。不过数字信号处理（dsp）我其实不太推荐奥本海默的书，反而我强推上交本科的教材——刘兴钊老师的《数字信号处理》 （作为课本）。\n\n奥本海默的书实在是写的太细了，其实对于最近几年的命题趋势来说，没必要这么细。我一开始也是看的奥本的书，啃的很难受，而且上面很多不会考的内容。同时奥本书后的的习题，我刷的时候感觉就是一直抄答案（个人认为时间较紧的话刷一遍重点题就行了，不过记得做好笔记）。直到我有一天翻开了**刘兴钊**老师的书，里面的内容都是活生生的考点啊！而且内容简洁明了，我觉得更适合中国学生，看着本书的效率完爆看奥本的书。而且我做了真题后发现，真题中很多题目都是直接来自于这本书的例题中，同时课后的习题质量也很高，做一遍选填题后对概念的理解会更深入。而且最近几年dsp考试的题型都更偏向于概念，选填题增多，刘的书更符合这个趋势。\n\n总结，其实819并不是特别难，说难其实是因为奥本的书以及习题特别难啃，但是在我看来，可以以刘的书为主力，奥本的书为辅助。如果不追求130以上的分数，看刘的书绝对是更好的选择，特别是对于时间紧张的同学。\n\n**数学：**不建议大家一直纠结于买谁的书好，多刷题才是王道，而且不要以为以前很少考的今年就不考，复习一定要全面！（我就是吃了这个亏）。具体推荐书目大家看看别的帖子吧，别太纠结。\n\n**英语、政治：**相信我，如果时间紧的话，这两门没必要花太多时间，最后的分数差不了多少。在保证数学专业课能拿高分的情况下再多看看英语，政治最后突击一下分都差不多。（当然，这两门你想打80+的话还是得多下功夫的，但是实际情况是你可能比别人多看很久，最后却只比别人高几分或者甚至还比别人低。大家一般都在70分左右）\n\nps：我是有颈椎问题的，初试效率可能比其他人低很多。不过没经历过颈椎病的人估计也无法感同身受，就不多说了，总之，**注意身体**！！！！\n\n------\n\n### 问题解答以及一些建议\n\n先说说我对下面这几个问题的理解吧。\n\n1. **我为什么要考研？**\n\n\t是因为大家都考研吗？还是因为父母的期待？还是因为自己对于职场的恐惧，想给自己一点缓冲的时间？还是因为自己对学术很感兴趣，想进一步深造？还是觉得自己本科过的太混了或者觉得本科学校不够好？还是觉得考研后工资更高？我相信每个人对这个问题都有不同的答案，不管是什么样的回答，希望这个答案能足以坚持你走完这条并不平坦的路。\n\n2. **为什么不选择工作或出国呢？**\n\n\t其实很多人在考研途中又去选择了工作，或者边找工作边考研。如果能更早的明确以后的方向，岂不是更好？\n\n\t如果你的专业是互联网行业相关（别的我不了解），认真准备一年或者半年是绝对可以找到一份不错的工作的，而且研究生的工资并不会高特别多，如果你中途退出或者因为没有认真准备而没过初试，转而去找工作，为什么不一开始就选择找工作呢？\n\n\t如果家庭条件允许，出国其实也是一个很好的选择，同等努力下，出国可以进入更好的学校。（我个人对国外不向往，热爱祖国，当然家庭条件也不允许哈哈~）\n\n3. **我是一个能沉得住心的人吗？或者说，考研这枯燥的几个月甚至是一年，我能坚持下来吗？**\n\n\t当你备考时，会陆陆续续听到周围许多同学都找到了工作，有的甚至工资很高，你会继续坚持吗？\n\n\t当你备考时，找到工作的和保研了的人都在和小伙伴愉快的玩耍，你会继续坚持吗？\n\n\t当你备考时，找工作和出国的同学都拿到了offer，而你的未来还很迷茫，你会继续坚持吗？\n\n\t当你备考时，遇到了一位心爱的ta，你会继续坚持吗？\n\n\t……\n\n4. **你能接受考研失败吗？**\n\n\t我曾经以为我能接受，但我现在觉得我的确接受不了。若你运气不太好（从另一方面也可以说运气比较好了），初试差很多分，考完就知道自己绝对考不上，那么你马上开始准备找工作（1月份开始），春招的时候（3月份最集中）你还有很大的可能找到一份不错的工作。若你运气很差，初试过了复试又被刷了，这时可能已经到了4月份中旬左右，春招已经基本接近尾声，那么，你的机会还有多少？对于我这个不想二战的人来说，我的确很难接受。那么你怎么想？\n\t\n\t\n\n\n**我的一些小建议：**\n\n1. 尽早确定学校，最好不要中途换\n\n2. 找几个一起考研的小伙伴，互相监督，互相鼓励，更容易坚持下去哦~\n\n3. 学的好不如选的好，选择学校和专业也是一场博弈，非常重要！\n\n4. 知乎很好，但不要贪多哦！每个人的说法都各有不同，还是得跟着自己的节奏来\n\n5. 考研其实也没那么难，别被一些文章和公众号营造的焦虑困扰。\n\n6. 如果觉得自己没啥奖项和项目经历，尽量选择本校或者复试占比小的学校（上交初试500分，复试200分。复试中面试占80分，笔试占100分，英语占20分）\n\n7. 千万不要以为初试完了就完事大吉了，复试同样重要！特别是简历要精心打磨，上面的每一个点都要能回答。\n\n8. **身体第一！**千万要注意身体啊！！！少久坐！多运动！一定不要因为考研而不坚持运动了啊！不要熬夜！\n\n9. 初试更重要的是**坚持**，复试则与你本科前几年所学的知识和项目关系更大，不过不同学校不太一样，有的甚至复试的面试分数基本没啥差距，这也是一个很重要的因素。\n\n------\n\n### 复试经历\n\n3月初可能是我最迷茫最黑暗的时候，那时初试分数刚出来，群里做了个成绩调查，统计结果是400分以上的比以往任何一年都多，大家都预测今年分数线会上涨很多（关于这个，几乎每年都会有人在群里喊分数线必涨，很搞人心态）。我估摸着自己可能处于分数线边缘，非常难受。一边复习一边看调剂信息，同时还想着是不是得准备找工作了，还有毕业设计的老师也在催进度。四重折磨让我压力山大，爸妈和我的很多朋友来鼓励我，很感谢他们。最后我还是决定赌一把，相信光~\n\n我算是很幸运，比复试线高出了十几分。这让我信心大增，本科的项目经历也为我在复试中增色不少。最终复试逆袭，**排名上涨了40多名**。同时在复试面试结束后，有**4位**面试老师都给我打电话邀请我加入。想看具体的**复试经历**请见我的另一篇博客——《考研感悟》[考研感悟 | young's blog (youngyyp.github.io)](https://youngyyp.github.io/2021/03/02/随笔/考研感悟/)\n\n","tags":["考研"],"categories":["随笔"]},{"title":"【电赛】线路负载及故障检测装置","url":"/2021/03/13/嵌入式和硬件/【电赛】线路负载及故障检测装置/","content":"\n这是2019年的国赛题，赛题链接为 https://youngyyp.github.io/download/2019_c.pdf\n\n我们小组的报告下载链接为 https://youngyyp.github.io/download/2019report.pdf\n\n<!--more-->\n\n题目要求如下图所示：\n\n![image-20210314203332601](【电赛】线路负载及故障检测装置/image-20210314203332601.png)\n\n![image-20210314204048793](【电赛】线路负载及故障检测装置/image-20210314204048793.png)\n\n\n\n\n\n这个题目我们就差负载的网络结构没有做出来，不过这部分的分值较大，最后只得了省二等奖。还差一名就是省一，差两名就是国奖。（希望明天上交的分数线不要这样搞我心态，球球了>.<）\n\n最终的作品实物图\n\n![img](【电赛】线路负载及故障检测装置/98A42894CD1A83DF99E066FF81B52447.jpg)\n\n\n\n比赛期间的伙食\n\n![img](【电赛】线路负载及故障检测装置/073EEBE3ADC8768CD77F6E7458FEE2EF.jpg)\n\n\n\n调bug\n\n![img](【电赛】线路负载及故障检测装置/72E10092A5795009CC075D06B096D162.jpg)\n\n\n\n截止时间到\n\n![image-20210314215346801](【电赛】线路负载及故障检测装置/image-20210314215346801.png)\n\n\n\n装箱评测\n\n![img](【电赛】线路负载及故障检测装置/72A042A874BB3868CB583A44600D94D2.jpg)","tags":["线路故障检测","自平衡电桥","正交解调"],"categories":["电赛"]},{"title":"【毕业设计】基于Atlas_200_DK的障碍物识别系统设计与实现","url":"/2021/03/12/嵌入式和硬件/【毕业设计】基于Atlas-200-DK的障碍物识别系统设计与实现/","content":"### 开题答辩——2021/3/12\n\n毕业设计的题目是《基于**Atlas 200 DK**的障碍物识别系统设计与实现》，今天进行了开题答辩，感觉还不错。（就算啥也不会，也要能说的很牛逼才行。只要抓住了评审的点就可以顺利通过）\n\n这个项目的创新点其实就是华为的Atlas 200 DK设备（Atlas 200 DK 开发者套件是一款高性能AI应用开发板，集成了昇腾310 AI处理器，方便用户快速开发、快速验证，可广泛应用于开发者方案验证、高校教育、科学研究等场景。）怎么说也卖3999元呢，希望后面不要有太多的坑。\n\n下一步的计划肯定是先拿到这个开发板，然后把一切环境都配置好。后面会再这里记录一下使用Atlas 200 DK的过程以及碰到的一些坑。\n\n<!--more-->\n\n### 基本操作\n\n主机密码：Huawei@123\n\n连接atlas：ssh HwHiAiUser@192.168.1.2     atlas密码为：Mind@123        \n\n[解决 shell脚本中SCP命令需要输入密码的问题]: https://blog.csdn.net/u012454773/article/details/72779439\n\n启动mindstudio（版本为2.0.0beta2）：~/program/MindStudio-ubuntu/bin/MindStudio.sh\n\n若连接不上atlas，则在命令行输入 rm -rf ~/.ssh/known_hosts 即可\n\n\n\n主从机文件传输：  https://bbs.huaweicloud.com/blogs/168928\n\n```javascript\nscp -r $HOME/samples/cplusplus/level2_simple_inference/2_object_detection/YOLOV3_coco_detection_picture HwHiAiUser@192.168.1.2:/home/HwHiAiUser/testfile\n```\n\n```html\nscp -r HwHiAiUser@192.168.1.2:/home/HwHiAiUser/mask_detection/output ~/Pictures\n```\n\n**开发板断电后需要重新进行联网配置：**\n\n主机中：\n\nsu root \n\necho \"1\" > /proc/sys/net/ipv4/ip_forward #允许报文转换\n\niptables -t nat -A POSTROUTING -o enp0s3 -s 192.168.1.0/24 -j MASQUERADE\n\niptables -A FORWARD -i enp0s12u2 -o enp0s3 -m state --state RELATED,ESTABLISHED -j ACCEPT\n\niptables -A FORWARD -i enp0s12u2 -o enp0s3 -j ACCEPT\n\nssh HwHiAiUser@192.168.1.2\n\nsu root\n\nroute add default gw 192.168.1.223 dev usb0\n\nping e.huawei.com\n\n\n\n\n\ninstall_path 请根据实际情况修改:     /home/Ascend/Ascend/ascend-toolkit/20.1.rc1/x86_64-linux\n\nscp -r /home/Ascend/samples/cplusplus/level2_simple_inference/2_object_detection/YOLOV3_coco_detection_picture \n\n \n\n### 版本信息\n\n我的cann版本为**3.1.0**：   export DDK_PATH=/home/Ascend/Ascend/ascend-toolkit/latest/arm64-linux\n\nFirmware and Drivers版本为**1.0.8 alpha**\n\n主板型号是**IT21VDMB**\n\n\n\natc${install_path}：   /home/Ascend/Ascend/ascend-toolkit/latest\n\n```\nexport PATH=/home/Ascend/Ascend/ascend-toolkit/latest/atc/ccec_compiler/bin:/home/Ascend/Ascend/ascend-toolkit/latest/atc/bin:$PATH\nexport ASCEND_OPP_PATH=/home/Ascend/Ascend/ascend-toolkit/latest/opp\nexport ASCEND_AICPU_PATH=/home/Ascend/Ascend/ascend-toolkit/latest\n```\n\n/home/Ascend/Ascend/ascend-toolkit/20.1.rc1/atc/bin/atc\n\n![image-20210401155249903](【毕业设计】基于Atlas-200-DK的障碍物识别系统设计与实现/image-20210401155249903.png)\n\n\n\n![image-20210412101856080](【毕业设计】基于Atlas-200-DK的障碍物识别系统设计与实现/image-20210412101856080.png)\n\n上述命令的含义： https://support.huaweicloud.com/environment-deployment-Atlas200DK202/atlased_04_0033.html\n\n### 具体案例\n\n#### **摄像头**\n\nhttps://gitee.com/ascend/samples/tree/master/cplusplus/level1_single_api/5_200dk_peripheral/ascendcamera  （我的树莓派摄像头版本为V2）\n\ncd $HOME/ascendcamera/out\n\n./main -i -c 1 -o ./output/filename.jpg --overwrite\n\n**presenterserver：** \n\ncd $HOME/ascendcamera/out\n\n./main -v -c 1 -t 60 --fps 20 -w 704 -h 576 -s ip:192.168.1.223:7002/youngyep        (命令行输7002，浏览器输7003)\n\n若要使用presenter server进行实时显示，则需要在开发环境修改ascendcamera中的script/.conf中的presenter_server_ip、presenter_view_ip、presenter_agent_ip修改为虚拟网卡的ip地址：\n\n![image-20210405203242498](【毕业设计】基于Atlas-200-DK的障碍物识别系统设计与实现/image-20210405203242498.png)\n\n![image-20210405203313368](【毕业设计】基于Atlas-200-DK的障碍物识别系统设计与实现/image-20210405203313368.png)\n\n将口罩检测和摄像头的代码通过shell脚本结合：\n\n运行环境：cd ~/mask_detection             ./start_detection.sh\n\n开发环境：scp -r HwHiAiUser@192.168.1.2:/home/HwHiAiUsr/mask_detection/output ~/Pictures\n\n\n\n#### 网线连接\n\n参考： https://blog.csdn.net/qq_44527435/article/details/110441603    我的从机端口号为enp0s3\n\n![image-20210414133624189](【毕业设计】基于Atlas-200-DK的障碍物识别系统设计与实现/image-20210414133624189.png)\n\n\n\n**socket通信**：https://www.cnblogs.com/fnlingnzb-learner/p/8523242.html\n\n在client的代码中填写server的ip地址（我这里是192.168.1.223）\n\n![image-20210414230902559](【毕业设计】基于Atlas-200-DK的障碍物识别系统设计与实现/image-20210414230902559.png)\n\nc++网络编程中socket函数：https://blog.csdn.net/bian_qing_quan11/article/details/71713647\n\n\n\n#### 交叉编译程序\n\n交叉编译c++：aarch64-linux-gnu-gcc 后接cpp文件\n\n编译c++：g++ hello.cpp -o hello\n\n\n\n#### uart和目标检测二合一\n\n![image-20210419093448974](【毕业设计】基于Atlas-200-DK的障碍物识别系统设计与实现/image-20210419093448974.png)\n\n\n\n加入框位置和人的判断后结果（停止1表示目标框在图中间三分之一位置，停止2加上了目标是人的限制条件）\n\n![image-20210420114417098](【毕业设计】基于Atlas-200-DK的障碍物识别系统设计与实现/image-20210420114417098.png)\n\n![image-20210420114546682](【毕业设计】基于Atlas-200-DK的障碍物识别系统设计与实现/image-20210420114546682.png)\n\n\n\n目标检测总共可识别的类别：\n\n![image-20210422091827753](【毕业设计】基于Atlas-200-DK的障碍物识别系统设计与实现/image-20210422091827753.png)\n\n\n\n#### python调用uart接口\n\n```python\nfrom periphery import Serial\n\ndef main():\n    print(\"uart connection test\")\n\n    # Open /dev/ttyAMA1 with baudrate 115200\n    ser = Serial(\"/dev/ttyAMA1\", 115200)\n\n    while 1:\n        print(\"Write to UART\")\n        ser.write(b\"Hello from Atlas 200 DK\\n\")\n        \n    # Read up to 32 bytes, with timeout of 2 seconds\n    readdata = ser.read(32, 2).decode('utf-8')\n    print(f'Received reply: {readdata}')\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\nAtlas开发板联网后输入 pip install python-periphery ，然后运行 python3 uart.py 即可。\n\n[Python的串口通信（pyserial） - 东小东 - 博客园 (cnblogs.com)](https://www.cnblogs.com/dongxiaodong/p/9992083.html)\n\n\n\n##### 相关链接\n\n1.  Atlas 200 DK 外设接口样例 https://gitee.com/ascend/samples/tree/master/cplusplus/level1_single_api/5_200dk_peripheral uart案例可参考该链接，将STM32串口和单板串口对接，TXD接RXD，串口波特率配置成一致，可以通讯。16-白-RX 18-绿-TX 20-黑-GND（即外侧那排的第8个引脚为白，第9个为绿，第10个为黑）\n\n\n\n\n\n\n\n##### 发送格式\n\n0xAE 0xEA {len} {cmd} {x0} {x1} {y0} {y1} {w0} {w1} 0xEF 0xFE\nlen = total - 4 (例如该情况len=0x08)\ncmd = 0x11\nx0 = (x + speed_offset)*100 / 256\nx1 = (x + speed_offset)*100 & 0xff\n\nspeed_offset = 200\n(x典型取值50)\n\n![image-20210428101449468](【毕业设计】基于Atlas-200-DK的障碍物识别系统设计与实现/image-20210428101449468.png)\n\n![image-20210516110157569](【毕业设计】基于Atlas-200-DK的障碍物识别系统设计与实现/image-20210516110157569.png\n\n![image-20210516110020248](【毕业设计】基于Atlas-200-DK的障碍物识别系统设计与实现/image-20210516110020248.png)\n\n\n\n### 避障算法设计\n\n##### 检测区域划分\n\n思路一：只取车前方的检测结果（如只取图像中央三分之一处的检测结果）\n\n思路二：和车道线检测结合到一起，只将车道线范围内的目标识别为障碍物\n\n\n\n\n\n### 项目总体定位\n\n重点在于识别出目标障碍物，而不是躲避障碍物。系统的输出为目标的类型及目标框的位置，优点是采用了搭载华为昇腾处理器的开发板Atlas 200 DK，识别速度非常快，可达几十ms一次。为了方便演示，选用人作为目标障碍物，假定人高度为175，通过拟合来测距，当距离小于设定值时发出停止信号。\n\n\n\n## 总体测试\n\n\n\n摄像头正向\n\n![image-20210516095559800](【毕业设计】基于Atlas-200-DK的障碍物识别系统设计与实现/image-20210516095559800.png)\n\n\n\n运行程序：\n\n```\nssh HwHiAiUser@192.168.1.2\ncd /home/HwHiAiUser/testfile/xuezhang_test/python/level2_simple_inference/2_object_detection/YOLOV3_coco_detection_picture/src\npython3 object_detect.py\n```\n\n\n\n程序运行截图\n\n![image-20210516100236140](【毕业设计】基于Atlas-200-DK的障碍物识别系统设计与实现/image-20210516100236140.png)\n\nuart传输的数据\n\n![image-20210516112012898](【毕业设计】基于Atlas-200-DK的障碍物识别系统设计与实现/image-20210516112012898.png)\n\n\n\n![image-20210516111952166](【毕业设计】基于Atlas-200-DK的障碍物识别系统设计与实现/image-20210516111952166.png)\n\n\n","tags":["深度学习","神经网络","Atlas","障碍物识别","目标识别"],"categories":["毕业设计"]},{"title":"考研感悟","url":"/2021/03/02/随笔/考研感悟/","content":"\n#### 2021/3/2\n\n考研分数出来了，考的很糟糕，政治69，英语一71，数学一102，专业课127，总分369。\n\n按照目前群里的统计，400分以上的已经远超往年，我很大概率不会过线了。我爸想让我调剂，我有点想直接去找工作了。\n\n<!--more-->\n\n一时间不知道如何是好，辛辛苦苦准备了差不多一年，最后的结果就是这样吗？本来估分起码有个三百八九十分，结果谁知数学给了我当头一棒，这一棒瞬间把我打成了一个没有梦想的咸鱼。或许自己真的是数学天赋不够吧，毕竟高考也是数学考砸了。付出了那么多的时间，反而还没别人考的好。或许我真该反思一下是不是自己做了太多的无用功。\n\n或许一开始就不应该选择考研这条路。当初凭着一腔热血以及对步入社会的恐惧，选择了考研，硬撑着颈椎病走到了现在，看着别的同学能坐那不动学一天，好生羡慕，而我顶多坐一个小时就必须出去活动一下，不然疼的受不了。跟别人说我脖子疼，大多也是笑笑，只有得过颈椎病的人才能体会我的难处。\n\n当然，这也并不是说为成绩考差找借口，我承认数学没考好是我自己的原因，我也确确实实尽到了我能做的最大努力。只是确实心有不甘，明明是保研边缘的成绩，最后连研都没考上，做了一年的无用题，真的是对不起我自己，也对不起大家对我的厚望。有时候，我常常想，要是我一直成绩就很差那该多好啊，那样大家就不会对我期望那么高了，我找个工资一般的工作也不会有人说什么了，我是不是就可以做我想做的事情了呢？（不过，我到底想做什么呢，哈哈我自己也不知道，我可能只是想混吧）\n\n哎，明明感觉心里有很多东西想说，可是真要我来写，又不知道写什么了，要是研真没考上，找几个兄弟去喝酒吧，或许这样我能把堵在心中的话说出来吧。记得以前我说过，要是什么时候我开始喝酒了，那就证明我向这个世界妥协了。我真的有点累了，虽然确实很想为这个世界做点什么，做点什么能让后人记得的好事。小时候以为自己以后能够很厉害，自己的qq号昵称都是 I am the one and only (我独一无二) 。而现在才发现，自己不过是一个毫不起眼的小角色罢了，特别是在东九下课的时候，上千人蜂拥而出，在这人潮中，所有人都和我差不多，仅仅在这些人中，我就已经被淹没的无影无踪，只能随着人潮慢慢前进。\n\n​\t![image-20210302221734426](考研感悟/image-20210302221734426.png)\n\n今天在一本书中看到上面一段话，有人又成功考上了研，又拿了几个好offer，又谈了恋爱，而我一无所有。\n\n时候不早了，教室只有我一个人了，下次再写吧。\n\n![image-20210302222157963](考研感悟/image-20210302222157963.png)\n\n#### 2021/3/5\n\n这两天感觉好了很多，决定一条路走到黑了，不管找工作的事情了，这让我轻松许多。在小木虫上发布了我的调剂信息后，一个中科院近物所的老师加了我，很希望我去他们那。同时曾老师也帮我找了一些调剂信息，虽然不太行，但还是投了一个西电的。总之是有保底的了，那就加油冲吧！\n\n#### 2021/3/12\n\n今年校线出了，还是330分，不过校线也没啥太大的意义。今天搞完了毕设的开题答辩，可以短期内不用管毕设的事情了，接下来核心任务还是去认真准备复试，如果上天真的给了我这个机会，而我却没有好好珍惜的话，那才是真的难受。既然一切都还有希望，那么在最后揭晓的那一刻来临之前，都要努力去拼一拼啊！还有那么多人为我加油鼓气呢！（在这里真心的感谢为我鼓起和提供帮助的人）我怎么能自己先放弃了呢。明天得认真看笔试了。\n\n关于找工作的事情，可以先看看嵌入式开发的方向，毕竟我本科基本都是在做嵌入式，对于我来说，这个方向所需的准备时间也少一些，没进复试再找工作！现在要分清孰轻孰重，学长说让我好好准备，先别管毕设了，复试逆袭的可能性还很大。\n\n同时，每天晚上开始梳理以前电赛或者课设所做的东西，并整理成md文档发到博客上吧，每天一个项目！\n\n噗，现在看上面3月2日的记录，感觉自己好憨啊，没事儿就别瞎想，做好当下的事情！累了就去运动！加油！\n\n#### 2021/3/13\n\n今天中科院的老师给我发消息，说是下周末他们搞线下复试，问我去不去。我想，就算上交没过线，也不会去他们那里吧，去了的话，我或许会后悔很久很久吧。终究还是想去大城市闯一闯啊。我这人有个毛病，似乎很难多线程，如果有一件什么事情等着我去完成，那我就中途不想管其他事情了。\n\n希望能进复试吧！我相信天无绝人之路，无论结果如何，总会走下去的。听习大大的话，不忘初心啊！\n\n#### 2021/3/29\n\n距离复试完有好几天了，这几天感觉发生了好多好多事啊！\n\n首先，很幸运，我进入了复试，今年上交分数线**356分**，没想到这么多高分的情况下，分数线只比去年高了一分，真可以称的上是奇迹再现了！感谢之前在我感到最黑暗的时候鼓励了我的好朋友们！果然，灯不会在，任何时候为我开，是好是坏，该不该，还没来的不想猜~~ 确实很多时候，做好眼前的事就好，不用去猜那些还没有发生的事情。毕竟，谁也说不清楚未来会怎样。\n\n确定进入复试后，自然是疯狂的学，因为复试线发布是15号，线下复试，21号笔试，22号面试。于是我20号便和我爸一起去了上海。终于是成功来到我心心念念了一年的真正的大城市，由于直接坐地铁到了闵行，当我真正踏上这片土地时，也并未觉得有什么不同，心想，上海就这？哈哈。\n\n当21号来到上交时，看到曾经在我电脑桌面的校门真正的出现在我的眼前，顿时觉得好像有那么一点点不真实。有一说一，上交的建筑风格确实完爆我科。第一天是下午笔试，往年都是一个小时，今年改成了俩小时，不过还好，并没有更改题型，还是50道选择题，那这就没啥好说的了，毕竟选择题怎么都可以做，不会考很深入。笔试考完确实轻松了许多，又赶紧回宾馆准备面试。\n\n面试的简历是非常重要的，好在我很早就在开始写我的简历，而且把简历里面可能问到的每个点都思考了一遍，并写在纸上。我被分在了第二天上午，一大早7点多我就到面试地点了，去的时候教室还一个人都没有，谁知面试顺序是按成绩排的，一直等到中午11点半才到我。\n\n------\n\n（下面的面试过程考虑后面出一个对话版，现在可能比较乱，凑合看看我刺激的面试历程吧！\n\n​\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t——**论我是如何在面试时就斩获4位老师青睐的？**）\n\n一进门，一共5位面试老师（用ABCDE来代称吧，有些问题记不清是哪个老师问的了，就不明写了）和一名学生（负责收我们的资料），老师们正在互相交流，好像很随意，也没有全把目光盯到我身上。我将提前准备好的简历和成绩单发给老师们，然后站到讲台上（不同教室不一样，有的教室学生坐着），鞠躬说道，老师好！然后**A老师**开始用英文提问，第一个问题是让我介绍我的毕设。这个我有所准备，所以答上来了，不过由于很紧张，也是吞吞吐吐的。接下来，谁知他让我介绍我毕设里面的一个设备（Atlas 200 DK），啊这，这谁答的上来啊，问这么细，我知道用中文怎么说，但是让我说英文，我无能为力，憋了半天说了个AI compute machine。A老师步步紧逼，继续问我具体有什么功能，我也记不清当时说了啥，反正嗯嗯啊啊了很久，A老师也没继续问了，英语问答环节到此结束。（其实后来想想，这个环节其实也没多重要，我感觉老师就是想留点时间看看我的简历，我吞吞吐吐的时候老师也并没在意，大多都是盯着我的简历在看。）\n\n接着**A老师**就用中文问起了我的电赛经历，让我介绍一下电赛的项目，这可是我花大力气准备了的，当然丝毫不慌，把功能讲了一遍。老师们好像对这很感兴趣，又继续问我原理，（只要是自己真正做了的项目，遇到懂行的老师是真的好，我就是怕老师不问，只要他问，我都能答上来），这我自然是把原理讲了一通，老师们十分满意，脸上都露出了笑容，我也进入了闲聊模式，放松下来了。然后老师又让我介绍一下软件课设，我也就先介绍了一下功能，然后老师问我为什么数据库要选择mongodb，我很实在的说这是我队友负责的部分，我只负责前端的工作，老师也没有继续深究。\n\n后面老师又看到我下面写的大一大二加入学校的电工基地，做的电赛的培训项目，（我写了好多项目）老师随便抽了一个红外线信号传输的项目，问我怎么实现的，（哈哈，幸好我把每个项目都准备了一遍，而且这些都是我真正做过的项目，自然是手到擒来，还是那句话，就怕他不问），我回答原理和结构后，老师们也很高兴，接着跟我讨论里面为什么要用到我说的方法，我依然答上来了。项目的问题基本就到此结束，后面就真的是纯闲聊了。\n\nA老师问我以后想做什么方向，我说只要不是纯硬件都可以，毕竟硬件有时候太玄了！老师笑着总结我的话：”那意思就是，你大一大二搞了两年硬件搞伤心了，想做软件了，可以这么理解吧？那我看看你软件的课程学的怎么样，哦！python成绩挺高的嘛！“我说python是最后课设用pygame做了个植物大战僵尸的游戏。C老师问，那你觉得verilog是属于硬件还是软件呢？我说，应该也算硬件吧，毕竟它叫硬件编程语言嘛。\n\n然后E老师看到我参加了很多课外活动，问我是怎么分配时间的，我说周六周日都会去实验室学电赛的培训，时间安排挺紧的。B老师看到我的绩点，很疑惑的问我绩点这么高怎么没保研？而且成绩排年级前27%。我笑着说大概要前25%才能保研（上交保研率更高，我这个排名在上交就保研了）。老师也笑着说那刚好差一点啊，很可惜。又看到我初试成绩不高，问我排多少名，我说排114，（一共招120个），老师们又笑着说那你这和你保研一样都是边缘啊！说我就是数学考差了点。我也答道确实如此，数学成绩出乎了我的预料。又问我有没有联系导师，我说联系了一个，但是那个老师说不确定有没有名额。\n\n基本就是这些，老师看了下时间说差不多了，我道谢后下去，**B老师笑着对我说祝我好运**。然后老师们都把简历递给了我，但是到**C老师的时候，他说要把我的简历留一份**在这儿，那我自然是同意，旁边的**B老师**对他说，学校规定是不能留学生简历的！几个老师笑了笑，最后还是留下了简历。我走出教室门的时候，**A老师又跟着我出来，跟我说表现不错，让我记一下他电话**，等会跟我打过来。（哈哈，内心极其激动。）\n\n谁知这还没完，本来面试完就差不多12点多了，我出去和我爸（学校不让家长进去，辛苦我爸一直在学校外等我了）找了家餐馆，刚准备开吃，一个电话打过来，就是**A老师**，问我现在在哪，想跟我谈谈，我说正在跟我爸吃饭，然后他说他1点半有个会，让我3点去他办公室找他交流交流。我接完电话，没吃几口菜，又来一个电话（**B老师**），说：“你还记不记得我，我是那个跟你说了祝你好运的老师，想邀请你加入我们团队……”。我加了他微信，他给我发了一个链接让我报名参加他们晚上的所面（可是我因为复试之前联系的老师（叫**0老师**吧）的所面也是在这个晚上，我看在前面老师跟我打电话聊了很久的份上，先去了他那，这个后面再说）。我再次接完电话，又回去没吃几口饭，一个电话再次响起（这次是**C老师**），我一样接完电话加了微信。最后，总算是清净了一会儿，安安心心地吃完了饭。\n\n下午和A老师聊了一个多小时，主要是他在讲，跟我讲他们实验室的研究方向，以及回答我的一些小问题，总之聊的还是很愉快的。聊完后我走到电院草坪上，静静地躺着，终于可以休息一小会儿了！\n\n紧接着，晚上又去参加**0老师**的所面，不过他居然不在，是其他老师面的我，这个所的老师似乎对我的项目并不感兴趣，甚至有一个女老师居然指着我的电赛项目说：”我看你这也没做过什么实际的东西啊，也就是买几个模块来拼一拼而已“（我TM瞬间不想聊下去了，不仅不懂，还在这随便诋毁别人的项目，估计这老师连电赛是啥都不知道吧）。总之，我对这个研究所的印象极其差，非常后悔来这里面试。也因为来了这面试，我错过了B老师的所面，后面问他时，他说名额已经确定，说我怎么不早点跟他说，感到非常可惜。\n\n说实话，这个所面对我的打击很大，有点不想再面试了。不过，也让我明白，找一个懂你的老师是多么重要，我很幸运，复试面试我的5位老师都很好，都很懂我。（我就跟A老师发消息说想去他那，结果谁知，他又说还会安排明天下午让我我见他手下两个小老板）还是不能自己放弃机会啊！最后还是决定去下一个所试一试。（这个研究所是我随便报的，去聊的也很随意，没啥意思，就不多说）。22号的面试就正是结束了，也大概9点多了。\n\n第二天上午好好睡了觉（其实也没睡太着，多在床上躺了会儿而已），结果刚洗漱完，又接到一个电话，也是我之前随便投的一个研究所，是一个女老师（叫**F老师**吧）打来的电话，问我还记不记得他们所，问我还在不在上海，在的话下午想让我到他们那聊聊，我说我下午约了2点面试。然后她说，你肯定不会聊一下午吧，你聊完了跟我发消息再过来。我看老师这般邀请，自然不能拒绝。\n\n下午去见了A老师手下的两个小老板，有一个我很不喜欢，感觉很严肃，而且说还得再测我一轮，给我一个论文，让我一周内复现。我心想这也太搞了吧，面了这么多次还要测试，感觉不信任我，虽然我很喜欢A老师（他是大老板，不会直接带学生），但是不喜欢这个小老板，还是不太想去他们这了。\n\n跟他们聊完后，又发现B老师跟我打电话，说学校多给了他一个名额，问我想不想去，然后让我加他手下一个博士生，跟博士生用微信聊了会儿，说要跟我保持联系。此时我本来想的是，已经有这么多老师对我感兴趣了，要不不去F老师那面试了吧，可到了差不多4点时，F老师又跟我发微信问我情况，让我别急，他们等我去。我心想，老师这么热情，还是去一下吧，不能自己放弃机会啊。\n\n去到F老师那，老师让我坐着等会儿，过一会儿来了两个男老师，**没想到其中一个就是当初面试我的D老师**。（其实我开始以为会是很多同学都来这排队复试，没想到就我一个）这两位老师基本没问我什么技术问题，就是闲聊，说很看好我，还问我喜欢唱谁的歌，室友情况怎么样等等问题（感觉好像是在做性格测试）。总之，这两个老师是我聊的最开心的。\n\n至此，全部面试结束。我和我爸晚上去外滩看了看，然后第二天坐飞机回家了。\n\n回到家，下午我躺在床上补觉，醒来的时候，发现又有电话没接，群里也炸开了锅。原来是复试没通过的收到了死亡短信，我看了看没收到，应该是过了。电话是F老师打来的，还是问我想不想去他们那儿。最终经过我深思熟虑，**选择了F老师的研究所。**\n\n------\n\n这么多场面试下来，也算是涨了很多经验。也让我深刻地认识到，**曾经的努力都没有白费**（大学没白过就足够了）！这波不亏！以后也要继续努力！\n\n------\n\n哈哈，现在看当最开始写的东西，好丧啊，好傻>.<  还是乐观点好啊！\n\n","tags":["考研"],"categories":["随笔"]},{"title":"常用hexo博客操作","url":"/2021/02/12/软件使用/常用hexo博客操作/","content":"\n### 常用hexo指令\n\n**hexo s** (hexo server) : 启动本地服务器，用于预览主题。默认地址： http://localhost:4000/\n\n**hexo g** (hexo generate) : 生成网站静态文件到默认设置的 public 文件夹。\n\n**hexo d** (hexo deploy) : 自动生成网站静态文件，并部署到设定的仓库。\n\n**hexo clean** : 清除缓存文件 db.json 和已生成的静态文件 public。\n\n**hexo new** + md文件名称 ：会在/source/__posts目录下生成md文件以及创建同名的文件夹。\n\n**hexo new page** + 页面名称 ：新建一个页面，默认地址为 主页地址/页面名称。\n\n<!--more-->\n\n### 设置hexo首页只显示部分摘要（不显示全文）\n\n法一：在文章的`front-matter`中添加`description`，其中`description`中的内容就会被显示在首页上，其余一律不显示。\n\n```\n---\ntitle: 让首页显示部分内容\ndate: 2020-02-23 22:55:10\ndescription: 这是显示在首页的概述，正文内容均会被隐藏。\n---\n```\n\n法二：在需要截断的地方加入：\n\n```\n<!--more-->\n```\n\n首页就会显示这条以上的所有内容，隐藏接下来的所有内容。\n\n\n\n### 好用的插件\n\n隐藏文章的插件https://github.com/printempw/hexo-hide-posts\n\nhexo显示pdfhttps://blog.csdn.net/qq_43701912/article/details/107291518  ——我试了很久都无效\n\n\n\n### hexo博客中提供文件下载链接\n\n在博客的suorce文件夹下放入文件，路径为主页路径+文件在suorce文件夹中的路径。\n\n![image-20210314002727138](常用hexo博客操作/image-20210314002727138.png)\n\n如这样的路径就是https://youngyyp.github.io/download/test1.doc\n\n\n\n### 修改文章`front-matter`模板\n\n修改blog/scaffolds/post.md文件即可\n\n\n\n\n\n## 博客迁移\n\n由于本人最近换了电脑，需要将之前的hexo博客迁移至新电脑，故记录下操作流程。最终结果令人震惊。\n\n### 安装hexo\n\n第一步先在新电脑搭建好环境。\n\n环境搭建参考博客[hexo+github搭建博客(超级详细版，精细入微)_过客~励む-CSDN博客](https://blog.csdn.net/victoryxa/article/details/103733655?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control)\n\n### 注意事项\n\n[使用Hexo-asset-image插件导致静态图片路径出错-Hexo采坑(二)_Java Developer Blog-CSDN博客](https://blog.csdn.net/qq_42009500/article/details/118788129)\n\n### 最终结果\n\n我晕，弄了好久图片显示还是有bug，一气之下就想着能不能**直接把原来电脑的blog文件夹整个复制过来，然后hexo g -d**（当然是在搭建好环境的基础上），居然成功上传，而且不用再重新安装插件，而且没有bug！阿哲！这么简单的流程为什么csdn上的大佬们搞这么复杂呢？","tags":["hexo指令"],"categories":["博客"]}]