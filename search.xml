<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>吴恩达深度学习课程第一课_神经网络与深度学习</title>
      <link href="2021/02/09/%E5%90%B4%E6%81%A9%E8%BE%BE%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%80%E8%AF%BE_%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%B8%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
      <url>2021/02/09/%E5%90%B4%E6%81%A9%E8%BE%BE%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%80%E8%AF%BE_%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%B8%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>笔记目录<a href="http://www.ai-start.com/dl2017/">http://www.ai-start.com/dl2017/</a></p><p>课后习题1（仅含选择题，不过界面更好）<a href="https://www.kesci.com/mw/project/5e20243e2823a10036b542da">https://www.kesci.com/mw/project/5e20243e2823a10036b542da</a></p><p>课后习题2（含选择题和编程题）<a href="https://blog.csdn.net/u013733326/article/details/79827273">https://blog.csdn.net/u013733326/article/details/79827273</a></p><h1 id="第一周-深度学习引言"><a href="#第一周-深度学习引言" class="headerlink" title="第一周:深度学习引言"></a>第一周:深度学习引言</h1><h3 id="神经网络简述"><a href="#神经网络简述" class="headerlink" title="神经网络简述"></a>神经网络简述</h3><p>在有关神经网络的文献中，你经常看得到这个函数。从趋近于零开始，然后变成一条直线。这个函数被称作<strong>ReLU激活函数</strong>，它的全称是Rectified Linear Unit。</p><p>对于图像应用，我们经常在神经网络上使用<strong>卷积(Convolutional Neural Network)**，通常缩写为</strong>CNN**<br>对于序列数据，经常使用<strong>RNN</strong>，一种<strong>递归神经网络（Recurrent Neural Network）</strong></p><p><strong>结构化数据</strong>意味着数据的基本数据库。例如在房价预测中，你可能有一个数据库，有专门的几列数据告诉你卧室的大小和数量，这就是结构化数据。或预测用户是否会点击广告，你可能会得到关于用户的信息，比如年龄以及关于广告的一些信息，然后对你的预测分类标注，这就是结构化数据，意思是每个特征，比如说房屋大小卧室数量，或者是一个用户的年龄，都有一个很好的定义。</p><p><strong>非结构化数据</strong>是指比如音频，原始音频或者你想要识别的图像或文本中的内容。这里的特征可能是图像中的像素值或文本中的单个单词。</p><h1 id="第二周：神经网络的编程基础"><a href="#第二周：神经网络的编程基础" class="headerlink" title="第二周：神经网络的编程基础"></a>第二周：神经网络的编程基础</h1><p>逻辑回归**(Logistic Regression)<strong>是一个用于二分类(**binary classification</strong>)的算法。首先我们从一个问题开始说起，这里有一个二分类问题的例子，假如你有一张图片作为输入，比如这只猫，如果识别这张图片为猫，则输出标签1作为结果；如果识别出不是猫，那么输出标签0作为结果。</p><p><img src="https://raw.githubusercontent.com/youngyyp/blogpicture/master/img/image-20210130230331844.png" alt="image-20210130230331844"></p><p>本节主要介绍逻辑回归的<strong>Hypothesis Function</strong>（假设函数）</p><p><img src="https://raw.githubusercontent.com/youngyyp/blogpicture/master/img/image-20210130170346158.png" alt="image-20210130170346158"></p><p>逻辑回归的<strong>代价函数（Logistic Regression Cost Function）</strong></p><p>我们通过这个称为的损失函数，来衡量预测输出值和实际值有多接近。一般我们用预测值和实际值的平方差或者它们平方差的一半，但是通常在逻辑回归中我们不这么做，因为当我们在学习逻辑回归参数的时候，会发现我们的优化目标不是凸优化，只能找到多个局部最优值，梯度下降法很可能找不到全局最优值，虽然平方差是一个不错的损失函数，但是我们在逻辑回归模型中会定义另外一个损失函数。</p><p>我们在逻辑回归中用到的<strong>损失函数</strong>是：<img src="https://raw.githubusercontent.com/youngyyp/blogpicture/master/img/image-20210130232244430.png" alt="image-20210130232244430"></p><p><strong>损失函数是单个样本的损失，成本函数是数据集总的损失，都是越小越好。</strong></p><h3 id="梯度下降法（Gradient-Descent）"><a href="#梯度下降法（Gradient-Descent）" class="headerlink" title="梯度下降法（Gradient Descent）"></a>梯度下降法（Gradient Descent）</h3><p><img src="https://raw.githubusercontent.com/youngyyp/blogpicture/master/img/image-20210130232432229.png" alt="image-20210130232432229"></p><h3 id="Python-中的广播（Broadcasting-in-Python）"><a href="#Python-中的广播（Broadcasting-in-Python）" class="headerlink" title="Python 中的广播（Broadcasting in Python）"></a>Python 中的广播（Broadcasting in Python）</h3><p>numpy两个数组的相加、相减以及相乘都是<strong>对应元素</strong>之间的操作。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown_skills</title>
      <link href="2021/01/27/markdown_skills/"/>
      <url>2021/01/27/markdown_skills/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h1><!-- 这是一行注释 --><div style="display: none">哈哈我是注释，不会在浏览器中显示。</div><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题  "></a>六级标题  <!--最多6级标题--></h6><h1 id=""><a href="#" class="headerlink" title=""></a></h1><h1 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h1><ul><li><input disabled="" type="checkbox"> 任务一 未做任务 <code>- + 空格 + [ ]</code></li><li><input checked="" disabled="" type="checkbox"> 任务二 已做任务 <code>- + 空格 + [x]</code><h1 id="-1"><a href="#-1" class="headerlink" title=""></a></h1><h1 id="首行缩进"><a href="#首行缩进" class="headerlink" title="首行缩进"></a>首行缩进</h1>【1】  或  //全角<br>【2】  或  //半角<br>【3】 &nbsp;或&nbsp;  //半角之半角  <!-- 换行需要每行后加两个空格 --></li></ul><h1 id="对齐方式-（支持部分html语法）"><a href="#对齐方式-（支持部分html语法）" class="headerlink" title="对齐方式 （支持部分html语法）"></a>对齐方式 （支持部分html语法）</h1><center>行中心对齐</center><p align="left">行左对齐</p><p align="right">行右对齐</p><h1 id="-2"><a href="#-2" class="headerlink" title=""></a></h1><p><em>斜体</em> 或 <em>斜体</em><br><strong>粗体</strong><br><strong><em>加粗斜体</em></strong><br><del>删除线</del><br>++下划线++<br>==背景高亮==</p><h1 id="超链接、页内链接、自动链接、注脚"><a href="#超链接、页内链接、自动链接、注脚" class="headerlink" title="超链接、页内链接、自动链接、注脚"></a>超链接、页内链接、自动链接、注脚</h1><h2 id="行内式"><a href="#行内式" class="headerlink" title="行内式"></a>行内式</h2><p>欢迎阅读 <a href="https://www.jianshu.com/u/16d77399d3a7" title="择势">择势勤</a></p><h2 id="参考式"><a href="#参考式" class="headerlink" title="参考式"></a>参考式</h2><p>我经常去的几个网站<a href="http://www.google.com/">Google</a>、<a href="http://www.leanote.com/">Leanote</a>。</p><h2 id="注脚"><a href="#注脚" class="headerlink" title="注脚"></a>注脚</h2><p>使用 Markdown<a href="Markdown%E6%98%AF%E4%B8%80%E7%A7%8D%E7%BA%AF%E6%96%87%E6%9C%AC%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80">^1</a>可以效率的书写文档, 直接转换成 HTML<a href="Hyperssssssssssssssssssss%E4%B8%8D%E8%83%BD%E5%B8%A6%E7%A9%BA%E6%A0%BC%EF%BC%9F">^2</a>。</p><h1 id="无序列表、有序列表、定义型列表"><a href="#无序列表、有序列表、定义型列表" class="headerlink" title="无序列表、有序列表、定义型列表"></a>无序列表、有序列表、定义型列表</h1><ul><li>无序列表项 一</li></ul><ul><li>无序列表项 二</li></ul><ul><li>无序列表项 三  </li></ul><ul><li>无序列表项 一</li></ul><ol><li>有序列表项 一</li><li>有序列表项 二</li><li>有序列表项 三</li></ol><p><img src="/2021/01/27/markdown_skills/2021-01-27-15-35-30.png"><br>注意:   存放图片的文件夹名称要和title一样<br><a href="https://www.etyang.com/2020/10/15/vscode/">vscode贴图</a><br>[hexo显示图片]<a href="https://blog.csdn.net/cnds123321/article/details/109085776">https://blog.csdn.net/cnds123321/article/details/109085776</a></p><h1 id="多级引用"><a href="#多级引用" class="headerlink" title="多级引用"></a>多级引用</h1><blockquote><blockquote><blockquote><p>请问 Markdwon 怎么用？ - 小白<br>自己看教程！ - 愤青<br>教程在哪？ - 小白</p></blockquote></blockquote></blockquote><h1 id="字体格式"><a href="#字体格式" class="headerlink" title="字体格式"></a>字体格式</h1><p><font face="黑体">我是黑体字</font><br><font face="微软雅黑">我是微软雅黑</font><br><font face="STCAIYUN">我是华文彩云</font><br><font color="#0099ff" size="12" face="黑体">黑体</font><br><font color="gray" size="5">gray</font><br><font color="#00ffff" size="3">null</font></p><h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><p>C语言里的函数 <code>scanf()</code> 怎么使用？</p><pre><code>include &lt;stdio.h&gt; //这个点是键盘左上角的点int main(void){printf("Hello world\n");}</code></pre><hr><h1 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h1><pre><code class="mermaid">graph TDA[方形] --&gt; B(圆角)    B --&gt; C{条件a}    C --&gt; |a=1| D[结果1]    C --&gt; |a=2| E[结果2]    F[竖向流程图]</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 基础技能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/01/26/hello-world/"/>
      <url>2021/01/26/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is my very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new "My New Post"</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
